0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', '-g' ]
2 info using npm@1.3.10
3 info using node@v0.10.25
4 verbose cache add [ '.', null ]
5 verbose cache add name=undefined spec="." args=[".",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: '.',
6 verbose parsed url   path: '.',
6 verbose parsed url   href: '.' }
7 silly lockFile 3a52ce78- .
8 verbose lock . /home/coder/.npm/3a52ce78-.lock
9 verbose tar pack [ '/home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz',
9 verbose tar pack   '.' ]
10 verbose tarball /home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz
11 verbose folder .
12 silly lockFile 1f1177db-tar tar://.
13 verbose lock tar://. /home/coder/.npm/1f1177db-tar.lock
14 silly lockFile 3167dd64-94331-0-7328927780035883-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz
15 verbose lock tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz /home/coder/.npm/3167dd64-94331-0-7328927780035883-tmp-tgz.lock
16 silly lockFile 1f1177db-tar tar://.
17 silly lockFile 1f1177db-tar tar://.
18 silly lockFile 3167dd64-94331-0-7328927780035883-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz
19 silly lockFile 3167dd64-94331-0-7328927780035883-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz
20 verbose tar unpack /home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz
21 silly lockFile d1f8daa4-94331-0-7328927780035883-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package
22 verbose lock tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package /home/coder/.npm/d1f8daa4-94331-0-7328927780035883-package.lock
23 silly lockFile 3167dd64-94331-0-7328927780035883-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz
24 verbose lock tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz /home/coder/.npm/3167dd64-94331-0-7328927780035883-tmp-tgz.lock
25 silly gunzTarPerm modes [ '755', '644' ]
26 silly gunzTarPerm extractEntry package.json
27 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
28 silly gunzTarPerm extractEntry app.js
29 silly gunzTarPerm modified mode [ 'app.js', 436, 420 ]
30 silly gunzTarPerm extractEntry getPurchases.js
31 silly gunzTarPerm modified mode [ 'getPurchases.js', 436, 420 ]
32 silly gunzTarPerm extractEntry getSalesData.js
33 silly gunzTarPerm modified mode [ 'getSalesData.js', 436, 420 ]
34 silly gunzTarPerm extractEntry leastPopular.js
35 silly gunzTarPerm modified mode [ 'leastPopular.js', 436, 420 ]
36 silly gunzTarPerm extractEntry makeCategories.js
37 silly gunzTarPerm modified mode [ 'makeCategories.js', 436, 420 ]
38 silly gunzTarPerm extractEntry makeObject.js
39 silly gunzTarPerm modified mode [ 'makeObject.js', 436, 420 ]
40 silly gunzTarPerm extractEntry popular.js
41 silly gunzTarPerm modified mode [ 'popular.js', 436, 420 ]
42 silly gunzTarPerm extractEntry profitMap.js
43 silly gunzTarPerm modified mode [ 'profitMap.js', 436, 420 ]
44 silly gunzTarPerm extractEntry files/purchases.csv
45 silly gunzTarPerm modified mode [ 'files/purchases.csv', 436, 420 ]
46 silly gunzTarPerm extractEntry files/week1.csv
47 silly gunzTarPerm modified mode [ 'files/week1.csv', 436, 420 ]
48 silly gunzTarPerm extractEntry files/week2.csv
49 silly gunzTarPerm modified mode [ 'files/week2.csv', 436, 420 ]
50 silly gunzTarPerm extractEntry files/week3.csv
51 silly gunzTarPerm modified mode [ 'files/week3.csv', 436, 420 ]
52 silly gunzTarPerm extractEntry files/week4.csv
53 silly gunzTarPerm modified mode [ 'files/week4.csv', 436, 420 ]
54 silly gunzTarPerm extractEntry views/index.html
55 silly gunzTarPerm modified mode [ 'views/index.html', 436, 420 ]
56 silly gunzTarPerm extractEntry views/layouts/display.handlebars
57 silly gunzTarPerm modified mode [ 'views/layouts/display.handlebars', 436, 420 ]
58 silly gunzTarPerm extractEntry profitable.html
59 silly gunzTarPerm modified mode [ 'profitable.html', 436, 420 ]
60 silly gunzTarPerm extractEntry test/spaza_test.js
61 silly gunzTarPerm modified mode [ 'test/spaza_test.js', 436, 420 ]
62 silly lockFile d1f8daa4-94331-0-7328927780035883-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package
63 silly lockFile d1f8daa4-94331-0-7328927780035883-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package
64 silly lockFile 3167dd64-94331-0-7328927780035883-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz
65 silly lockFile 3167dd64-94331-0-7328927780035883-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/tmp.tgz
66 verbose tar pack [ '/home/coder/.npm/handlebars/4.0.5/package.tgz',
66 verbose tar pack   '/home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package' ]
67 verbose tarball /home/coder/.npm/handlebars/4.0.5/package.tgz
68 verbose folder /home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package
69 silly lockFile d1f8daa4-94331-0-7328927780035883-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package
70 verbose lock tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package /home/coder/.npm/d1f8daa4-94331-0-7328927780035883-package.lock
71 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
72 verbose lock tar:///home/coder/.npm/handlebars/4.0.5/package.tgz /home/coder/.npm/2eb9a385-npm-handlebars-4-0-5-package-tgz.lock
73 silly lockFile d1f8daa4-94331-0-7328927780035883-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package
74 silly lockFile d1f8daa4-94331-0-7328927780035883-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600394331-0.7328927780035883/package
75 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
76 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
77 silly lockFile 51f124a8-der-npm-handlebars-4-0-5-package /home/coder/.npm/handlebars/4.0.5/package
78 verbose lock /home/coder/.npm/handlebars/4.0.5/package /home/coder/.npm/51f124a8-der-npm-handlebars-4-0-5-package.lock
79 silly lockFile 51f124a8-der-npm-handlebars-4-0-5-package /home/coder/.npm/handlebars/4.0.5/package
80 silly lockFile 51f124a8-der-npm-handlebars-4-0-5-package /home/coder/.npm/handlebars/4.0.5/package
81 verbose tar unpack /home/coder/.npm/handlebars/4.0.5/package.tgz
82 silly lockFile c5e703b8-der-npm-handlebars-4-0-5-package tar:///home/coder/.npm/handlebars/4.0.5/package
83 verbose lock tar:///home/coder/.npm/handlebars/4.0.5/package /home/coder/.npm/c5e703b8-der-npm-handlebars-4-0-5-package.lock
84 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
85 verbose lock tar:///home/coder/.npm/handlebars/4.0.5/package.tgz /home/coder/.npm/2eb9a385-npm-handlebars-4-0-5-package-tgz.lock
86 silly gunzTarPerm modes [ '755', '644' ]
87 silly gunzTarPerm extractEntry package.json
88 silly gunzTarPerm extractEntry app.js
89 silly gunzTarPerm extractEntry getPurchases.js
90 silly gunzTarPerm extractEntry getSalesData.js
91 silly gunzTarPerm extractEntry leastPopular.js
92 silly gunzTarPerm extractEntry makeCategories.js
93 silly gunzTarPerm extractEntry profitMap.js
94 silly gunzTarPerm extractEntry popular.js
95 silly gunzTarPerm extractEntry makeObject.js
96 silly gunzTarPerm extractEntry files/purchases.csv
97 silly gunzTarPerm extractEntry files/week1.csv
98 silly gunzTarPerm extractEntry files/week2.csv
99 silly gunzTarPerm extractEntry files/week3.csv
100 silly gunzTarPerm extractEntry files/week4.csv
101 silly gunzTarPerm extractEntry profitable.html
102 silly gunzTarPerm extractEntry test/spaza_test.js
103 silly gunzTarPerm extractEntry views/index.html
104 silly gunzTarPerm extractEntry views/layouts/display.handlebars
105 silly lockFile c5e703b8-der-npm-handlebars-4-0-5-package tar:///home/coder/.npm/handlebars/4.0.5/package
106 silly lockFile c5e703b8-der-npm-handlebars-4-0-5-package tar:///home/coder/.npm/handlebars/4.0.5/package
107 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
108 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
109 verbose chmod /home/coder/.npm/handlebars/4.0.5/package.tgz 644
110 verbose chown /home/coder/.npm/handlebars/4.0.5/package.tgz [ 1001, 1001 ]
111 silly lockFile 3a52ce78- .
112 silly lockFile 3a52ce78- .
113 silly resolved [ { name: 'handlebars',
113 silly resolved     barename: 'handlebars',
113 silly resolved     version: '4.0.5',
113 silly resolved     description: 'Handlebars provides the power necessary to let you build semantic templates effectively with no frustration',
113 silly resolved     homepage: 'http://www.handlebarsjs.com/',
113 silly resolved     keywords: [ 'handlebars', 'mustache', 'template', 'html' ],
113 silly resolved     repository:
113 silly resolved      { type: 'git',
113 silly resolved        url: 'https://github.com/wycats/handlebars.js.git' },
113 silly resolved     author: { name: 'Yehuda Katz' },
113 silly resolved     license: 'MIT',
113 silly resolved     readmeFilename: 'README.markdown',
113 silly resolved     engines: { node: '>=0.4.7' },
113 silly resolved     dependencies:
113 silly resolved      { async: '^1.4.0',
113 silly resolved        optimist: '^0.6.1',
113 silly resolved        'source-map': '^0.4.4',
113 silly resolved        'uglify-js': '^2.6' },
113 silly resolved     optionalDependencies: { 'uglify-js': '^2.6' },
113 silly resolved     devDependencies:
113 silly resolved      { 'aws-sdk': '^2.1.49',
113 silly resolved        'babel-loader': '^5.0.0',
113 silly resolved        'babel-runtime': '^5.1.10',
113 silly resolved        benchmark: '~1.0',
113 silly resolved        'dustjs-linkedin': '^2.0.2',
113 silly resolved        eco: '~1.1.0-rc-3',
113 silly resolved        grunt: '~0.4.1',
113 silly resolved        'grunt-babel': '^5.0.0',
113 silly resolved        'grunt-cli': '~0.1.10',
113 silly resolved        'grunt-contrib-clean': '0.x',
113 silly resolved        'grunt-contrib-concat': '0.x',
113 silly resolved        'grunt-contrib-connect': '0.x',
113 silly resolved        'grunt-contrib-copy': '0.x',
113 silly resolved        'grunt-contrib-requirejs': '0.x',
113 silly resolved        'grunt-contrib-uglify': '0.x',
113 silly resolved        'grunt-contrib-watch': '0.x',
113 silly resolved        'grunt-eslint': '^17.1.0',
113 silly resolved        'grunt-saucelabs': '8.x',
113 silly resolved        'grunt-webpack': '^1.0.8',
113 silly resolved        istanbul: '^0.3.0',
113 silly resolved        jison: '~0.3.0',
113 silly resolved        mocha: '~1.20.0',
113 silly resolved        'mock-stdin': '^0.3.0',
113 silly resolved        mustache: '^2.1.3',
113 silly resolved        semver: '^5.0.1',
113 silly resolved        underscore: '^1.5.1',
113 silly resolved        webpack: '^1.12.6',
113 silly resolved        'webpack-dev-server': '^1.12.1' },
113 silly resolved     main: 'lib/index.js',
113 silly resolved     bin: { handlebars: 'bin/handlebars' },
113 silly resolved     scripts: { test: 'grunt' },
113 silly resolved     jspm:
113 silly resolved      { main: 'handlebars',
113 silly resolved        directories: [Object],
113 silly resolved        buildConfig: [Object] },
113 silly resolved     readme: '[![Travis Build Status](https://img.shields.io/travis/wycats/handlebars.js/master.svg)](https://travis-ci.org/wycats/handlebars.js)\n[![Selenium Test Status](https://saucelabs.com/buildstatus/handlebars)](https://saucelabs.com/u/handlebars)\n\nHandlebars.js\n=============\n\nHandlebars.js is an extension to the [Mustache templating\nlanguage](http://mustache.github.com/) created by Chris Wanstrath.\nHandlebars.js and Mustache are both logicless templating languages that\nkeep the view and the code separated like we all know they should be.\n\nCheckout the official Handlebars docs site at\n[http://www.handlebarsjs.com](http://www.handlebarsjs.com) and the live demo at [http://tryhandlebarsjs.com/](http://tryhandlebarsjs.com/).\n\nInstalling\n----------\n\nSee our [installation documentation](http://handlebarsjs.com/installation.html).\n\nUsage\n-----\nIn general, the syntax of Handlebars.js templates is a superset\nof Mustache templates. For basic syntax, check out the [Mustache\nmanpage](http://mustache.github.com/mustache.5.html).\n\nOnce you have a template, use the `Handlebars.compile` method to compile\nthe template into a function. The generated function takes a context\nargument, which will be used to render the template.\n\n```js\nvar source = "<p>Hello, my name is {{name}}. I am from {{hometown}}. I have " +\n             "{{kids.length}} kids:</p>" +\n             "<ul>{{#kids}}<li>{{name}} is {{age}}</li>{{/kids}}</ul>";\nvar template = Handlebars.compile(source);\n\nvar data = { "name": "Alan", "hometown": "Somewhere, TX",\n             "kids": [{"name": "Jimmy", "age": "12"}, {"name": "Sally", "age": "4"}]};\nvar result = template(data);\n\n// Would render:\n// <p>Hello, my name is Alan. I am from Somewhere, TX. I have 2 kids:</p>\n// <ul>\n//   <li>Jimmy is 12</li>\n//   <li>Sally is 4</li>\n// </ul>\n```\n\nFull documentation and more examples are at [handlebarsjs.com](http://handlebarsjs.com/).\n\nPrecompiling Templates\n----------------------\n\nHandlebars allows templates to be precompiled and included as javascript code rather than the handlebars template allowing for faster startup time. Full details are located [here](http://handlebarsjs.com/precompilation.html).\n\nDifferences Between Handlebars.js and Mustache\n----------------------------------------------\nHandlebars.js adds a couple of additional features to make writing\ntemplates easier and also changes a tiny detail of how partials work.\n\n- [Nested Paths](http://handlebarsjs.com/#paths)\n- [Helpers](http://handlebarsjs.com/#helpers)\n- [Block Expressions](http://handlebarsjs.com/#block-expressions)\n- [Literal Values](http://handlebarsjs.com/#literals)\n- [Delimited Comments](http://handlebarsjs.com/#comments)\n\nBlock expressions have the same syntax as mustache sections but should not be confused with one another. Sections are akin to an implicit `each` or `with` statement depending on the input data and helpers are explicit pieces of code that are free to implement whatever behavior they like. The [mustache spec](http://mustache.github.io/mustache.5.html) defines the exact behavior of sections. In the case of name conflicts, helpers are given priority.\n\n### Compatibility\n\nThere are a few Mustache behaviors that Handlebars does not implement.\n- Handlebars deviates from Mustache slightly in that it does not perform recursive lookup by default. The compile time `compat` flag must be set to enable this functionality. Users should note that there is a performance cost for enabling this flag. The exact cost varies by template, but it\'s recommended that performance sensitive operations should avoid this mode and instead opt for explicit path references.\n- The optional Mustache-style lambdas are not supported. Instead Handlebars provides its own lambda resolution that follows the behaviors of helpers.\n- Alternative delimiters are not supported.\n\n\nSupported Environments\n----------------------\n\nHandlebars has been designed to work in any ECMAScript 3 environment. This includes\n\n- Node.js\n- Chrome\n- Firefox\n- Safari 5+\n- Opera 11+\n- IE 6+\n\nOlder versions and other runtimes are likely to work but have not been formally\ntested. The compiler requires `JSON.stringify` to be implemented natively or via a polyfill. If using the precompiler this is not necessary.\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/handlebars.svg)](https://saucelabs.com/u/handlebars)\n\nPerformance\n-----------\n\nIn a rough performance test, precompiled Handlebars.js templates (in\nthe original version of Handlebars.js) rendered in about half the\ntime of Mustache templates. It would be a shame if it were any other\nway, since they were precompiled, but the difference in architecture\ndoes have some big performance advantages. Justin Marney, a.k.a.\n[gotascii](http://github.com/gotascii), confirmed that with an\n[independent test](http://sorescode.com/2010/09/12/benchmarks.html). The\nrewritten Handlebars (current version) is faster than the old version,\nwith many [performance tests](https://travis-ci.org/wycats/handlebars.js/builds/33392182#L538) being 5 to 7 times faster than the Mustache equivalent.\n\n\nUpgrading\n---------\n\nSee [release-notes.md](https://github.com/wycats/handlebars.js/blob/master/release-notes.md) for upgrade notes.\n\nKnown Issues\n------------\n\nSee [FAQ.md](https://github.com/wycats/handlebars.js/blob/master/FAQ.md) for known issues and common pitfalls.\n\n\nHandlebars in the Wild\n----------------------\n\n* [Assemble](http://assemble.io), by [@jonschlinkert](https://github.com/jonschlinkert)\n  and [@doowb](https://github.com/doowb), is a static site generator that uses Handlebars.js\n  as its template engine.\n* [CoSchedule](http://coschedule.com) An editorial calendar for WordPress that uses Handlebars.js\n* [dashbars](https://github.com/pismute/dashbars) A modern helper library for Handlebars.js.\n* [Ember.js](http://www.emberjs.com) makes Handlebars.js the primary way to\n  structure your views, also with automatic data binding support.\n* [Ghost](https://ghost.org/) Just a blogging platform.\n* [handlebars_assets](http://github.com/leshill/handlebars_assets): A Rails Asset Pipeline gem\n  from Les Hill (@leshill).\n* [handlebars-helpers](https://github.com/assemble/handlebars-helpers) is an extensive library\n  with 100+ handlebars helpers.\n* [handlebars-layouts](https://github.com/shannonmoeller/handlebars-layouts) is a set of helpers which implement extendible and embeddable layout blocks as seen in other popular templating languages.\n* [hbs](http://github.com/donpark/hbs): An Express.js view engine adapter for Handlebars.js,\n  from Don Park.\n* [koa-hbs](https://github.com/jwilm/koa-hbs): [koa](https://github.com/koajs/koa) generator based\n  renderer for Handlebars.js.\n* [jblotus](http://github.com/jblotus) created [http://tryhandlebarsjs.com](http://tryhandlebarsjs.com)\n  for anyone who would like to try out Handlebars.js in their browser.\n* [jQuery plugin](http://71104.github.io/jquery-handlebars/): allows you to use\n  Handlebars.js with [jQuery](http://jquery.com/).\n* [Lumbar](http://walmartlabs.github.io/lumbar) provides easy module-based template management for\n  handlebars projects.\n* [Marionette.Handlebars](https://github.com/hashchange/marionette.handlebars) adds support for Handlebars and Mustache templates to Marionette.\n* [sammy.js](http://github.com/quirkey/sammy) by Aaron Quint, a.k.a. quirkey,\n  supports Handlebars.js as one of its template plugins.\n* [SproutCore](http://www.sproutcore.com) uses Handlebars.js as its main\n  templating engine, extending it with automatic data binding support.\n* [YUI](http://yuilibrary.com/yui/docs/handlebars/) implements a port of handlebars\n* [Swag](https://github.com/elving/swag) by [@elving](https://github.com/elving) is a growing collection of helpers for handlebars.js. Give your handlebars.js templates some swag son!\n* [DOMBars](https://github.com/blakeembrey/dombars) is a DOM-based templating engine built on the Handlebars parser and runtime **DEPRECATED**\n* [promised-handlebars](https://github.com/nknapp/promised-handlebars) is a wrapper for Handlebars that allows helpers to return Promises.\n\nExternal Resources\n------------------\n\n* [Gist about Synchronous and asynchronous loading of external handlebars templates](https://gist.github.com/2287070)\n\nHave a project using Handlebars? Send us a [pull request][pull-request]!\n\nLicense\n-------\nHandlebars.js is released under the MIT license.\n\n[pull-request]: https://github.com/wycats/handlebars.js/pull/new/master\n',
113 silly resolved     bugs: { url: 'https://github.com/wycats/handlebars.js/issues' },
113 silly resolved     _id: 'handlebars@4.0.5',
113 silly resolved     _from: '.',
113 silly resolved     dist: { shasum: '3dc6a2c9a55b5f82b2dec928940569843a92f61b' } } ]
114 info install handlebars@4.0.5 into /usr/local/lib
115 info installOne handlebars@4.0.5
116 info /usr/local/lib/node_modules/handlebars unbuild
117 verbose tar unpack /home/coder/.npm/handlebars/4.0.5/package.tgz
118 silly lockFile 483b433f-ocal-lib-node-modules-handlebars tar:///usr/local/lib/node_modules/handlebars
119 verbose lock tar:///usr/local/lib/node_modules/handlebars /home/coder/.npm/483b433f-ocal-lib-node-modules-handlebars.lock
120 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
121 verbose lock tar:///home/coder/.npm/handlebars/4.0.5/package.tgz /home/coder/.npm/2eb9a385-npm-handlebars-4-0-5-package-tgz.lock
122 silly gunzTarPerm modes [ '755', '644' ]
123 silly gunzTarPerm extractEntry package.json
124 silly gunzTarPerm extractEntry app.js
125 silly gunzTarPerm extractEntry getPurchases.js
126 silly gunzTarPerm extractEntry getSalesData.js
127 silly gunzTarPerm extractEntry leastPopular.js
128 silly gunzTarPerm extractEntry makeCategories.js
129 silly gunzTarPerm extractEntry profitMap.js
130 silly gunzTarPerm extractEntry popular.js
131 silly gunzTarPerm extractEntry makeObject.js
132 silly gunzTarPerm extractEntry files/purchases.csv
133 silly gunzTarPerm extractEntry files/week1.csv
134 silly gunzTarPerm extractEntry files/week2.csv
135 silly gunzTarPerm extractEntry files/week3.csv
136 silly gunzTarPerm extractEntry files/week4.csv
137 silly gunzTarPerm extractEntry profitable.html
138 silly gunzTarPerm extractEntry test/spaza_test.js
139 silly gunzTarPerm extractEntry views/index.html
140 silly gunzTarPerm extractEntry views/layouts/display.handlebars
141 silly lockFile 483b433f-ocal-lib-node-modules-handlebars tar:///usr/local/lib/node_modules/handlebars
142 silly lockFile 483b433f-ocal-lib-node-modules-handlebars tar:///usr/local/lib/node_modules/handlebars
143 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
144 silly lockFile 2eb9a385-npm-handlebars-4-0-5-package-tgz tar:///home/coder/.npm/handlebars/4.0.5/package.tgz
145 info preinstall handlebars@4.0.5
146 verbose readDependencies using package.json deps
147 verbose readDependencies using package.json deps
148 verbose cache add [ 'async@^1.4.0', null ]
149 verbose cache add name=undefined spec="async@^1.4.0" args=["async@^1.4.0",null]
150 verbose parsed url { protocol: null,
150 verbose parsed url   slashes: null,
150 verbose parsed url   auth: null,
150 verbose parsed url   host: null,
150 verbose parsed url   port: null,
150 verbose parsed url   hostname: null,
150 verbose parsed url   hash: null,
150 verbose parsed url   search: null,
150 verbose parsed url   query: null,
150 verbose parsed url   pathname: 'async@^1.4.0',
150 verbose parsed url   path: 'async@^1.4.0',
150 verbose parsed url   href: 'async@^1.4.0' }
151 verbose cache add name="async" spec="^1.4.0" args=["async","^1.4.0"]
152 verbose parsed url { protocol: null,
152 verbose parsed url   slashes: null,
152 verbose parsed url   auth: null,
152 verbose parsed url   host: null,
152 verbose parsed url   port: null,
152 verbose parsed url   hostname: null,
152 verbose parsed url   hash: null,
152 verbose parsed url   search: null,
152 verbose parsed url   query: null,
152 verbose parsed url   pathname: '^1.4.0',
152 verbose parsed url   path: '^1.4.0',
152 verbose parsed url   href: '^1.4.0' }
153 verbose addNamed [ 'async', '^1.4.0' ]
154 verbose addNamed [ null, '>=1.4.0-0 <2.0.0-0' ]
155 silly lockFile 20ec6cb4-async-1-4-0 async@^1.4.0
156 verbose lock async@^1.4.0 /home/coder/.npm/20ec6cb4-async-1-4-0.lock
157 verbose cache add [ 'optimist@^0.6.1', null ]
158 verbose cache add name=undefined spec="optimist@^0.6.1" args=["optimist@^0.6.1",null]
159 verbose parsed url { protocol: null,
159 verbose parsed url   slashes: null,
159 verbose parsed url   auth: null,
159 verbose parsed url   host: null,
159 verbose parsed url   port: null,
159 verbose parsed url   hostname: null,
159 verbose parsed url   hash: null,
159 verbose parsed url   search: null,
159 verbose parsed url   query: null,
159 verbose parsed url   pathname: 'optimist@^0.6.1',
159 verbose parsed url   path: 'optimist@^0.6.1',
159 verbose parsed url   href: 'optimist@^0.6.1' }
160 verbose cache add name="optimist" spec="^0.6.1" args=["optimist","^0.6.1"]
161 verbose parsed url { protocol: null,
161 verbose parsed url   slashes: null,
161 verbose parsed url   auth: null,
161 verbose parsed url   host: null,
161 verbose parsed url   port: null,
161 verbose parsed url   hostname: null,
161 verbose parsed url   hash: null,
161 verbose parsed url   search: null,
161 verbose parsed url   query: null,
161 verbose parsed url   pathname: '^0.6.1',
161 verbose parsed url   path: '^0.6.1',
161 verbose parsed url   href: '^0.6.1' }
162 verbose addNamed [ 'optimist', '^0.6.1' ]
163 verbose addNamed [ null, '>=0.6.1-0 <0.7.0-0' ]
164 silly lockFile 3a3d519a-optimist-0-6-1 optimist@^0.6.1
165 verbose lock optimist@^0.6.1 /home/coder/.npm/3a3d519a-optimist-0-6-1.lock
166 verbose cache add [ 'uglify-js@^2.6', null ]
167 verbose cache add name=undefined spec="uglify-js@^2.6" args=["uglify-js@^2.6",null]
168 verbose parsed url { protocol: null,
168 verbose parsed url   slashes: null,
168 verbose parsed url   auth: null,
168 verbose parsed url   host: null,
168 verbose parsed url   port: null,
168 verbose parsed url   hostname: null,
168 verbose parsed url   hash: null,
168 verbose parsed url   search: null,
168 verbose parsed url   query: null,
168 verbose parsed url   pathname: 'uglify-js@^2.6',
168 verbose parsed url   path: 'uglify-js@^2.6',
168 verbose parsed url   href: 'uglify-js@^2.6' }
169 verbose cache add name="uglify-js" spec="^2.6" args=["uglify-js","^2.6"]
170 verbose parsed url { protocol: null,
170 verbose parsed url   slashes: null,
170 verbose parsed url   auth: null,
170 verbose parsed url   host: null,
170 verbose parsed url   port: null,
170 verbose parsed url   hostname: null,
170 verbose parsed url   hash: null,
170 verbose parsed url   search: null,
170 verbose parsed url   query: null,
170 verbose parsed url   pathname: '^2.6',
170 verbose parsed url   path: '^2.6',
170 verbose parsed url   href: '^2.6' }
171 verbose addNamed [ 'uglify-js', '^2.6' ]
172 verbose addNamed [ null, '>=2.6.0-0 <3.0.0-0' ]
173 silly lockFile 4832b74b-uglify-js-2-6 uglify-js@^2.6
174 verbose lock uglify-js@^2.6 /home/coder/.npm/4832b74b-uglify-js-2-6.lock
175 verbose cache add [ 'source-map@^0.4.4', null ]
176 verbose cache add name=undefined spec="source-map@^0.4.4" args=["source-map@^0.4.4",null]
177 verbose parsed url { protocol: null,
177 verbose parsed url   slashes: null,
177 verbose parsed url   auth: null,
177 verbose parsed url   host: null,
177 verbose parsed url   port: null,
177 verbose parsed url   hostname: null,
177 verbose parsed url   hash: null,
177 verbose parsed url   search: null,
177 verbose parsed url   query: null,
177 verbose parsed url   pathname: 'source-map@^0.4.4',
177 verbose parsed url   path: 'source-map@^0.4.4',
177 verbose parsed url   href: 'source-map@^0.4.4' }
178 verbose cache add name="source-map" spec="^0.4.4" args=["source-map","^0.4.4"]
179 verbose parsed url { protocol: null,
179 verbose parsed url   slashes: null,
179 verbose parsed url   auth: null,
179 verbose parsed url   host: null,
179 verbose parsed url   port: null,
179 verbose parsed url   hostname: null,
179 verbose parsed url   hash: null,
179 verbose parsed url   search: null,
179 verbose parsed url   query: null,
179 verbose parsed url   pathname: '^0.4.4',
179 verbose parsed url   path: '^0.4.4',
179 verbose parsed url   href: '^0.4.4' }
180 verbose addNamed [ 'source-map', '^0.4.4' ]
181 verbose addNamed [ null, '>=0.4.4-0 <0.5.0-0' ]
182 silly lockFile e1973661-source-map-0-4-4 source-map@^0.4.4
183 verbose lock source-map@^0.4.4 /home/coder/.npm/e1973661-source-map-0-4-4.lock
184 silly addNameRange { name: 'async', range: '>=1.4.0-0 <2.0.0-0', hasData: false }
185 silly addNameRange { name: 'optimist', range: '>=0.6.1-0 <0.7.0-0', hasData: false }
186 silly addNameRange { name: 'uglify-js',
186 silly addNameRange   range: '>=2.6.0-0 <3.0.0-0',
186 silly addNameRange   hasData: false }
187 silly addNameRange { name: 'source-map',
187 silly addNameRange   range: '>=0.4.4-0 <0.5.0-0',
187 silly addNameRange   hasData: false }
188 verbose url raw source-map
189 verbose url resolving [ 'https://registry.npmjs.org/', './source-map' ]
190 verbose url resolved https://registry.npmjs.org/source-map
191 info trying registry request attempt 1 at 14:59:54
192 verbose etag "6FOGQ0DEW49F4TBK11MIL5JD4"
193 http GET https://registry.npmjs.org/source-map
194 verbose url raw async
195 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
196 verbose url resolved https://registry.npmjs.org/async
197 info trying registry request attempt 1 at 14:59:55
198 verbose etag "1W9G4BYDLW8FF8YV0XQZHT9RW"
199 http GET https://registry.npmjs.org/async
200 verbose url raw uglify-js
201 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
202 verbose url resolved https://registry.npmjs.org/uglify-js
203 info trying registry request attempt 1 at 14:59:55
204 verbose etag "O99Y95JNQ5IPAORYXNCAF1VH"
205 http GET https://registry.npmjs.org/uglify-js
206 verbose url raw optimist
207 verbose url resolving [ 'https://registry.npmjs.org/', './optimist' ]
208 verbose url resolved https://registry.npmjs.org/optimist
209 info trying registry request attempt 1 at 14:59:55
210 verbose etag "28OT6TDNWBYMITUW3J8LR37RB"
211 http GET https://registry.npmjs.org/optimist
212 http 304 https://registry.npmjs.org/source-map
213 silly registry.get cb [ 304,
213 silly registry.get   { date: 'Wed, 22 Jun 2016 12:59:55 GMT',
213 silly registry.get     via: '1.1 varnish',
213 silly registry.get     'cache-control': 'max-age=300',
213 silly registry.get     etag: '"6FOGQ0DEW49F4TBK11MIL5JD4"',
213 silly registry.get     age: '49',
213 silly registry.get     connection: 'keep-alive',
213 silly registry.get     'x-served-by': 'cache-lhr6339-LHR',
213 silly registry.get     'x-cache': 'HIT',
213 silly registry.get     'x-cache-hits': '1',
213 silly registry.get     'x-timer': 'S1466600395.705663,VS0,VE0',
213 silly registry.get     vary: 'Accept-Encoding' } ]
214 verbose etag source-map from cache
215 silly addNameRange number 2 { name: 'source-map',
215 silly addNameRange   range: '>=0.4.4-0 <0.5.0-0',
215 silly addNameRange   hasData: true }
216 silly addNameRange versions [ 'source-map',
216 silly addNameRange   [ '0.0.0',
216 silly addNameRange     '0.1.0',
216 silly addNameRange     '0.1.1',
216 silly addNameRange     '0.1.2',
216 silly addNameRange     '0.1.3',
216 silly addNameRange     '0.1.4',
216 silly addNameRange     '0.1.5',
216 silly addNameRange     '0.1.6',
216 silly addNameRange     '0.1.7',
216 silly addNameRange     '0.1.8',
216 silly addNameRange     '0.1.9',
216 silly addNameRange     '0.1.10',
216 silly addNameRange     '0.1.11',
216 silly addNameRange     '0.1.12',
216 silly addNameRange     '0.1.13',
216 silly addNameRange     '0.1.14',
216 silly addNameRange     '0.1.15',
216 silly addNameRange     '0.1.16',
216 silly addNameRange     '0.1.17',
216 silly addNameRange     '0.1.18',
216 silly addNameRange     '0.1.19',
216 silly addNameRange     '0.1.20',
216 silly addNameRange     '0.1.21',
216 silly addNameRange     '0.1.22',
216 silly addNameRange     '0.1.23',
216 silly addNameRange     '0.1.24',
216 silly addNameRange     '0.1.25',
216 silly addNameRange     '0.1.26',
216 silly addNameRange     '0.1.27',
216 silly addNameRange     '0.1.28',
216 silly addNameRange     '0.1.29',
216 silly addNameRange     '0.1.30',
216 silly addNameRange     '0.1.31',
216 silly addNameRange     '0.1.32',
216 silly addNameRange     '0.1.33',
216 silly addNameRange     '0.1.34',
216 silly addNameRange     '0.1.35',
216 silly addNameRange     '0.1.36',
216 silly addNameRange     '0.1.37',
216 silly addNameRange     '0.1.38',
216 silly addNameRange     '0.1.39',
216 silly addNameRange     '0.1.40',
216 silly addNameRange     '0.1.41',
216 silly addNameRange     '0.1.42',
216 silly addNameRange     '0.1.43',
216 silly addNameRange     '0.2.0',
216 silly addNameRange     '0.3.0',
216 silly addNameRange     '0.4.0',
216 silly addNameRange     '0.4.1',
216 silly addNameRange     '0.4.2',
216 silly addNameRange     '0.4.3',
216 silly addNameRange     '0.4.4',
216 silly addNameRange     '0.5.0',
216 silly addNameRange     '0.5.1',
216 silly addNameRange     '0.5.2',
216 silly addNameRange     '0.5.3',
216 silly addNameRange     '0.5.4',
216 silly addNameRange     '0.5.5',
216 silly addNameRange     '0.5.6' ] ]
217 verbose addNamed [ 'source-map', '0.4.4' ]
218 verbose addNamed [ '0.4.4', '0.4.4' ]
219 silly lockFile 3f10c88f-source-map-0-4-4 source-map@0.4.4
220 verbose lock source-map@0.4.4 /home/coder/.npm/3f10c88f-source-map-0-4-4.lock
221 silly lockFile 3f10c88f-source-map-0-4-4 source-map@0.4.4
222 silly lockFile 3f10c88f-source-map-0-4-4 source-map@0.4.4
223 silly lockFile e1973661-source-map-0-4-4 source-map@^0.4.4
224 silly lockFile e1973661-source-map-0-4-4 source-map@^0.4.4
225 http 304 https://registry.npmjs.org/optimist
226 silly registry.get cb [ 304,
226 silly registry.get   { date: 'Wed, 22 Jun 2016 12:59:55 GMT',
226 silly registry.get     via: '1.1 varnish',
226 silly registry.get     'cache-control': 'max-age=300',
226 silly registry.get     etag: '"28OT6TDNWBYMITUW3J8LR37RB"',
226 silly registry.get     age: '0',
226 silly registry.get     connection: 'keep-alive',
226 silly registry.get     'x-served-by': 'cache-lhr6334-LHR',
226 silly registry.get     'x-cache': 'HIT',
226 silly registry.get     'x-cache-hits': '1',
226 silly registry.get     'x-timer': 'S1466600395.706807,VS0,VE374',
226 silly registry.get     vary: 'Accept-Encoding' } ]
227 verbose etag optimist from cache
228 silly addNameRange number 2 { name: 'optimist', range: '>=0.6.1-0 <0.7.0-0', hasData: true }
229 silly addNameRange versions [ 'optimist',
229 silly addNameRange   [ '0.0.1',
229 silly addNameRange     '0.0.2',
229 silly addNameRange     '0.0.4',
229 silly addNameRange     '0.0.5',
229 silly addNameRange     '0.0.6',
229 silly addNameRange     '0.0.7',
229 silly addNameRange     '0.1.0',
229 silly addNameRange     '0.1.1',
229 silly addNameRange     '0.1.2',
229 silly addNameRange     '0.1.3',
229 silly addNameRange     '0.1.4',
229 silly addNameRange     '0.1.5',
229 silly addNameRange     '0.1.6',
229 silly addNameRange     '0.1.7',
229 silly addNameRange     '0.1.8',
229 silly addNameRange     '0.1.9',
229 silly addNameRange     '0.0.3',
229 silly addNameRange     '0.2.0',
229 silly addNameRange     '0.2.1',
229 silly addNameRange     '0.2.2',
229 silly addNameRange     '0.2.3',
229 silly addNameRange     '0.2.4',
229 silly addNameRange     '0.2.5',
229 silly addNameRange     '0.2.6',
229 silly addNameRange     '0.2.7',
229 silly addNameRange     '0.2.8',
229 silly addNameRange     '0.3.0',
229 silly addNameRange     '0.3.1',
229 silly addNameRange     '0.3.3',
229 silly addNameRange     '0.3.4',
229 silly addNameRange     '0.3.5',
229 silly addNameRange     '0.3.6',
229 silly addNameRange     '0.3.7',
229 silly addNameRange     '0.4.0',
229 silly addNameRange     '0.5.0',
229 silly addNameRange     '0.5.1',
229 silly addNameRange     '0.5.2',
229 silly addNameRange     '0.6.0',
229 silly addNameRange     '0.6.1' ] ]
230 verbose addNamed [ 'optimist', '0.6.1' ]
231 verbose addNamed [ '0.6.1', '0.6.1' ]
232 silly lockFile 0fc74eb8-optimist-0-6-1 optimist@0.6.1
233 verbose lock optimist@0.6.1 /home/coder/.npm/0fc74eb8-optimist-0-6-1.lock
234 silly lockFile 0fc74eb8-optimist-0-6-1 optimist@0.6.1
235 silly lockFile 0fc74eb8-optimist-0-6-1 optimist@0.6.1
236 silly lockFile 3a3d519a-optimist-0-6-1 optimist@^0.6.1
237 silly lockFile 3a3d519a-optimist-0-6-1 optimist@^0.6.1
238 http 200 https://registry.npmjs.org/uglify-js
239 silly registry.get cb [ 200,
239 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
239 silly registry.get     etag: '"OMXWJ770BRNKKPJ8M1855X3L"',
239 silly registry.get     'content-type': 'application/json',
239 silly registry.get     'cache-control': 'max-age=300',
239 silly registry.get     'content-length': '111641',
239 silly registry.get     'accept-ranges': 'bytes',
239 silly registry.get     date: 'Wed, 22 Jun 2016 12:59:55 GMT',
239 silly registry.get     via: '1.1 varnish',
239 silly registry.get     age: '53',
239 silly registry.get     connection: 'keep-alive',
239 silly registry.get     'x-served-by': 'cache-lhr6341-LHR',
239 silly registry.get     'x-cache': 'HIT',
239 silly registry.get     'x-cache-hits': '1',
239 silly registry.get     'x-timer': 'S1466600395.708541,VS0,VE0',
239 silly registry.get     vary: 'Accept-Encoding' } ]
240 http 200 https://registry.npmjs.org/async
241 silly registry.get cb [ 200,
241 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
241 silly registry.get     etag: '"QB39TH0JKOKFHCHD7YBYGWRL"',
241 silly registry.get     'content-type': 'application/json',
241 silly registry.get     'cache-control': 'max-age=300',
241 silly registry.get     'content-length': '167372',
241 silly registry.get     'accept-ranges': 'bytes',
241 silly registry.get     date: 'Wed, 22 Jun 2016 12:59:55 GMT',
241 silly registry.get     via: '1.1 varnish',
241 silly registry.get     age: '17',
241 silly registry.get     connection: 'keep-alive',
241 silly registry.get     'x-served-by': 'cache-lhr6336-LHR',
241 silly registry.get     'x-cache': 'HIT',
241 silly registry.get     'x-cache-hits': '2',
241 silly registry.get     'x-timer': 'S1466600395.708082,VS0,VE0',
241 silly registry.get     vary: 'Accept-Encoding' } ]
242 silly addNameRange number 2 { name: 'uglify-js', range: '>=2.6.0-0 <3.0.0-0', hasData: true }
243 silly addNameRange versions [ 'uglify-js',
243 silly addNameRange   [ '0.0.1',
243 silly addNameRange     '0.0.2',
243 silly addNameRange     '0.0.3',
243 silly addNameRange     '0.0.4',
243 silly addNameRange     '0.0.5',
243 silly addNameRange     '1.0.1',
243 silly addNameRange     '1.0.2',
243 silly addNameRange     '1.0.3',
243 silly addNameRange     '1.0.4',
243 silly addNameRange     '1.0.5',
243 silly addNameRange     '1.0.6',
243 silly addNameRange     '1.0.7',
243 silly addNameRange     '1.1.0',
243 silly addNameRange     '1.1.1',
243 silly addNameRange     '1.2.0',
243 silly addNameRange     '1.2.1',
243 silly addNameRange     '1.2.2',
243 silly addNameRange     '1.2.3',
243 silly addNameRange     '1.2.4',
243 silly addNameRange     '1.2.5',
243 silly addNameRange     '1.2.6',
243 silly addNameRange     '1.3.0',
243 silly addNameRange     '1.3.1',
243 silly addNameRange     '1.3.2',
243 silly addNameRange     '1.3.3',
243 silly addNameRange     '1.3.4',
243 silly addNameRange     '2.2.0',
243 silly addNameRange     '2.2.1',
243 silly addNameRange     '2.2.2',
243 silly addNameRange     '2.2.3',
243 silly addNameRange     '2.2.4',
243 silly addNameRange     '2.2.5',
243 silly addNameRange     '2.3.0',
243 silly addNameRange     '2.3.1',
243 silly addNameRange     '2.3.2',
243 silly addNameRange     '2.3.3',
243 silly addNameRange     '2.3.4',
243 silly addNameRange     '2.3.5',
243 silly addNameRange     '2.3.6',
243 silly addNameRange     '1.3.5',
243 silly addNameRange     '2.4.0',
243 silly addNameRange     '2.4.1',
243 silly addNameRange     '2.4.2',
243 silly addNameRange     '2.4.3',
243 silly addNameRange     '2.4.4',
243 silly addNameRange     '2.4.5',
243 silly addNameRange     '2.4.6',
243 silly addNameRange     '2.4.7',
243 silly addNameRange     '2.4.8',
243 silly addNameRange     '2.4.9',
243 silly addNameRange     '2.4.10',
243 silly addNameRange     '2.4.11',
243 silly addNameRange     '2.4.12',
243 silly addNameRange     '2.4.13',
243 silly addNameRange     '2.4.14',
243 silly addNameRange     '2.4.15',
243 silly addNameRange     '2.4.16',
243 silly addNameRange     '2.4.17',
243 silly addNameRange     '2.4.18',
243 silly addNameRange     '2.4.19',
243 silly addNameRange     '2.4.20',
243 silly addNameRange     '2.4.21',
243 silly addNameRange     '2.4.22',
243 silly addNameRange     '2.4.23',
243 silly addNameRange     '2.4.24',
243 silly addNameRange     '2.5.0',
243 silly addNameRange     '2.6.0',
243 silly addNameRange     '2.6.1',
243 silly addNameRange     '2.6.2',
243 silly addNameRange     '2.6.3',
243 silly addNameRange     '2.6.4' ] ]
244 verbose addNamed [ 'uglify-js', '2.6.4' ]
245 verbose addNamed [ '2.6.4', '2.6.4' ]
246 silly lockFile 9f3d25e7-uglify-js-2-6-4 uglify-js@2.6.4
247 verbose lock uglify-js@2.6.4 /home/coder/.npm/9f3d25e7-uglify-js-2-6-4.lock
248 silly addNameRange number 2 { name: 'async', range: '>=1.4.0-0 <2.0.0-0', hasData: true }
249 silly addNameRange versions [ 'async',
249 silly addNameRange   [ '0.1.0',
249 silly addNameRange     '0.1.1',
249 silly addNameRange     '0.1.2',
249 silly addNameRange     '0.1.3',
249 silly addNameRange     '0.1.4',
249 silly addNameRange     '0.1.5',
249 silly addNameRange     '0.1.6',
249 silly addNameRange     '0.1.7',
249 silly addNameRange     '0.1.8',
249 silly addNameRange     '0.1.9',
249 silly addNameRange     '0.1.10',
249 silly addNameRange     '0.1.11',
249 silly addNameRange     '0.1.12',
249 silly addNameRange     '0.1.13',
249 silly addNameRange     '0.1.14',
249 silly addNameRange     '0.1.15',
249 silly addNameRange     '0.1.16',
249 silly addNameRange     '0.1.17',
249 silly addNameRange     '0.1.18',
249 silly addNameRange     '0.1.19',
249 silly addNameRange     '0.1.20',
249 silly addNameRange     '0.1.21',
249 silly addNameRange     '0.1.22',
249 silly addNameRange     '0.2.0',
249 silly addNameRange     '0.2.1',
249 silly addNameRange     '0.2.2',
249 silly addNameRange     '0.2.3',
249 silly addNameRange     '0.2.4',
249 silly addNameRange     '0.2.5',
249 silly addNameRange     '0.2.6',
249 silly addNameRange     '0.2.7',
249 silly addNameRange     '0.2.8',
249 silly addNameRange     '0.2.9',
249 silly addNameRange     '0.2.10',
249 silly addNameRange     '0.3.0',
249 silly addNameRange     '0.4.0',
249 silly addNameRange     '0.4.1',
249 silly addNameRange     '0.5.0',
249 silly addNameRange     '0.6.0',
249 silly addNameRange     '0.6.1',
249 silly addNameRange     '0.6.2',
249 silly addNameRange     '0.7.0',
249 silly addNameRange     '0.8.0',
249 silly addNameRange     '0.9.0',
249 silly addNameRange     '0.9.2',
249 silly addNameRange     '1.0.0',
249 silly addNameRange     '1.1.0',
249 silly addNameRange     '1.2.0',
249 silly addNameRange     '1.1.1',
249 silly addNameRange     '1.2.1',
249 silly addNameRange     '1.3.0',
249 silly addNameRange     '1.4.0',
249 silly addNameRange     '1.4.1',
249 silly addNameRange     '1.4.2',
249 silly addNameRange     '1.5.0',
249 silly addNameRange     '1.5.1',
249 silly addNameRange     '1.5.2',
249 silly addNameRange     '2.0.0-alpha.0',
249 silly addNameRange     '2.0.0-rc.1',
249 silly addNameRange     '2.0.0-rc.2',
249 silly addNameRange     '2.0.0-rc.3',
249 silly addNameRange     '2.0.0-rc.4',
249 silly addNameRange     '2.0.0-rc.5',
249 silly addNameRange     '2.0.0-rc.6' ] ]
250 verbose addNamed [ 'async', '1.5.2' ]
251 verbose addNamed [ '1.5.2', '1.5.2' ]
252 silly lockFile 2d6754e3-async-1-5-2 async@1.5.2
253 verbose lock async@1.5.2 /home/coder/.npm/2d6754e3-async-1-5-2.lock
254 silly lockFile 93779cfb-rg-uglify-js-uglify-js-2-6-4-tgz https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz
255 verbose lock https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz /home/coder/.npm/93779cfb-rg-uglify-js-uglify-js-2-6-4-tgz.lock
256 verbose addRemoteTarball [ 'https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz',
256 verbose addRemoteTarball   '65ea2fb3059c9394692f15fed87c2b36c16b9adf' ]
257 info retry fetch attempt 1 at 14:59:56
258 verbose fetch to= /home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/tmp.tgz
259 http GET https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz
260 silly lockFile 2d6754e3-async-1-5-2 async@1.5.2
261 silly lockFile 2d6754e3-async-1-5-2 async@1.5.2
262 silly lockFile 20ec6cb4-async-1-4-0 async@^1.4.0
263 silly lockFile 20ec6cb4-async-1-4-0 async@^1.4.0
264 http 200 https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz
265 verbose tar unpack /home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/tmp.tgz
266 silly lockFile 5f1c1b18-6303-0-39077482745051384-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package
267 verbose lock tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package /home/coder/.npm/5f1c1b18-6303-0-39077482745051384-package.lock
268 silly lockFile dfac0437-6303-0-39077482745051384-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/tmp.tgz
269 verbose lock tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/tmp.tgz /home/coder/.npm/dfac0437-6303-0-39077482745051384-tmp-tgz.lock
270 silly gunzTarPerm modes [ '755', '644' ]
271 silly gunzTarPerm extractEntry package.json
272 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
273 silly gunzTarPerm extractEntry README.md
274 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
275 silly gunzTarPerm extractEntry LICENSE
276 silly gunzTarPerm modified mode [ 'LICENSE', 436, 420 ]
277 silly gunzTarPerm extractEntry bin/extract-props.js
278 silly gunzTarPerm modified mode [ 'bin/extract-props.js', 509, 493 ]
279 silly gunzTarPerm extractEntry bin/uglifyjs
280 silly gunzTarPerm modified mode [ 'bin/uglifyjs', 509, 493 ]
281 silly gunzTarPerm extractEntry lib/ast.js
282 silly gunzTarPerm modified mode [ 'lib/ast.js', 436, 420 ]
283 silly gunzTarPerm extractEntry lib/compress.js
284 silly gunzTarPerm modified mode [ 'lib/compress.js', 436, 420 ]
285 silly gunzTarPerm extractEntry lib/mozilla-ast.js
286 silly gunzTarPerm modified mode [ 'lib/mozilla-ast.js', 436, 420 ]
287 silly gunzTarPerm extractEntry lib/output.js
288 silly gunzTarPerm modified mode [ 'lib/output.js', 436, 420 ]
289 silly gunzTarPerm extractEntry lib/parse.js
290 silly gunzTarPerm modified mode [ 'lib/parse.js', 436, 420 ]
291 silly gunzTarPerm extractEntry lib/propmangle.js
292 silly gunzTarPerm modified mode [ 'lib/propmangle.js', 436, 420 ]
293 silly gunzTarPerm extractEntry lib/scope.js
294 silly gunzTarPerm modified mode [ 'lib/scope.js', 436, 420 ]
295 silly gunzTarPerm extractEntry lib/sourcemap.js
296 silly gunzTarPerm modified mode [ 'lib/sourcemap.js', 436, 420 ]
297 silly gunzTarPerm extractEntry lib/transform.js
298 silly gunzTarPerm modified mode [ 'lib/transform.js', 436, 420 ]
299 silly gunzTarPerm extractEntry lib/utils.js
300 silly gunzTarPerm modified mode [ 'lib/utils.js', 436, 420 ]
301 silly gunzTarPerm extractEntry tools/exports.js
302 silly gunzTarPerm modified mode [ 'tools/exports.js', 436, 420 ]
303 silly gunzTarPerm extractEntry tools/node.js
304 silly gunzTarPerm modified mode [ 'tools/node.js', 436, 420 ]
305 silly gunzTarPerm extractEntry tools/domprops.json
306 silly gunzTarPerm modified mode [ 'tools/domprops.json', 436, 420 ]
307 silly gunzTarPerm extractEntry tools/props.html
308 silly gunzTarPerm modified mode [ 'tools/props.html', 436, 420 ]
309 silly lockFile 5f1c1b18-6303-0-39077482745051384-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package
310 silly lockFile 5f1c1b18-6303-0-39077482745051384-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package
311 silly lockFile dfac0437-6303-0-39077482745051384-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/tmp.tgz
312 silly lockFile dfac0437-6303-0-39077482745051384-tmp-tgz tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/tmp.tgz
313 verbose tar pack [ '/home/coder/.npm/uglify-js/2.6.4/package.tgz',
313 verbose tar pack   '/home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package' ]
314 verbose tarball /home/coder/.npm/uglify-js/2.6.4/package.tgz
315 verbose folder /home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package
316 silly lockFile 5f1c1b18-6303-0-39077482745051384-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package
317 verbose lock tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package /home/coder/.npm/5f1c1b18-6303-0-39077482745051384-package.lock
318 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
319 verbose lock tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz /home/coder/.npm/8bc88bcb--npm-uglify-js-2-6-4-package-tgz.lock
320 silly lockFile 5f1c1b18-6303-0-39077482745051384-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package
321 silly lockFile 5f1c1b18-6303-0-39077482745051384-package tar:///home/coder/tmp/npm-30407-8v3ZKvU9/1466600396303-0.39077482745051384/package
322 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
323 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
324 silly lockFile a0582151-oder-npm-uglify-js-2-6-4-package /home/coder/.npm/uglify-js/2.6.4/package
325 verbose lock /home/coder/.npm/uglify-js/2.6.4/package /home/coder/.npm/a0582151-oder-npm-uglify-js-2-6-4-package.lock
326 silly lockFile a0582151-oder-npm-uglify-js-2-6-4-package /home/coder/.npm/uglify-js/2.6.4/package
327 silly lockFile a0582151-oder-npm-uglify-js-2-6-4-package /home/coder/.npm/uglify-js/2.6.4/package
328 verbose tar unpack /home/coder/.npm/uglify-js/2.6.4/package.tgz
329 silly lockFile 00f2c320-oder-npm-uglify-js-2-6-4-package tar:///home/coder/.npm/uglify-js/2.6.4/package
330 verbose lock tar:///home/coder/.npm/uglify-js/2.6.4/package /home/coder/.npm/00f2c320-oder-npm-uglify-js-2-6-4-package.lock
331 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
332 verbose lock tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz /home/coder/.npm/8bc88bcb--npm-uglify-js-2-6-4-package-tgz.lock
333 silly gunzTarPerm modes [ '755', '644' ]
334 silly gunzTarPerm extractEntry package.json
335 silly gunzTarPerm extractEntry README.md
336 silly gunzTarPerm extractEntry LICENSE
337 silly gunzTarPerm extractEntry bin/extract-props.js
338 silly gunzTarPerm extractEntry bin/uglifyjs
339 silly gunzTarPerm extractEntry lib/ast.js
340 silly gunzTarPerm extractEntry lib/compress.js
341 silly gunzTarPerm extractEntry lib/mozilla-ast.js
342 silly gunzTarPerm extractEntry lib/output.js
343 silly gunzTarPerm extractEntry lib/parse.js
344 silly gunzTarPerm extractEntry lib/propmangle.js
345 silly gunzTarPerm extractEntry lib/scope.js
346 silly gunzTarPerm extractEntry lib/sourcemap.js
347 silly gunzTarPerm extractEntry lib/transform.js
348 silly gunzTarPerm extractEntry lib/utils.js
349 silly gunzTarPerm extractEntry tools/exports.js
350 silly gunzTarPerm extractEntry tools/node.js
351 silly gunzTarPerm extractEntry tools/domprops.json
352 silly gunzTarPerm extractEntry tools/props.html
353 silly lockFile 00f2c320-oder-npm-uglify-js-2-6-4-package tar:///home/coder/.npm/uglify-js/2.6.4/package
354 silly lockFile 00f2c320-oder-npm-uglify-js-2-6-4-package tar:///home/coder/.npm/uglify-js/2.6.4/package
355 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
356 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
357 verbose chmod /home/coder/.npm/uglify-js/2.6.4/package.tgz 644
358 verbose chown /home/coder/.npm/uglify-js/2.6.4/package.tgz [ 1001, 1001 ]
359 silly lockFile 93779cfb-rg-uglify-js-uglify-js-2-6-4-tgz https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz
360 silly lockFile 93779cfb-rg-uglify-js-uglify-js-2-6-4-tgz https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz
361 silly lockFile 9f3d25e7-uglify-js-2-6-4 uglify-js@2.6.4
362 silly lockFile 9f3d25e7-uglify-js-2-6-4 uglify-js@2.6.4
363 silly lockFile 4832b74b-uglify-js-2-6 uglify-js@^2.6
364 silly lockFile 4832b74b-uglify-js-2-6 uglify-js@^2.6
365 silly resolved [ { name: 'source-map',
365 silly resolved     description: 'Generates and consumes source maps',
365 silly resolved     version: '0.4.4',
365 silly resolved     homepage: 'https://github.com/mozilla/source-map',
365 silly resolved     author: { name: 'Nick Fitzgerald', email: 'nfitzgerald@mozilla.com' },
365 silly resolved     contributors:
365 silly resolved      [ [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object],
365 silly resolved        [Object] ],
365 silly resolved     repository: { type: 'git', url: 'http://github.com/mozilla/source-map.git' },
365 silly resolved     directories: { lib: './lib' },
365 silly resolved     main: './lib/source-map.js',
365 silly resolved     files: [ 'lib/', 'build/' ],
365 silly resolved     engines: { node: '>=0.8.0' },
365 silly resolved     license: 'BSD-3-Clause',
365 silly resolved     dependencies: { amdefine: '>=0.0.4' },
365 silly resolved     devDependencies: { dryice: '>=0.4.8' },
365 silly resolved     scripts:
365 silly resolved      { test: 'node test/run-tests.js',
365 silly resolved        build: 'node Makefile.dryice.js' },
365 silly resolved     readme: '# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n```js\nvar rawSourceMap = {\n  version: 3,\n  file: \'min.js\',\n  names: [\'bar\', \'baz\', \'n\'],\n  sources: [\'one.js\', \'two.js\'],\n  sourceRoot: \'http://example.com/www/js/\',\n  mappings: \'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA\'\n};\n\nvar smc = new SourceMapConsumer(rawSourceMap);\n\nconsole.log(smc.sources);\n// [ \'http://example.com/www/js/one.js\',\n//   \'http://example.com/www/js/two.js\' ]\n\nconsole.log(smc.originalPositionFor({\n  line: 2,\n  column: 28\n}));\n// { source: \'http://example.com/www/js/two.js\',\n//   line: 2,\n//   column: 10,\n//   name: \'n\' }\n\nconsole.log(smc.generatedPositionFor({\n  source: \'http://example.com/www/js/two.js\',\n  line: 2,\n  column: 10\n}));\n// { line: 2, column: 28 }\n\nsmc.eachMapping(function (m) {\n  // ...\n});\n```\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n```js\nfunction compile(ast) {\n  switch (ast.type) {\n  case \'BinaryExpression\':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      [compile(ast.left), " + ", compile(ast.right)]\n    );\n  case \'Literal\':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      String(ast.value)\n    );\n  // ...\n  default:\n    throw new Error("Bad AST");\n  }\n}\n\nvar ast = parse("40 + 2", "add.js");\nconsole.log(compile(ast).toStringWithSourceMap({\n  file: \'add.js\'\n}));\n// { code: \'40 + 2\',\n//   map: [object SourceMapGenerator] }\n```\n\n#### With SourceMapGenerator (low level API)\n\n```js\nvar map = new SourceMapGenerator({\n  file: "source-mapped.js"\n});\n\nmap.addMapping({\n  generated: {\n    line: 10,\n    column: 35\n  },\n  source: "foo.js",\n  original: {\n    line: 33,\n    column: 2\n  },\n  name: "christopher"\n});\n\nconsole.log(map.toString());\n// \'{"version":3,"file":"source-mapped.js","sources":["foo.js"],"names":["christopher"],"mappings":";;;;;;;;;mCAgCEA"}\'\n```\n\n## API\n\nGet a reference to the module:\n\n```js\n// NodeJS\nvar sourceMap = require(\'source-map\');\n\n// Browser builds\nvar sourceMap = window.sourceMap;\n\n// Inside Firefox\nlet sourceMap = {};\nComponents.utils.import(\'resource:///modules/devtools/SourceMap.jsm\', sourceMap);\n```\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`\'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.computeColumnSpans()\n\nCompute the last column for each generated mapping. The last column is\ninclusive.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource\'s line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\n* `bias`: Either `SourceMapConsumer.GREATEST_LOWER_BOUND` or\n  `SourceMapConsumer.LEAST_UPPER_BOUND`. Specifies whether to return the closest\n  element that is smaller than or greater than the one we are searching for,\n  respectively, if the exact element cannot be found.  Defaults to\n  `SourceMapConsumer.GREATEST_LOWER_BOUND`.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)\n\nReturns all generated line and column information for the original source, line,\nand column provided. If no column is provided, returns all mappings\ncorresponding to a either the line we are searching for or the next closest line\nthat has any mappings. Otherwise, returns all mappings corresponding to the\ngiven line and either the column we are searching for or the next closest column\nthat has any offsets.\n\nThe only argument is an object with the following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: Optional. The column number in the original source.\n\nand an array of objects is returned, each with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.hasContentsOfAllSources()\n\nReturn true if we have the embedded source content for every source listed in\nthe source map, false otherwise.\n\nIn other words, if this method returns `true`, then `smc.sourceContentFor(s)`\nwill succeed for every source `s` in `smc.sources`.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\nIf the source content for the given source is not found, then an error is\nthrown. Optionally, pass `true` as the second param to have `null` returned\ninstead.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file\'s line/column order or the\n  original\'s source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n* `skipValidation`: Optional. When `true`, disables validation of mappings as\n  they are added. This can improve performance but should be used with\n  discretion, as a last resort. Even then, one should avoid using this flag when\n  running tests, if possible.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource\'s line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren\'t in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `\'.\'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn\'t associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn\'t associated with an original column.\n\n* `source`: The original source\'s filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n* `relativePath` The optional path that relative sources in `sourceMapConsumer`\n  should be relative to.\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source\'s line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node\'s children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n#### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with "test", for example\n\n```js\nexports["test doing the foo bar"] = function (assert, util) {\n  ...\n};\n```\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node\'s assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox\'s test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n',
365 silly resolved     readmeFilename: 'README.md',
365 silly resolved     bugs: { url: 'https://github.com/mozilla/source-map/issues' },
365 silly resolved     _id: 'source-map@0.4.4',
365 silly resolved     _from: 'source-map@^0.4.4' },
365 silly resolved   { name: 'optimist',
365 silly resolved     version: '0.6.1',
365 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
365 silly resolved     main: './index.js',
365 silly resolved     dependencies: { wordwrap: '~0.0.2', minimist: '~0.0.1' },
365 silly resolved     devDependencies: { hashish: '~0.0.4', tap: '~0.4.0' },
365 silly resolved     scripts: { test: 'tap ./test/*.js' },
365 silly resolved     repository:
365 silly resolved      { type: 'git',
365 silly resolved        url: 'http://github.com/substack/node-optimist.git' },
365 silly resolved     keywords:
365 silly resolved      [ 'argument',
365 silly resolved        'args',
365 silly resolved        'option',
365 silly resolved        'parser',
365 silly resolved        'parsing',
365 silly resolved        'cli',
365 silly resolved        'command' ],
365 silly resolved     author:
365 silly resolved      { name: 'James Halliday',
365 silly resolved        email: 'mail@substack.net',
365 silly resolved        url: 'http://substack.net' },
365 silly resolved     license: 'MIT/X11',
365 silly resolved     engine: { node: '>=0.4' },
365 silly resolved     readme: '# DEPRECATION NOTICE\n\nI don\'t want to maintain this module anymore since I just use\n[minimist](https://npmjs.org/package/minimist), the argument parsing engine,\ndirectly instead nowadays.\n\nSee [yargs](https://github.com/chevex/yargs) for the modern, pirate-themed\nsuccessor to optimist.\n\n[![yarrrrrrrgs!](http://i.imgur.com/4WFGVJ9.png)](https://github.com/chevex/yargs)\n\nYou should also consider [nomnom](https://github.com/harthur/nomnom).\n\noptimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn\'t have to suck (as much).\n\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\n\nexamples\n========\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\n\nif (argv.rif - 5 * argv.xup > 7.138) {\n    console.log(\'Buy more riffiwobbles\');\n}\nelse {\n    console.log(\'Sell the xupptumblers\');\n}\n````\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\n![This one\'s optimistic.](http://substack.net/images/optimistic.png)\n\nBut wait! There\'s more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'optimist\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le chat dit: \' : \'The cat says: \');\n}\nconsole.log(\n    (argv.fr ? \'miaou\' : \'meow\') + (argv.p ? \'.\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ \'moo\' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ \'foo\', \'bar\', \'baz\' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Usage: $0 -x [num] -y [num]\')\n    .demand([\'x\',\'y\'])\n    .argv;\n\nconsole.log(argv.x / argv.y);\n````\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ node ./divide.js -x 4.91 -z 2.51\n    Usage: node ./divide.js -x [num] -y [num]\n\n    Options:\n      -x  [required]\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv);\n````\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ \'bar\', \'baz\', \'foo\' ]\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .argv\n;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'optimist\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'optimist\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'optimist\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\n\n.default(key, value)\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\n.demand(key)\n------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'optimist\')\n    .options(\'f\', {\n        alias : \'file\',\n        default : \'/etc/passwd\',\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'optimist\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n.usage(message)\n---------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\nexit.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\n`false`.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\n.help()\n-------\n\nReturn the generated usage string.\n\n.showHelp(fn=console.error)\n---------------------------\n\nPrint the usage data using `fn` for printing.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\nshort numbers\n-------------\n\nShort numeric `head -n5` style argument work too:\n\n    $ node reflect.js -n123 -m456\n    { \'3\': true,\n      \'6\': true,\n      _: [],\n      \'$0\': \'node ./reflect.js\',\n      n: 123,\n      m: 456 }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
365 silly resolved     readmeFilename: 'readme.markdown',
365 silly resolved     bugs: { url: 'https://github.com/substack/node-optimist/issues' },
365 silly resolved     _id: 'optimist@0.6.1',
365 silly resolved     _from: 'optimist@^0.6.1' },
365 silly resolved   { name: 'async',
365 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
365 silly resolved     main: 'lib/async.js',
365 silly resolved     files: [ 'lib', 'dist/async.js', 'dist/async.min.js' ],
365 silly resolved     author: { name: 'Caolan McMahon' },
365 silly resolved     version: '1.5.2',
365 silly resolved     keywords: [ 'async', 'callback', 'utility', 'module' ],
365 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
365 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
365 silly resolved     license: 'MIT',
365 silly resolved     devDependencies:
365 silly resolved      { benchmark: 'bestiejs/benchmark.js',
365 silly resolved        bluebird: '^2.9.32',
365 silly resolved        chai: '^3.1.0',
365 silly resolved        coveralls: '^2.11.2',
365 silly resolved        'es6-promise': '^2.3.0',
365 silly resolved        jscs: '^1.13.1',
365 silly resolved        jshint: '~2.8.0',
365 silly resolved        karma: '^0.13.2',
365 silly resolved        'karma-browserify': '^4.2.1',
365 silly resolved        'karma-firefox-launcher': '^0.1.6',
365 silly resolved        'karma-mocha': '^0.2.0',
365 silly resolved        'karma-mocha-reporter': '^1.0.2',
365 silly resolved        lodash: '^3.9.0',
365 silly resolved        mkdirp: '~0.5.1',
365 silly resolved        mocha: '^2.2.5',
365 silly resolved        'native-promise-only': '^0.8.0-a',
365 silly resolved        nodeunit: '>0.0.0',
365 silly resolved        nyc: '^2.1.0',
365 silly resolved        rsvp: '^3.0.18',
365 silly resolved        semver: '^4.3.6',
365 silly resolved        'uglify-js': '~2.4.0',
365 silly resolved        xyz: '^0.5.0',
365 silly resolved        yargs: '~3.9.1' },
365 silly resolved     jam: { main: 'lib/async.js', include: [Object], categories: [Object] },
365 silly resolved     scripts:
365 silly resolved      { 'mocha-node-test': 'mocha mocha_test/',
365 silly resolved        'mocha-browser-test': 'karma start',
365 silly resolved        'mocha-test': 'npm run mocha-node-test && npm run mocha-browser-test',
365 silly resolved        'nodeunit-test': 'nodeunit test/test-async.js',
365 silly resolved        test: 'npm run-script lint && npm run nodeunit-test && npm run mocha-test',
365 silly resolved        lint: 'jshint lib/*.js test/*.js perf/*.js && jscs lib/*.js test/*.js perf/*.js',
365 silly resolved        coverage: 'nyc npm test && nyc report',
365 silly resolved        coveralls: 'nyc npm test && nyc report --reporter=text-lcov | coveralls' },
365 silly resolved     spm: { main: 'lib/async.js' },
365 silly resolved     volo: { main: 'lib/async.js', ignore: [Object] },
365 silly resolved     readme: '# Async.js\n\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)\n[![NPM version](http://img.shields.io/npm/v/async.svg)](https://www.npmjs.org/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [Node.js](http://nodejs.org) and installable via `npm install async`,\nit can also be used directly in the browser.\n\nAsync is also installable via:\n\n- [bower](http://bower.io/): `bower install async`\n- [component](https://github.com/component/component): `component install\n  caolan/async`\n- [jam](http://jamjs.org/): `jam install async`\n- [spm](http://spmjs.io/): `spm install async`\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (`map`, `reduce`, `filter`, `each`…) as well as some common patterns\nfor asynchronous control flow (`parallel`, `series`, `waterfall`…). All these\nfunctions assume you follow the Node.js convention of providing a single\ncallback as the last argument of your `async` function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls <sub>[(StackOverflow)](http://stackoverflow.com/questions/tagged/async.js)</sub>\n### Synchronous iteration functions\n\nIf you get an error like `RangeError: Maximum call stack size exceeded.` or other stack overflow issues when using async, you are likely using a synchronous iterator.  By *synchronous* we mean a function that calls its callback on the same tick in the javascript event loop, without doing any I/O or using any timers.  Calling many callbacks iteratively will quickly overflow the stack. If you run into this issue, just defer your callback with `async.setImmediate` to start a new call stack on the next tick of the event loop.\n\nThis can also arise by accident if you callback early in certain cases:\n\n```js\nasync.eachSeries(hugeArray, function iterator(item, callback) {\n  if (inCache(item)) {\n    callback(null, cache[item]); // if many items are cached, you\'ll overflow\n  } else {\n    doSomeIO(item, callback);\n  }\n}, function done() {\n  //...\n});\n```\n\nJust change it to:\n\n```js\nasync.eachSeries(hugeArray, function iterator(item, callback) {\n  if (inCache(item)) {\n    async.setImmediate(function () {\n      callback(null, cache[item]);\n    });\n  } else {\n    doSomeIO(item, callback);\n  //...\n```\n\nAsync guards against synchronous functions in some, but not all, cases.  If you are still running into stack overflows, you can defer as suggested above, or wrap functions with [`async.ensureAsync`](#ensureAsync)  Functions that are asynchronous by their nature do not have this problem and don\'t need the extra callback deferral.\n\nIf JavaScript\'s event loop is still a bit nebulous, check out [this article](http://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/) or [this talk](http://2014.jsconf.eu/speakers/philip-roberts-what-the-heck-is-the-event-loop-anyway.html) for more detailed information about how it works.\n\n\n### Multiple callbacks\n\nMake sure to always `return` when calling a callback early, otherwise you will cause multiple callbacks and unpredictable behavior in many cases.\n\n```js\nasync.waterfall([\n    function (callback) {\n        getSomething(options, function (err, result) {\n          if (err) {\n            callback(new Error("failed getting something:" + err.message));\n            // we should return here\n          }\n          // since we did not return, this callback still will be called and\n          // `processData` will be called twice\n          callback(null, result);\n        });\n    },\n    processData\n], done)\n```\n\nIt is always good practice to `return callback(err, result)`  whenever a callback call is not the last statement of a function.\n\n\n### Binding a context to an iterator\n\nThis section is really about `bind`, not about `async`. If you are wondering how to\nmake `async` execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){\n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its\n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](https://github.com/caolan/async/blob/master/lib/async.js).\nAlternatively, you can install using Node Package Manager (`npm`):\n\n    npm install async\n\nAs well as using Bower:\n\n    bower install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5.\n\nUsage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\nSome functions are also available in the following forms:\n* `<name>Series` - the same as `<name>` but runs only a single async operation at a time\n* `<name>Limit` - the same as `<name>` but runs a maximum of `limit` async operations at a time\n\n### Collections\n\n* [`each`](#each), `eachSeries`, `eachLimit`\n* [`forEachOf`](#forEachOf), `forEachOfSeries`, `forEachOfLimit`\n* [`map`](#map), `mapSeries`, `mapLimit`\n* [`filter`](#filter), `filterSeries`, `filterLimit`\n* [`reject`](#reject), `rejectSeries`, `rejectLimit`\n* [`reduce`](#reduce), [`reduceRight`](#reduceRight)\n* [`detect`](#detect), `detectSeries`, `detectLimit`\n* [`sortBy`](#sortBy)\n* [`some`](#some), `someLimit`\n* [`every`](#every), `everyLimit`\n* [`concat`](#concat), `concatSeries`\n\n### Control Flow\n\n* [`series`](#seriestasks-callback)\n* [`parallel`](#parallel), `parallelLimit`\n* [`whilst`](#whilst), [`doWhilst`](#doWhilst)\n* [`until`](#until), [`doUntil`](#doUntil)\n* [`during`](#during), [`doDuring`](#doDuring)\n* [`forever`](#forever)\n* [`waterfall`](#waterfall)\n* [`compose`](#compose)\n* [`seq`](#seq)\n* [`applyEach`](#applyEach), `applyEachSeries`\n* [`queue`](#queue), [`priorityQueue`](#priorityQueue)\n* [`cargo`](#cargo)\n* [`auto`](#auto)\n* [`retry`](#retry)\n* [`iterator`](#iterator)\n* [`times`](#times), `timesSeries`, `timesLimit`\n\n### Utils\n\n* [`apply`](#apply)\n* [`nextTick`](#nextTick)\n* [`memoize`](#memoize)\n* [`unmemoize`](#unmemoize)\n* [`ensureAsync`](#ensureAsync)\n* [`constant`](#constant)\n* [`asyncify`](#asyncify)\n* [`wrapSync`](#wrapSync)\n* [`log`](#log)\n* [`dir`](#dir)\n* [`noConflict`](#noConflict)\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, [callback])\n\nApplies the function `iterator` to each item in `arr`, in parallel.\nThe `iterator` is called with an item from the list, and a callback for when it\nhas finished. If the `iterator` passes an error to its `callback`, the main\n`callback` (for the `each` function) is immediately called with the error.\n\nNote, that since this function applies `iterator` to each item in parallel,\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err)` which must be called once it has\n  completed. If no error has occurred, the `callback` should be run without\n  arguments or with an explicit `null` argument.  The array index is not passed\n  to the iterator.  If you need the index, use [`forEachOf`](#forEachOf).\n* `callback(err)` - *Optional* A callback which is called when all `iterator` functions\n  have finished, or an error occurs.\n\n__Examples__\n\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n```js\n// assuming openFiles is an array of file names\n\nasync.each(openFiles, function(file, callback) {\n\n  // Perform operation on file here.\n  console.log(\'Processing file \' + file);\n\n  if( file.length > 32 ) {\n    console.log(\'This file name is too long\');\n    callback(\'File name too long\');\n  } else {\n    // Do work to process file here\n    console.log(\'File processed\');\n    callback();\n  }\n}, function(err){\n    // if any of the file processing produced an error, err would equal that error\n    if( err ) {\n      // One of the iterations produced an error.\n      // All processing will now stop.\n      console.log(\'A file failed to process\');\n    } else {\n      console.log(\'All files have been processed successfully\');\n    }\n});\n```\n\n__Related__\n\n* eachSeries(arr, iterator, [callback])\n* eachLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="forEachOf" />\n<a name="eachOf" />\n\n### forEachOf(obj, iterator, [callback])\n\nLike `each`, except that it iterates over objects, and passes the key as the second argument to the iterator.\n\n__Arguments__\n\n* `obj` - An object or array to iterate over.\n* `iterator(item, key, callback)` - A function to apply to each item in `obj`.\nThe `key` is the item\'s key, or index in the case of an array. The iterator is\npassed a `callback(err)` which must be called once it has completed. If no\nerror has occurred, the callback should be run without arguments or with an\nexplicit `null` argument.\n* `callback(err)` - *Optional* A callback which is called when all `iterator` functions have finished, or an error occurs.\n\n__Example__\n\n```js\nvar obj = {dev: "/dev.json", test: "/test.json", prod: "/prod.json"};\nvar configs = {};\n\nasync.forEachOf(obj, function (value, key, callback) {\n  fs.readFile(__dirname + value, "utf8", function (err, data) {\n    if (err) return callback(err);\n    try {\n      configs[key] = JSON.parse(data);\n    } catch (e) {\n      return callback(e);\n    }\n    callback();\n  })\n}, function (err) {\n  if (err) console.error(err.message);\n  // configs is now a map of JSON data\n  doSomethingWith(configs);\n})\n```\n\n__Related__\n\n* forEachOfSeries(obj, iterator, [callback])\n* forEachOfLimit(obj, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, [callback])\n\nProduces a new array of values by mapping each value in `arr` through\nthe `iterator` function. The `iterator` is called with an item from `arr` and a\ncallback for when it has finished processing. Each of these callback takes 2 arguments:\nan `error`, and the transformed item from `arr`. If `iterator` passes an error to its\ncallback, the main `callback` (for the `map` function) is immediately called with the error.\n\nNote, that since this function applies the `iterator` to each item in parallel,\nthere is no guarantee that the `iterator` functions will complete in order.\nHowever, the results array will be in the same order as the original `arr`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, transformed)` which must be called once\n  it has completed with an error (which can be `null`) and a transformed item.\n* `callback(err, results)` - *Optional* A callback which is called when all `iterator`\n  functions have finished, or an error occurs. Results is an array of the\n  transformed items from the `arr`.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n__Related__\n* mapSeries(arr, iterator, [callback])\n* mapLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="select" />\n<a name="filter" />\n### filter(arr, iterator, [callback])\n\n__Alias:__ `select`\n\nReturns a new array of all the values in `arr` which pass an async truth test.\n_The callback for each `iterator` call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in `arr`.\n  The `iterator` is passed a `callback(truthValue)`, which must be called with a\n  boolean argument once it has completed.\n* `callback(results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n__Related__\n\n* filterSeries(arr, iterator, [callback])\n* filterLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, [callback])\n\nThe opposite of [`filter`](#filter). Removes values that pass an `async` truth test.\n\n__Related__\n\n* rejectSeries(arr, iterator, [callback])\n* rejectLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, [callback])\n\n__Aliases:__ `inject`, `foldl`\n\nReduces `arr` into a single value using an async `iterator` to return\neach successive step. `memo` is the initial state of the reduction.\nThis function only operates in series.\n\nFor performance reasons, it may make sense to split a call to this function into\na parallel map, and then use the normal `Array.prototype.reduce` on the results.\nThis function is for situations where each step in the reduction needs to be async;\nif you can get the data before reducing it, then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `memo` - The initial state of the reduction.\n* `iterator(memo, item, callback)` - A function applied to each item in the\n  array to produce the next step in the reduction. The `iterator` is passed a\n  `callback(err, reduction)` which accepts an optional error as its first\n  argument, and the state of the reduction as the second. If an error is\n  passed to the callback, the reduction is stopped and the main `callback` is\n  immediately called with the error.\n* `callback(err, result)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, [callback])\n\n__Alias:__ `foldr`\n\nSame as [`reduce`](#reduce), only operates on `arr` in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, [callback])\n\nReturns the first value in `arr` that passes an async truth test. The\n`iterator` is applied in parallel, meaning the first iterator to return `true` will\nfire the detect `callback` with that result. That means the result might not be\nthe first item in the original `arr` (in terms of order) that passes the test.\n\nIf order within the original `arr` is important, then look at [`detectSeries`](#detectSeries).\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in `arr`.\n  The iterator is passed a `callback(truthValue)` which must be called with a\n  boolean argument once it has completed. **Note: this callback does not take an error as its first argument.**\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `true`, or after all the `iterator` functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value `undefined` if none passed.  **Note: this callback does not take an error as its first argument.**\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n__Related__\n\n* detectSeries(arr, iterator, [callback])\n* detectLimit(arr, limit, iterator, [callback])\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, [callback])\n\nSorts a list by the results of running each `arr` value through an async `iterator`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, sortValue)` which must be called once it\n  has completed with an error (which can be `null`) and a value to use as the sort\n  criteria.\n* `callback(err, results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished, or an error occurs. Results is the items from\n  the original `arr` sorted by the values returned by the `iterator` calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n__Sort Order__\n\nBy modifying the callback parameter the sorting order can be influenced:\n\n```js\n//ascending order\nasync.sortBy([1,9,3,5], function(x, callback){\n    callback(null, x);\n}, function(err,result){\n    //result callback\n} );\n\n//descending order\nasync.sortBy([1,9,3,5], function(x, callback){\n    callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n}, function(err,result){\n    //result callback\n} );\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, [callback])\n\n__Alias:__ `any`\n\nReturns `true` if at least one element in the `arr` satisfies an async test.\n_The callback for each iterator call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`. Once any iterator\ncall returns `true`, the main `callback` is immediately called.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in the array\n  in parallel. The iterator is passed a `callback(truthValue)`` which must be\n  called with a boolean argument once it has completed.\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `true`, or after all the iterator functions have finished. Result will be\n  either `true` or `false` depending on the values of the async tests.\n\n **Note: the callbacks do not take an error as their first argument.**\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n__Related__\n\n* someLimit(arr, limit, iterator, callback)\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, [callback])\n\n__Alias:__ `all`\n\nReturns `true` if every element in `arr` satisfies an async test.\n_The callback for each `iterator` call only accepts a single argument of `true` or\n`false`; it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like `fs.exists`.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A truth test to apply to each item in the array\n  in parallel. The iterator is passed a `callback(truthValue)` which must be\n  called with a  boolean argument once it has completed.\n* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns\n  `false`, or after all the iterator functions have finished. Result will be\n  either `true` or `false` depending on the values of the async tests.\n\n **Note: the callbacks do not take an error as their first argument.**\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n__Related__\n\n* everyLimit(arr, limit, iterator, callback)\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, [callback])\n\nApplies `iterator` to each item in `arr`, concatenating the results. Returns the\nconcatenated list. The `iterator`s are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of `arr` passed to the `iterator` function.\n\n__Arguments__\n\n* `arr` - An array to iterate over.\n* `iterator(item, callback)` - A function to apply to each item in `arr`.\n  The iterator is passed a `callback(err, results)` which must be called once it\n  has completed with an error (which can be `null`) and an array of results.\n* `callback(err, results)` - *Optional* A callback which is called after all the `iterator`\n  functions have finished, or an error occurs. Results is an array containing\n  the concatenated results of the `iterator` function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n__Related__\n\n* concatSeries(arr, iterator, [callback])\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun the functions in the `tasks` array in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run, and `callback` is immediately called with the value of the error.\nOtherwise, `callback` receives an array of results when `tasks` have completed.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function, and the results will be passed to the final `callback` as an object\ninstead of an array. This can be a more readable way of handling results from\n[`series`](#series).\n\n**Note** that while many implementations preserve the order of object properties, the\n[ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\nexplicitly states that\n\n> The mechanics and order of enumerating the properties is not specified.\n\nSo if you rely on the order in which your series of functions are executed, and want\nthis to work on all platforms, consider using an array.\n\n__Arguments__\n\n* `tasks` - An array or object containing functions to run, each function is passed\n  a `callback(err, result)` it must call on completion with an error `err` (which can\n  be `null`) and an optional `result` value.\n* `callback(err, results)` - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all\n  the result arguments passed to the `task` callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun the `tasks` array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main `callback` is immediately called with the value of the error.\nOnce the `tasks` have completed, the results are passed to the final `callback` as an\narray.\n\n**Note:** `parallel` is about kicking-off I/O tasks in parallel, not about parallel execution of code.  If your tasks do not use any timers or perform any I/O, they will actually be executed in series.  Any synchronous setup sections for each task will happen one after the other.  JavaScript remains single-threaded.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final `callback` as an object\ninstead of an array. This can be a more readable way of handling results from\n[`parallel`](#parallel).\n\n\n__Arguments__\n\n* `tasks` - An array or object containing functions to run. Each function is passed\n  a `callback(err, result)` which it must call on completion with an error `err`\n  (which can be `null`) and an optional `result` value.\n* `callback(err, results)` - An optional callback to run once all the functions\n  have completed successfully. This function gets a results array (or object) containing all\n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n__Related__\n\n* parallelLimit(tasks, limit, [callback])\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call `fn`, while `test` returns `true`. Calls `callback` when stopped,\nor an error occurs.\n\n__Arguments__\n\n* `test()` - synchronous truth test to perform before each execution of `fn`.\n* `fn(callback)` - A function which is called each time `test` passes. The function is\n  passed a `callback(err)`, which must be called once it has completed with an\n  optional `err` argument.\n* `callback(err, [results])` - A callback which is called after the test\n  function has failed and repeated execution of `fn` has stopped. `callback`\n  will be passed an error and any arguments passed to the final `fn`\'s callback.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(function () {\n            callback(null, count);\n        }, 1000);\n    },\n    function (err, n) {\n        // 5 seconds have passed, n = 5\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post-check version of [`whilst`](#whilst). To reflect the difference in\nthe order of operations, the arguments `test` and `fn` are switched.\n\n`doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call `fn` until `test` returns `true`. Calls `callback` when stopped,\nor an error occurs. `callback` will be passed an error and any arguments passed\nto the final `fn`\'s callback.\n\nThe inverse of [`whilst`](#whilst).\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike [`doWhilst`](#doWhilst), except the `test` is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="during" />\n### during(test, fn, callback)\n\nLike [`whilst`](#whilst), except the `test` is an asynchronous function that is passed a callback in the form of `function (err, truth)`. If error is passed to `test` or `fn`, the main callback is immediately called with the value of the error.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.during(\n    function (callback) {\n      return callback(null, count < 5);\n    },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doDuring" />\n### doDuring(fn, test, callback)\n\nThe post-check version of [`during`](#during). To reflect the difference in\nthe order of operations, the arguments `test` and `fn` are switched.\n\nAlso a version of [`doWhilst`](#doWhilst) with asynchronous `test` function.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, [errback])\n\nCalls the asynchronous function `fn` with a callback parameter that allows it to\ncall itself again, in series, indefinitely.\n\nIf an error is passed to the callback then `errback` is called with the\nerror, and execution stops, otherwise it will never be called.\n\n```js\nasync.forever(\n    function(next) {\n        // next is suitable for passing to things that need a callback(err [, whatever]);\n        // it will result in this function being called again.\n    },\n    function(err) {\n        // if next is called with a value in its first parameter, it will appear\n        // in here as \'err\', and execution will stop.\n    }\n);\n```\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns the `tasks` array of functions in series, each passing their results to the next in\nthe array. However, if any of the `tasks` pass an error to their own callback, the\nnext function is not executed, and the main `callback` is immediately called with\nthe error.\n\n__Arguments__\n\n* `tasks` - An array of functions to run, each function is passed a\n  `callback(err, result1, result2, ...)` it must call on completion. The first\n  argument is an error (which can be `null`) and any further arguments will be\n  passed as arguments in order to the next task.\n* `callback(err, [results])` - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback) {\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback) {\n      // arg1 now equals \'one\' and arg2 now equals \'two\'\n        callback(null, \'three\');\n    },\n    function(arg1, callback) {\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n    // result now equals \'done\'\n});\n```\nOr, with named functions:\n\n```js\nasync.waterfall([\n    myFirstFunction,\n    mySecondFunction,\n    myLastFunction,\n], function (err, result) {\n    // result now equals \'done\'\n});\nfunction myFirstFunction(callback) {\n  callback(null, \'one\', \'two\');\n}\nfunction mySecondFunction(arg1, arg2, callback) {\n  // arg1 now equals \'one\' and arg2 now equals \'two\'\n  callback(null, \'three\');\n}\nfunction myLastFunction(arg1, callback) {\n  // arg1 now equals \'three\'\n  callback(null, \'done\');\n}\n```\n\nOr, if you need to pass any argument to the first function:\n\n```js\nasync.waterfall([\n    async.apply(myFirstFunction, \'zero\'),\n    mySecondFunction,\n    myLastFunction,\n], function (err, result) {\n    // result now equals \'done\'\n});\nfunction myFirstFunction(arg1, callback) {\n  // arg1 now equals \'zero\'\n  callback(null, \'one\', \'two\');\n}\nfunction mySecondFunction(arg1, arg2, callback) {\n  // arg1 now equals \'one\' and arg2 now equals \'two\'\n  callback(null, \'three\');\n}\nfunction myLastFunction(arg1, callback) {\n  // arg1 now equals \'three\'\n  callback(null, \'done\');\n}\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions `f()`, `g()`, and `h()` would produce the result of\n`f(g(h()))`, only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* `functions...` - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="seq" />\n### seq(fn1, fn2...)\n\nVersion of the compose function that is more natural to read.\nEach function consumes the return value of the previous function.\nIt is the equivalent of [`compose`](#compose) with the arguments reversed.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* `functions...` - the asynchronous functions to compose\n\n\n__Example__\n\n```js\n// Requires lodash (or underscore), express3 and dresende\'s orm2.\n// Part of an app, that fetches cats of the logged user.\n// This example uses `seq` function to avoid overnesting and error\n// handling clutter.\napp.get(\'/cats\', function(request, response) {\n  var User = request.models.User;\n  async.seq(\n    _.bind(User.get, User),  // \'User.get\' has signature (id, callback(err, data))\n    function(user, fn) {\n      user.getCats(fn);      // \'getCats\' has signature (callback(err, data))\n    }\n  )(req.session.user_id, function (err, cats) {\n    if (err) {\n      console.error(err);\n      response.json({ status: \'error\', message: err.message });\n    } else {\n      response.json({ status: \'ok\', message: \'Cats found\', data: cats });\n    }\n  });\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling\n`callback` after all functions have completed. If you only provide the first\nargument, then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* `fns` - the asynchronous functions to all call with the same arguments\n* `args...` - any number of separate arguments to pass to the function\n* `callback` - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n__Related__\n\n* applyEachSeries(tasks, args..., [callback])\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, [concurrency])\n\nCreates a `queue` object with the specified `concurrency`. Tasks added to the\n`queue` are processed in parallel (up to the `concurrency` limit). If all\n`worker`s are in progress, the task is queued until one becomes available.\nOnce a `worker` completes a `task`, that `task`\'s callback is called.\n\n__Arguments__\n\n* `worker(task, callback)` - An asynchronous function for processing a queued\n  task, which must call its `callback(err)` argument when finished, with an\n  optional `error` as an argument.  If you want to handle errors from an individual task, pass a callback to `q.push()`.\n* `concurrency` - An `integer` for determining how many `worker` functions should be\n  run in parallel.  If omitted, the concurrency defaults to `1`.  If the concurrency is `0`, an error is thrown.\n\n__Queue objects__\n\nThe `queue` object returned by this function has the following properties and\nmethods:\n\n* `length()` - a function returning the number of items waiting to be processed.\n* `started` - a function returning whether or not any items have been pushed and processed by the queue\n* `running()` - a function returning the number of items currently being processed.\n* `workersList()` - a function returning the array of items currently being processed.\n* `idle()` - a function returning false if there are items waiting or being processed, or true if not.\n* `concurrency` - an integer for determining how many `worker` functions should be\n  run in parallel. This property can be changed after a `queue` is created to\n  alter the concurrency on-the-fly.\n* `push(task, [callback])` - add a new task to the `queue`. Calls `callback` once\n  the `worker` has finished processing the task. Instead of a single task, a `tasks` array\n  can be submitted. The respective callback is used for every task in the list.\n* `unshift(task, [callback])` - add a new task to the front of the `queue`.\n* `saturated` - a callback that is called when the `queue` length hits the `concurrency` limit,\n   and further tasks will be queued.\n* `empty` - a callback that is called when the last item from the `queue` is given to a `worker`.\n* `drain` - a callback that is called when the last item from the `queue` has returned from the `worker`.\n* `paused` - a boolean for determining whether the queue is in a paused state\n* `pause()` - a function that pauses the processing of tasks until `resume()` is called.\n* `resume()` - a function that resumes the processing of queued tasks when the queue is paused.\n* `kill()` - a function that removes the `drain` callback and empties remaining tasks from the queue forcing it to go idle.\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing item\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n\n---------------------------------------\n\n<a name="priorityQueue" />\n### priorityQueue(worker, concurrency)\n\nThe same as [`queue`](#queue) only tasks are assigned a priority and completed in ascending priority order. There are two differences between `queue` and `priorityQueue` objects:\n\n* `push(task, priority, [callback])` - `priority` should be a number. If an array of\n  `tasks` is given, all tasks will be assigned the same priority.\n* The `unshift` method was removed.\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a `cargo` object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the `payload` limit). If the\n`worker` is in progress, the task is queued until it becomes available. Once\nthe `worker` has completed some tasks, each callback of those tasks is called.\nCheck out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966) for how `cargo` and `queue` work.\n\nWhile [queue](#queue) passes only one task to one of a group of workers\nat a time, cargo passes an array of tasks to a single worker, repeating\nwhen the worker is finished.\n\n__Arguments__\n\n* `worker(tasks, callback)` - An asynchronous function for processing an array of\n  queued tasks, which must call its `callback(err)` argument when finished, with\n  an optional `err` argument.\n* `payload` - An optional `integer` for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe `cargo` object returned by this function has the following properties and\nmethods:\n\n* `length()` - A function returning the number of items waiting to be processed.\n* `payload` - An `integer` for determining how many tasks should be\n  process per round. This property can be changed after a `cargo` is created to\n  alter the payload on-the-fly.\n* `push(task, [callback])` - Adds `task` to the `queue`. The callback is called\n  once the `worker` has finished processing the task. Instead of a single task, an array of `tasks`\n  can be submitted. The respective callback is used for every task in the list.\n* `saturated` - A callback that is called when the `queue.length()` hits the concurrency and further tasks will be queued.\n* `empty` - A callback that is called when the last item from the `queue` is given to a `worker`.\n* `drain` - A callback that is called when the last item from the `queue` has returned from the `worker`.\n* `idle()`, `pause()`, `resume()`, `kill()` - cargo inherits all of the same methods and event calbacks as [`queue`](#queue)\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [concurrency], [callback])\n\nDetermines the best order for running the functions in `tasks`, based on their requirements. Each function can optionally depend on other functions being completed first, and each function is run as soon as its requirements are satisfied.\n\nIf any of the functions pass an error to their callback, the `auto` sequence will stop. Further tasks will not execute (so any other functions depending on it will not run), and the main `callback` is immediately called with the error.  Functions also receive an object containing the results of functions which have completed so far.\n\nNote, all functions are called with a `results` object as a second argument,\nso it is unsafe to pass functions in the `tasks` object which cannot handle the\nextra argument.\n\nFor example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling `readFile` with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to `readFile` in a function which does not forward the\n`results` object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* `tasks` - An object. Each of its properties is either a function or an array of\n  requirements, with the function itself the last item in the array. The object\'s key\n  of a property serves as the name of the task defined by that property,\n  i.e. can be used when specifying requirements for other tasks.\n  The function receives two arguments: (1) a `callback(err, result)` which must be\n  called when finished, passing an `error` (which can be `null`) and the result of\n  the function\'s execution, and (2) a `results` object, containing the results of\n  the previously executed functions.\n* `concurrency` - An optional `integer` for determining the maximum number of tasks that can be run in parallel. By default, as many as possible.\n* `callback(err, results)` - An optional callback which is called when all the\n  tasks have been completed. It receives the `err` argument if any `tasks`\n  pass an error to their callback. Results are always returned; however, if\n  an error occurs, no further `tasks` will be performed, and the results\n  object will only contain partial results.\n\n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        console.log(\'in get_data\');\n        // async code to get some data\n        callback(null, \'data\', \'converted to array\');\n    },\n    make_folder: function(callback){\n        console.log(\'in make_folder\');\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n        callback(null, \'folder\');\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback, results){\n        console.log(\'in write_file\', JSON.stringify(results));\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, \'filename\');\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        console.log(\'in email_link\', JSON.stringify(results));\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n        callback(null, {\'file\':results.write_file, \'email\':\'user@example.com\'});\n    }]\n}, function(err, results) {\n    console.log(\'err = \', err);\n    console.log(\'results = \', results);\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        console.log(\'in get_data\');\n        // async code to get some data\n        callback(null, \'data\', \'converted to array\');\n    },\n    function(callback){\n        console.log(\'in make_folder\');\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n        callback(null, \'folder\');\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            console.log(\'in write_file\', JSON.stringify(results));\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            results.push(\'filename\');\n            callback(null);\n        },\n        function(callback){\n            console.log(\'in email_link\', JSON.stringify(results));\n            // once the file is written let\'s email a link to it...\n            callback(null, {\'file\':results.pop(), \'email\':\'user@example.com\'});\n        }\n    ]);\n});\n```\n\nFor a complicated series of `async` tasks, using the [`auto`](#auto) function makes adding\nnew tasks much easier (and the code more readable).\n\n\n---------------------------------------\n\n<a name="retry" />\n### retry([opts = {times: 5, interval: 0}| 5], task, [callback])\n\nAttempts to get a successful response from `task` no more than `times` times before\nreturning an error. If the task is successful, the `callback` will be passed the result\nof the successful task. If all attempts fail, the callback will be passed the error and\nresult (if any) of the final attempt.\n\n__Arguments__\n\n* `opts` - Can be either an object with `times` and `interval` or a number.\n  * `times` - The number of attempts to make before giving up.  The default is `5`.\n  * `interval` - The time to wait between retries, in milliseconds.  The default is `0`.\n  * If `opts` is a number, the number specifies the number of times to retry, with the default interval of `0`. \n* `task(callback, results)` - A function which receives two arguments: (1) a `callback(err, result)`\n  which must be called when finished, passing `err` (which can be `null`) and the `result` of\n  the function\'s execution, and (2) a `results` object, containing the results of\n  the previously executed functions (if nested inside another control flow).\n* `callback(err, results)` - An optional callback which is called when the\n  task has succeeded, or after the final failed attempt. It receives the `err` and `result` arguments of the last attempt at completing the `task`.\n\nThe [`retry`](#retry) function can be used as a stand-alone control flow by passing a callback, as shown below:\n\n```js\n// try calling apiMethod 3 times\nasync.retry(3, apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\n```js\n// try calling apiMethod 3 times, waiting 200 ms between each retry \nasync.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\n```js\n// try calling apiMethod the default 5 times no delay between each retry \nasync.retry(apiMethod, function(err, result) {\n    // do something with the result\n});\n```\n\nIt can also be embedded within other control flow functions to retry individual methods\nthat are not as reliable, like this:\n\n```js\nasync.auto({\n    users: api.getUsers.bind(api),\n    payments: async.retry(3, api.getPayments.bind(api))\n}, function(err, results) {\n  // do something with the results\n});\n```\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the `tasks` array,\nreturning a continuation to call the next one after that. It\'s also possible to\n“peek” at the next iterator with `iterator.next()`.\n\nThis function is used internally by the `async` module, but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* `tasks` - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied.\n\nUseful as a shorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback), setImmediate(callback)\n\nCalls `callback` on a later loop around the event loop. In Node.js this just\ncalls `process.nextTick`; in the browser it falls back to `setImmediate(callback)`\nif available, otherwise `setTimeout(callback, 0)`, which means other higher priority\nevents may precede the execution of `callback`.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* `callback` - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, iterator, [callback])\n\nCalls the `iterator` function `n` times, and accumulates results in the same manner\nyou would use with [`map`](#map).\n\n__Arguments__\n\n* `n` - The number of times to run the function.\n* `iterator` - The function to call `n` times.\n* `callback` - see [`map`](#map)\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n__Related__\n\n* timesSeries(n, iterator, [callback])\n* timesLimit(n, limit, iterator, [callback])\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an `async` function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nIf no hash function is specified, the first argument is used as a hash key, which may work reasonably if it is a string or a data type that converts to a distinct string. Note that objects and arrays will not behave reasonably. Neither will cases where the other arguments are significant. In such cases, specify your own hash function.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* `fn` - The function to proxy and cache results from.\n* `hasher` - An optional function for generating a custom hash for storing\n  results. It has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a [`memoize`](#memoize)d function, reverting it to the original, unmemoized\nform. Handy for testing.\n\n__Arguments__\n\n* `fn` - the memoized function\n\n---------------------------------------\n\n<a name="ensureAsync" />\n### ensureAsync(fn)\n\nWrap an async function and ensure it calls its callback on a later tick of the event loop.  If the function already calls its callback on a next tick, no extra deferral is added. This is useful for preventing stack overflows (`RangeError: Maximum call stack size exceeded`) and generally keeping [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony) contained.\n\n__Arguments__\n\n* `fn` - an async function, one that expects a node-style callback as its last argument\n\nReturns a wrapped function with the exact same call signature as the function passed in.\n\n__Example__\n\n```js\nfunction sometimesAsync(arg, callback) {\n  if (cache[arg]) {\n    return callback(null, cache[arg]); // this would be synchronous!!\n  } else {\n    doSomeIO(arg, callback); // this IO would be asynchronous\n  }\n}\n\n// this has a risk of stack overflows if many results are cached in a row\nasync.mapSeries(args, sometimesAsync, done);\n\n// this will defer sometimesAsync\'s callback if necessary,\n// preventing stack overflows\nasync.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n\n```\n\n---------------------------------------\n\n<a name="constant">\n### constant(values...)\n\nReturns a function that when called, calls-back with the values provided.  Useful as the first function in a `waterfall`, or for plugging values in to `auto`.\n\n__Example__\n\n```js\nasync.waterfall([\n  async.constant(42),\n  function (value, next) {\n    // value === 42\n  },\n  //...\n], callback);\n\nasync.waterfall([\n  async.constant(filename, "utf8"),\n  fs.readFile,\n  function (fileData, next) {\n    //...\n  }\n  //...\n], callback);\n\nasync.auto({\n  hostname: async.constant("https://server.net/"),\n  port: findFreePort,\n  launchServer: ["hostname", "port", function (cb, options) {\n    startServer(options, cb);\n  }],\n  //...\n}, callback);\n\n```\n\n---------------------------------------\n\n<a name="asyncify">\n<a name="wrapSync">\n### asyncify(func)\n\n__Alias:__ `wrapSync`\n\nTake a sync function and make it async, passing its return value to a callback. This is useful for plugging sync functions into a waterfall, series, or other async functions. Any arguments passed to the generated function will be passed to the wrapped function (except for the final callback argument). Errors thrown will be passed to the callback.\n\n__Example__\n\n```js\nasync.waterfall([\n  async.apply(fs.readFile, filename, "utf8"),\n  async.asyncify(JSON.parse),\n  function (data, next) {\n    // data is the result of parsing the text.\n    // If there was a parsing error, it would have been caught.\n  }\n], callback)\n```\n\nIf the function passed to `asyncify` returns a Promise, that promises\'s resolved/rejected state will be used to call the callback, rather than simply the synchronous return value.  Example:\n\n```js\nasync.waterfall([\n  async.apply(fs.readFile, filename, "utf8"),\n  async.asyncify(function (contents) {\n    return db.model.create(contents);\n  }),\n  function (model, next) {\n    // `model` is the instantiated model object. \n    // If there was an error, this function would be skipped.\n  }\n], callback)\n```\n\nThis also means you can asyncify ES2016 `async` functions.\n\n```js\nvar q = async.queue(async.asyncify(async function (file) {\n  var intermediateStep = await processFile(file);\n  return await somePromise(intermediateStep)\n}));\n\nq.push(files);\n```\n\n---------------------------------------\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an `async` function to the `console`. Only works in Node.js or\nin browsers that support `console.log` and `console.error` (such as FF and Chrome).\nIf multiple arguments are returned from the async function, `console.log` is\ncalled on each argument in order.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an `async` function to the `console` using `console.dir` to\ndisplay the properties of the resulting object. Only works in Node.js or\nin browsers that support `console.dir` and `console.error` (such as FF and Chrome).\nIf multiple arguments are returned from the async function, `console.dir` is\ncalled on each argument in order.\n\n__Arguments__\n\n* `function` - The function you want to eventually apply all arguments to.\n* `arguments...` - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of `async` back to its original value, returning a reference to the\n`async` object.\n',
365 silly resolved     readmeFilename: 'README.md',
365 silly resolved     _id: 'async@1.5.2',
365 silly resolved     _from: 'async@^1.4.0' },
365 silly resolved   { name: 'uglify-js',
365 silly resolved     description: 'JavaScript parser, mangler/compressor and beautifier toolkit',
365 silly resolved     homepage: 'http://lisperator.net/uglifyjs',
365 silly resolved     author:
365 silly resolved      { name: 'Mihai Bazon',
365 silly resolved        email: 'mihai.bazon@gmail.com',
365 silly resolved        url: 'http://lisperator.net/' },
365 silly resolved     license: 'BSD-2-Clause',
365 silly resolved     version: '2.6.4',
365 silly resolved     engines: { node: '>=0.8.0' },
365 silly resolved     maintainers: [ [Object] ],
365 silly resolved     repository: { type: 'git', url: 'https://github.com/mishoo/UglifyJS2.git' },
365 silly resolved     bugs: { url: 'https://github.com/mishoo/UglifyJS2/issues' },
365 silly resolved     main: 'tools/node.js',
365 silly resolved     bin: { uglifyjs: 'bin/uglifyjs' },
365 silly resolved     files: [ 'bin', 'lib', 'tools', 'LICENSE' ],
365 silly resolved     dependencies:
365 silly resolved      { async: '~0.2.6',
365 silly resolved        'source-map': '~0.5.1',
365 silly resolved        'uglify-to-browserify': '~1.0.0',
365 silly resolved        yargs: '~3.10.0' },
365 silly resolved     devDependencies:
365 silly resolved      { acorn: '~0.6.0',
365 silly resolved        escodegen: '~1.3.3',
365 silly resolved        esfuzz: '~0.3.1',
365 silly resolved        estraverse: '~1.5.1',
365 silly resolved        mocha: '~2.3.4' },
365 silly resolved     browserify: { transform: [Object] },
365 silly resolved     scripts:
365 silly resolved      { shrinkwrap: 'rm ./npm-shrinkwrap.json; rm -rf ./node_modules; npm i && npm shrinkwrap && npm outdated',
365 silly resolved        test: 'node test/run-tests.js' },
365 silly resolved     keywords: [ 'uglify', 'uglify-js', 'minify', 'minifier' ],
365 silly resolved     readme: 'UglifyJS 2\n==========\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.svg)](https://travis-ci.org/mishoo/UglifyJS2)\n\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\n\nThis page documents the command line utility.  For\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\nThere\'s also an\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\nChrome and probably Safari).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\nFrom Git:\n\n    git clone git://github.com/mishoo/UglifyJS2.git\n    cd UglifyJS2\n    npm link .\n\nUsage\n-----\n\n    uglifyjs [input files] [options]\n\nUglifyJS2 can take multiple input files.  It\'s recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf you want to read from STDIN instead, pass a single dash instead of input\nfiles.\n\nIf you wish to pass your options before the input files, separate the two with\na double dash to prevent input files being used as option arguments:\n\n    uglifyjs --compress --mangle -- input.js\n\nThe available options are:\n\n```\n  --source-map                  Specify an output file where to generate source\n                                map.\n  --source-map-root             The path to the original source to be included\n                                in the source map.\n  --source-map-url              The path to the source map to be added in //#\n                                sourceMappingURL.  Defaults to the value passed\n                                with --source-map.\n  --source-map-include-sources  Pass this flag if you want to include the\n                                content of source files in the source map as\n                                sourcesContent property.\n  --in-source-map               Input source map, useful if you\'re compressing\n                                JS that was generated from some other original\n                                code.\n  --screw-ie8                   Pass this flag if you don\'t care about full\n                                compliance with Internet Explorer 6-8 quirks\n                                (by default UglifyJS will try to be IE-proof).\n  --expr                        Parse a single expression, rather than a\n                                program (for parsing JSON)\n  -p, --prefix                  Skip prefix for original filenames that appear\n                                in source maps. For example -p 3 will drop 3\n                                directories from file names and ensure they are\n                                relative paths. You can also specify -p\n                                relative, which will make UglifyJS figure out\n                                itself the relative paths between original\n                                sources, the source map and the output file.\n  -o, --output                  Output file (default STDOUT).\n  -b, --beautify                Beautify output/specify output options.\n  -m, --mangle                  Mangle names/pass mangler options.\n  -r, --reserved                Reserved names to exclude from mangling.\n  -c, --compress                Enable compressor/pass compressor options. Pass\n                                options like -c\n                                hoist_vars=false,if_return=false. Use -c with\n                                no argument to use the default compression\n                                options.\n  -d, --define                  Global definitions\n  -e, --enclose                 Embed everything in a big function, with a\n                                configurable parameter/argument list.\n  --comments                    Preserve copyright comments in the output. By\n                                default this works like Google Closure, keeping\n                                JSDoc-style comments that contain "@license" or\n                                "@preserve". You can optionally pass one of the\n                                following arguments to this flag:\n                                - "all" to keep all comments\n                                - a valid JS regexp (needs to start with a\n                                slash) to keep only comments that match.\n                                Note that currently not *all* comments can be\n                                kept when compression is on, because of dead\n                                code removal or cascading statements into\n                                sequences.\n  --preamble                    Preamble to prepend to the output.  You can use\n                                this to insert a comment, for example for\n                                licensing information.  This will not be\n                                parsed, but the source map will adjust for its\n                                presence.\n  --stats                       Display operations run time on STDERR.\n  --acorn                       Use Acorn for parsing.\n  --spidermonkey                Assume input files are SpiderMonkey AST format\n                                (as JSON).\n  --self                        Build itself (UglifyJS2) as a library (implies\n                                --wrap=UglifyJS --export-all)\n  --wrap                        Embed everything in a big function, making the\n                                “exports” and “global” variables available. You\n                                need to pass an argument to this option to\n                                specify the name that your module will take\n                                when included in, say, a browser.\n  --export-all                  Only used when --wrap, this tells UglifyJS to\n                                add code to automatically export all globals.\n  --lint                        Display some scope warnings\n  -v, --verbose                 Verbose\n  -V, --version                 Print version number and exit.\n  --noerr                       Don\'t throw an error for unknown options in -c,\n                                -b or -m.\n  --bare-returns                Allow return outside of functions.  Useful when\n                                minifying CommonJS modules and Userscripts that\n                                may be anonymous function wrapped (IIFE) by the\n                                .user.js engine `caller`.\n  --keep-fnames                 Do not mangle/drop function names.  Useful for\n                                code relying on Function.prototype.name.\n  --reserved-file               File containing reserved names\n  --reserve-domprops            Make (most?) DOM properties reserved for\n                                --mangle-props\n  --mangle-props                Mangle property names (default `0`). Set to \n                                `true` or `1` to mangle all property names. Set\n                                to `unquoted` or `2` to only mangle unquoted \n                                property names. Mode `2` also enables the\n                                `keep_quoted_props` beautifier option to \n                                preserve the quotes around property names and\n                                disables the `properties` compressor option to\n                                prevent rewriting quoted properties with dot\n                                notation. You can override these by setting\n                                them explicitly on the command line.\n  --mangle-regex                Only mangle property names matching the regex\n  --name-cache                  File to hold mangled names mappings\n  --pure-funcs                  List of functions that can be safely removed if\n                                their return value is not used           [array]\n```\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## Source map options\n\nUglifyJS2 can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map output.js.map` (full path to the file where you want the\nsource map dumped).\n\nAdditionally you might need `--source-map-root` to pass the URL where the\noriginal files can be found.  In case you are passing full paths to input\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\ndirectories to drop from the path prefix when declaring files in the source\nmap.\n\nFor example:\n\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\n             /home/doe/work/foo/src/js/file2.js \\\n             -o foo.min.js \\\n             --source-map foo.min.js.map \\\n             --source-map-root http://foo.com/src \\\n             -p 5 -c -m\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you\'re compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won\'t be too helpful.  Instead, you\'d\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature you need to pass `--in-source-map\n/path/to/input/source.map`.  Normally the input source map should also point\nto the file containing the generated JS, so if that\'s correct you can omit\ninput files from the command line.\n\n## Mangler options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\n  default).\n\n- `eval` — mangle names visible in scopes where `eval` or `with` are used\n  (disabled by default).\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m -r \'$,require,exports\'\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n### Mangling property names (`--mangle-props`)\n\n**Note:** this will probably break your code.  Mangling property names is a\nseparate step, different from variable name mangling.  Pass\n`--mangle-props`.  It will mangle all properties that are seen in some\nobject literal, or that are assigned to.  For example:\n\n```js\nvar x = {\n  foo: 1\n};\n\nx.bar = 2;\nx["baz"] = 3;\nx[condition ? "moo" : "boo"] = 4;\nconsole.log(x.something());\n```\n\nIn the above code, `foo`, `bar`, `baz`, `moo` and `boo` will be replaced\nwith single characters, while `something()` will be left as is.\n\nIn order for this to be of any use, we should avoid mangling standard JS\nnames.  For instance, if your code would contain `x.length = 10`, then\n`length` becomes a candidate for mangling and it will be mangled throughout\nthe code, regardless if it\'s being used as part of your own objects or\naccessing an array\'s length.  To avoid that, you can use `--reserved-file`\nto pass a filename that should contain the names to be excluded from\nmangling.  This file can be used both for excluding variable names and\nproperty names.  It could look like this, for example:\n\n```js\n{\n  "vars": [ "define", "require", ... ],\n  "props": [ "length", "prototype", ... ]\n}\n```\n\n`--reserved-file` can be an array of file names (either a single\ncomma-separated argument, or you can pass multiple `--reserved-file`\narguments) — in this case it will exclude names from all those files.\n\nA default exclusion file is provided in `tools/domprops.json` which should\ncover most standard JS and DOM properties defined in various browsers.  Pass\n`--reserve-domprops` to read that in.\n\nYou can also use a regular expression to define which property names should be\nmangled.  For example, `--mangle-regex="/^_/"` will only mangle property names\nthat start with an underscore.\n\nWhen you compress multiple files using this option, in order for them to\nwork together in the end we need to ensure somehow that one property gets\nmangled to the same name in all of them.  For this, pass `--name-cache\nfilename.json` and UglifyJS will maintain these mappings in a file which can\nthen be reused.  It should be initially empty.  Example:\n\n```\nrm -f /tmp/cache.json  # start fresh\nuglifyjs file1.js file2.js --mangle-props --name-cache /tmp/cache.json -o part1.js\nuglifyjs file3.js file4.js --mangle-props --name-cache /tmp/cache.json -o part2.js\n```\n\nNow, `part1.js` and `part2.js` will be consistent with each other in terms\nof mangled property names.\n\nUsing the name cache is not necessary if you compress all your files in a\nsingle call to UglifyJS.\n\n## Compressor options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of options.  Options are in the form\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\nto set `true`; it\'s effectively a shortcut for `foo=true`).\n\n- `sequences` -- join consecutive simple statements using the comma operator\n\n- `properties` -- rewrite property access using the dot notation, for\n  example `foo["bar"] → foo.bar`\n\n- `dead_code` -- remove unreachable code\n\n- `drop_debugger` -- remove `debugger;` statements\n\n- `unsafe` (default: false) -- apply "unsafe" transformations (discussion below)\n\n- `unsafe_comps` (default: false) -- Reverse `<` and `<=` to `>` and `>=` to\n  allow improved compression. This might be unsafe when an at least one of two\n  operands is an object with computed values due the use of methods like `get`,\n  or `valueOf`. This could cause change in execution order after operands in the\n  comparison are switching. Compression only works if both `comparisons` and\n  `unsafe_comps` are both set to true.\n\n- `conditionals` -- apply optimizations for `if`-s and conditional\n  expressions\n\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\n  `!(a <= b) → a > b` (only when `unsafe_comps`), attempts to negate binary\n  nodes, e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\n\n- `evaluate` -- attempt to evaluate constant expressions\n\n- `booleans` -- various optimizations for boolean context, for example `!!a\n  ? b : c → a ? b : c`\n\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\n  statically determine the condition\n\n- `unused` -- drop unreferenced functions and variables\n\n- `hoist_funs` -- hoist function declarations\n\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n\n- `if_return` -- optimizations for if/return and if/continue\n\n- `join_vars` -- join consecutive `var` statements\n\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\n  and `x = something(), x` into `x = something()`\n\n- `collapse_vars` -- default `false`. Collapse single-use `var` and `const`\n  definitions when possible.\n\n- `warnings` -- display warnings when dropping unreachable code or unused\n  declarations etc.\n\n- `negate_iife` -- negate "Immediately-Called Function Expressions"\n  where the return value is discarded, to avoid the parens that the\n  code generator would insert.\n\n- `pure_getters` -- the default is `false`.  If you pass `true` for\n  this, UglifyJS will assume that object property access\n  (e.g. `foo.bar` or `foo["bar"]`) doesn\'t have any side effects.\n\n- `pure_funcs` -- default `null`.  You can pass an array of names and\n  UglifyJS will assume that those functions do not produce side\n  effects.  DANGER: will not check if the name is redefined in scope.\n  An example case here, for instance `var q = Math.floor(a/b)`.  If\n  variable `q` is not used elsewhere, UglifyJS will drop it, but will\n  still keep the `Math.floor(a/b)`, not knowing what it does.  You can\n  pass `pure_funcs: [ \'Math.floor\' ]` to let it know that this\n  function won\'t produce any side effect, in which case the whole\n  statement would get discarded.  The current implementation adds some\n  overhead (compression will be slower).\n\n- `drop_console` -- default `false`.  Pass `true` to discard calls to\n  `console.*` functions.\n\n- `keep_fargs` -- default `true`.  Prevents the\n  compressor from discarding unused function arguments.  You need this\n  for code which relies on `Function.length`.\n\n- `keep_fnames` -- default `false`.  Pass `true` to prevent the\n  compressor from mangling/discarding function names.  Useful for code relying on\n  `Function.prototype.name`.\n\n- `passes` -- default `1`. Number of times to run compress. Use an\n  integer argument larger than 1 to further reduce code size in some cases.\n  Note: raising the number of passes will increase uglify compress time.\n\n### The `unsafe` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here\'s what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[ 1, 2, 3 ]`\n- `new Object()` → `{}`\n- `String(exp)` or `exp.toString()` → `"" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\n- `typeof foo == "undefined"` → `foo === void 0`\n- `void 0` → `undefined` (if there is a variable named "undefined" in\n  scope; we do it because the variable name will be mangled, typically\n  reduced to a single character)\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n\tconsole.log("debug stuff");\n}\n```\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nconst DEBUG = false;\nconst PRODUCTION = true;\n// Alternative for environments that don\'t support `const`\n/** @const */ var STAGING = false;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The build will contain the `const` declarations if you use\nthem. If you are targeting < ES6 environments, use `/** @const */ var`.\n\n<a name="codegen-options"></a>\n\n#### Conditional compilation, API\nYou can also use conditional compilation via the programmatic API. With the difference that the\nproperty name is `global_defs` and is a compressor property:\n\n```js\nuglifyJS.minify([ "input.js"], {\n    compress: {\n        dead_code: true,\n        global_defs: {\n            DEBUG: false\n        }\n    }\n});\n```\n\n## Beautifier options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n- `indent-level` (default 4)\n- `indent-start` (default 0) -- prefix all lines by that many spaces\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n- `space-colon` (default `true`) -- insert a space after the colon signs\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\n  regexps (affects directives with non-ascii characters becoming invalid)\n- `inline-script` (default `false`) -- escape the slash in occurrences of\n  `</script` in strings\n- `width` (default 80) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn\'t work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n- `preamble` (default `null`) -- when passed it must be a string and\n  it will be prepended to the output literally.  The source map will\n  adjust for this text.  Can be used to insert a comment containing\n  licensing information, for example.\n- `quote_style` (default `0`) -- preferred quote style for strings (affects\n  quoted property names and directives as well):\n  - `0` -- prefers double quotes, switches to single quotes when there are\n    more double quotes in the string itself.\n  - `1` -- always use single quotes\n  - `2` -- always use double quotes\n  - `3` -- always use the original quotes\n- `keep_quoted_props` (default `false`) -- when turned on, prevents stripping\n  quotes from property names in object literals.\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain "@preserve",\n"@license" or "@cc_on" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments\n\'/foo|bar/\'` will keep only comments that contain "foo" or "bar".\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n\t/** @preserve Foo Bar */\n\tfunction g() {\n\t  // this function is never called\n\t}\n\treturn something();\n}\n```\n\nEven though it has "@preserve", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n## Support for the SpiderMonkey AST\n\nUglifyJS2 has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can\'t easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs --spidermonkey -m -c\n\nThe `--spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon\'t use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `--acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require("acorn")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it\'s a bit more than just using UglifyJS\'s own parser.\n\n### Using UglifyJS to transform SpiderMonkey AST\n\nNow you can use UglifyJS as any other intermediate tool for transforming\nJavaScript ASTs in SpiderMonkey format.\n\nExample:\n\n```javascript\nfunction uglify(ast, options, mangle) {\n  // Conversion from SpiderMonkey AST to internal format\n  var uAST = UglifyJS.AST_Node.from_mozilla_ast(ast);\n\n  // Compression\n  uAST.figure_out_scope();\n  uAST = uAST.transform(UglifyJS.Compressor(options));\n\n  // Mangling (optional)\n  if (mangle) {\n    uAST.figure_out_scope();\n    uAST.compute_char_frequency();\n    uAST.mangle_names();\n  }\n\n  // Back-conversion to SpiderMonkey AST\n  return uAST.to_mozilla_ast();\n}\n```\n\nCheck out\n[original blog post](http://rreverser.com/using-mozilla-ast-with-uglifyjs/)\nfor details.\n\nAPI Reference\n-------------\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require("uglify-js");\n```\n\nIt exports a lot of names, but I\'ll discuss here the basics that are needed\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\nparse, (2) compress, (3) mangle, (4) generate output code.\n\n### The simple way\n\nThere\'s a single toplevel function which combines all the steps.  If you\ndon\'t need additional customization, you might want to go with `minify`.\nExample:\n```javascript\nvar result = UglifyJS.minify("/path/to/file.js");\nconsole.log(result.code); // minified output\n// if you need to pass code instead of file name\nvar result = UglifyJS.minify("var b = function () {};", {fromString: true});\n```\n\nYou can also compress multiple files:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ]);\nconsole.log(result.code);\n```\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map"\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);\n```\n\nNote that the source map is not saved in a file, it\'s just returned in\n`result.map`.  The value passed for `outSourceMap` is only used to set the\n`file` attribute in the source map (see [the spec][sm-spec]).\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map",\n\tsourceRoot: "http://example.com/src"\n});\n```\n\nIf you\'re compressing compiled JavaScript and have a source map for it, you\ncan use the `inSourceMap` argument:\n```javascript\nvar result = UglifyJS.minify("compiled.js", {\n\tinSourceMap: "compiled.js.map",\n\toutSourceMap: "minified.js.map"\n});\n// same as before, it returns `code` and `map`\n```\n\nIf your input source map is not in a file, you can pass it in as an object\nusing the `inSourceMap` argument:\n\n```javascript\nvar result = UglifyJS.minify("compiled.js", {\n\tinSourceMap: JSON.parse(my_source_map_string),\n\toutSourceMap: "minified.js.map"\n});\n```\n\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\nno sense otherwise).\n\nOther options:\n\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\n\n- `fromString` (default `false`) — if you pass `true` then you can pass\n  JavaScript source code, rather than file names.\n\n- `mangle` — pass `false` to skip mangling names.\n\n- `mangleProperties` (default `false`) — pass an object to specify custom\n  mangle property options.\n\n- `output` (default `null`) — pass an object if you wish to specify\n  additional [output options][codegen].  The defaults are optimized\n  for best compression.\n\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compressor options][compressor].\n\n- `parse` (default {}) — pass an object if you wish to specify some\n  additional [parser options][parser]. (not all options available... see below)\n\n##### mangle\n\n - `except` - pass an array of identifiers that should be excluded from mangling\n\n##### mangleProperties options\n\n - `regex` — Pass a RegExp to only mangle certain names (maps to the `--mangle-regex` CLI arguments option)\n - `ignore_quoted` – Only mangle unquoted property names (maps to the `--mangle-props 2` CLI arguments option)\n\nWe could add more options to `UglifyJS.minify` — if you need additional\nfunctionality please suggest!\n\n### The hard way\n\nFollowing there\'s more detailed API info, in case the `minify` function is\ntoo simple for your needs.\n\n#### The parser\n```javascript\nvar toplevel_ast = UglifyJS.parse(code, options);\n```\n\n`options` is optional and if present it must be an object.  The following\nproperties are available:\n\n- `strict` — disable automatic semicolon insertion and support for trailing\n  comma in arrays and objects\n- `bare_returns` — Allow return outside of functions. (maps to the\n  `--bare-returns` CLI arguments option and available to `minify` `parse`\n  other options object)\n- `filename` — the name of the file where this code is coming from\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\n  `parse`)\n\nThe last two options are useful when you\'d like to minify multiple files and\nget a single file as the output and a proper source map.  Our CLI tool does\nsomething like this:\n```javascript\nvar toplevel = null;\nfiles.forEach(function(file){\n\tvar code = fs.readFileSync(file, "utf8");\n\ttoplevel = UglifyJS.parse(code, {\n\t\tfilename: file,\n\t\ttoplevel: toplevel\n\t});\n});\n```\n\nAfter this, we have in `toplevel` a big AST containing all our files, with\neach token having proper information about where it came from.\n\n#### Scope information\n\nUglifyJS contains a scope analyzer that you need to call manually before\ncompressing or mangling.  Basically it augments various nodes in the AST\nwith information about where is a name defined, how many times is a name\nreferenced, if it is a global or not, if a function is using `eval` or the\n`with` statement etc.  I will discuss this some place else, for now what\'s\nimportant to know is that you need to call the following before doing\nanything with the tree:\n```javascript\ntoplevel.figure_out_scope()\n```\n\n#### Compression\n\nLike this:\n```javascript\nvar compressor = UglifyJS.Compressor(options);\nvar compressed_ast = toplevel.transform(compressor);\n```\n\nThe `options` can be missing.  Available options are discussed above in\n“Compressor options”.  Defaults should lead to best compression in most\nscripts.\n\nThe compressor is destructive, so don\'t rely that `toplevel` remains the\noriginal tree.\n\n#### Mangling\n\nAfter compression it is a good idea to call again `figure_out_scope` (since\nthe compressor might drop unused variables / unreachable code and this might\nchange the number of identifiers or their position).  Optionally, you can\ncall a trick that helps after Gzip (counting character frequency in\nnon-mangleable words).  Example:\n```javascript\ncompressed_ast.figure_out_scope();\ncompressed_ast.compute_char_frequency();\ncompressed_ast.mangle_names();\n```\n\n#### Generating output\n\nAST nodes have a `print` method that takes an output stream.  Essentially,\nto generate code you do this:\n```javascript\nvar stream = UglifyJS.OutputStream(options);\ncompressed_ast.print(stream);\nvar code = stream.toString(); // this is your minified code\n```\n\nor, for a shortcut you can do:\n```javascript\nvar code = compressed_ast.print_to_string(options);\n```\n\nAs usual, `options` is optional.  The output stream accepts a lot of options,\nmost of them documented above in section “Beautifier options”.  The two\nwhich we care about here are `source_map` and `comments`.\n\n#### Keeping comments in the output\n\nIn order to keep certain comments in the output you need to pass the\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\nthose comments whose body matches the regexp will be kept.  Note that body\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\ncalled for every comment in the tree and will receive two arguments: the\nnode that the comment is attached to, and the comment token itself.\n\nThe comment token has these properties:\n\n- `type`: "comment1" for single-line comments or "comment2" for multi-line\n  comments\n- `value`: the comment body\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\n  original code where this comment appears\n- `line` and `col`: the line and column where this comment appears in the\n  original code\n- `file` — the file name of the original file\n- `nlb` — true if there was a newline before this comment in the original\n  code, or if this comment contains a newline.\n\nYour function should return `true` to keep the comment, or a falsy value\notherwise.\n\n#### Generating a source mapping\n\nYou need to pass the `source_map` argument when calling `print`.  It needs\nto be a `SourceMap` object (which is a thin wrapper on top of the\n[source-map][source-map] library).\n\nExample:\n```javascript\nvar source_map = UglifyJS.SourceMap(source_map_options);\nvar stream = UglifyJS.OutputStream({\n\t...\n\tsource_map: source_map\n});\ncompressed_ast.print(stream);\n\nvar code = stream.toString();\nvar map = source_map.toString(); // json output for your source map\n```\n\nThe `source_map_options` (optional) can contain the following properties:\n\n- `file`: the name of the JavaScript output file that this mapping refers to\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\n- `orig`: the "original source map", handy when you compress generated JS\n  and want to map the minified output back to the original code where it\n  came from.  It can be simply a string in JSON, or a JSON object containing\n  the original source map.\n\n  [acorn]: https://github.com/ternjs/acorn\n  [source-map]: https://github.com/mozilla/source-map\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n  [codegen]: http://lisperator.net/uglifyjs/codegen\n  [compressor]: http://lisperator.net/uglifyjs/compress\n  [parser]: http://lisperator.net/uglifyjs/parser\n',
365 silly resolved     readmeFilename: 'README.md',
365 silly resolved     _id: 'uglify-js@2.6.4',
365 silly resolved     dist: { shasum: '8cc9ba471781c9e62920521dd0cfb102696d59ca' },
365 silly resolved     _from: 'uglify-js@^2.6',
365 silly resolved     _resolved: 'https://registry.npmjs.org/uglify-js/-/uglify-js-2.6.4.tgz' } ]
366 info install source-map@0.4.4 into /usr/local/lib/node_modules/handlebars
367 info install optimist@0.6.1 into /usr/local/lib/node_modules/handlebars
368 info install async@1.5.2 into /usr/local/lib/node_modules/handlebars
369 info install uglify-js@2.6.4 into /usr/local/lib/node_modules/handlebars
370 info installOne source-map@0.4.4
371 info installOne optimist@0.6.1
372 info installOne async@1.5.2
373 info installOne uglify-js@2.6.4
374 info /usr/local/lib/node_modules/handlebars/node_modules/source-map unbuild
375 info /usr/local/lib/node_modules/handlebars/node_modules/optimist unbuild
376 info /usr/local/lib/node_modules/handlebars/node_modules/async unbuild
377 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js unbuild
378 verbose tar unpack /home/coder/.npm/source-map/0.4.4/package.tgz
379 silly lockFile dc89c65c-ndlebars-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/source-map
380 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/source-map /home/coder/.npm/dc89c65c-ndlebars-node-modules-source-map.lock
381 silly lockFile 6209935b-npm-source-map-0-4-4-package-tgz tar:///home/coder/.npm/source-map/0.4.4/package.tgz
382 verbose lock tar:///home/coder/.npm/source-map/0.4.4/package.tgz /home/coder/.npm/6209935b-npm-source-map-0-4-4-package-tgz.lock
383 verbose tar unpack /home/coder/.npm/optimist/0.6.1/package.tgz
384 silly lockFile 5ec2934d-handlebars-node-modules-optimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist
385 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist /home/coder/.npm/5ec2934d-handlebars-node-modules-optimist.lock
386 silly lockFile e5eab2ce-r-npm-optimist-0-6-1-package-tgz tar:///home/coder/.npm/optimist/0.6.1/package.tgz
387 verbose lock tar:///home/coder/.npm/optimist/0.6.1/package.tgz /home/coder/.npm/e5eab2ce-r-npm-optimist-0-6-1-package-tgz.lock
388 verbose tar unpack /home/coder/.npm/async/1.5.2/package.tgz
389 silly lockFile a5eabd4a-es-handlebars-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/async
390 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/async /home/coder/.npm/a5eabd4a-es-handlebars-node-modules-async.lock
391 silly lockFile 90338524-oder-npm-async-1-5-2-package-tgz tar:///home/coder/.npm/async/1.5.2/package.tgz
392 verbose lock tar:///home/coder/.npm/async/1.5.2/package.tgz /home/coder/.npm/90338524-oder-npm-async-1-5-2-package-tgz.lock
393 verbose tar unpack /home/coder/.npm/uglify-js/2.6.4/package.tgz
394 silly lockFile 4ff77625-andlebars-node-modules-uglify-js tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js
395 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js /home/coder/.npm/4ff77625-andlebars-node-modules-uglify-js.lock
396 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
397 verbose lock tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz /home/coder/.npm/8bc88bcb--npm-uglify-js-2-6-4-package-tgz.lock
398 silly gunzTarPerm modes [ '755', '644' ]
399 silly gunzTarPerm modes [ '755', '644' ]
400 silly gunzTarPerm modes [ '755', '644' ]
401 silly gunzTarPerm modes [ '755', '644' ]
402 silly gunzTarPerm extractEntry package.json
403 silly gunzTarPerm extractEntry README.md
404 silly gunzTarPerm extractEntry LICENSE
405 silly gunzTarPerm extractEntry bin/extract-props.js
406 silly gunzTarPerm extractEntry bin/uglifyjs
407 silly gunzTarPerm extractEntry lib/ast.js
408 silly gunzTarPerm extractEntry lib/compress.js
409 silly gunzTarPerm extractEntry lib/mozilla-ast.js
410 silly gunzTarPerm extractEntry lib/output.js
411 silly gunzTarPerm extractEntry lib/parse.js
412 silly gunzTarPerm extractEntry lib/propmangle.js
413 silly gunzTarPerm extractEntry lib/scope.js
414 silly gunzTarPerm extractEntry lib/sourcemap.js
415 silly gunzTarPerm extractEntry package.json
416 silly gunzTarPerm extractEntry LICENSE
417 silly gunzTarPerm extractEntry index.js
418 silly gunzTarPerm extractEntry .travis.yml
419 silly gunzTarPerm extractEntry example/bool.js
420 silly gunzTarPerm extractEntry example/default_singles.js
421 silly gunzTarPerm extractEntry example/divide.js
422 silly gunzTarPerm extractEntry example/line_count.js
423 silly gunzTarPerm extractEntry example/default_hash.js
424 silly gunzTarPerm extractEntry example/line_count_wrap.js
425 silly gunzTarPerm extractEntry example/nonopt.js
426 silly gunzTarPerm extractEntry example/reflect.js
427 silly gunzTarPerm extractEntry example/short.js
428 silly gunzTarPerm extractEntry example/string.js
429 silly gunzTarPerm extractEntry example/boolean_single.js
430 silly gunzTarPerm extractEntry example/usage-options.js
431 silly gunzTarPerm extractEntry example/boolean_double.js
432 silly gunzTarPerm extractEntry example/xup.js
433 silly gunzTarPerm extractEntry example/line_count_options.js
434 silly gunzTarPerm extractEntry readme.markdown
435 silly gunzTarPerm extractEntry test/_.js
436 silly gunzTarPerm extractEntry test/dash.js
437 silly gunzTarPerm extractEntry test/parse.js
438 silly gunzTarPerm extractEntry test/parse_modified.js
439 silly gunzTarPerm extractEntry test/short.js
440 silly gunzTarPerm extractEntry test/usage.js
441 silly gunzTarPerm extractEntry test/whitespace.js
442 silly gunzTarPerm extractEntry test/_/argv.js
443 silly gunzTarPerm extractEntry test/_/bin.js
444 silly gunzTarPerm extractEntry lib/transform.js
445 silly gunzTarPerm extractEntry lib/utils.js
446 silly gunzTarPerm extractEntry tools/exports.js
447 silly gunzTarPerm extractEntry tools/node.js
448 silly gunzTarPerm extractEntry tools/domprops.json
449 silly gunzTarPerm extractEntry tools/props.html
450 silly gunzTarPerm extractEntry package.json
451 silly gunzTarPerm extractEntry package.json
452 silly gunzTarPerm extractEntry README.md
453 silly gunzTarPerm extractEntry build/assert-shim.js
454 silly gunzTarPerm extractEntry build/mini-require.js
455 silly gunzTarPerm extractEntry build/suffix-browser.js
456 silly gunzTarPerm extractEntry build/test-prefix.js
457 silly gunzTarPerm extractEntry build/test-suffix.js
458 silly gunzTarPerm extractEntry build/prefix-source-map.jsm
459 silly gunzTarPerm extractEntry build/prefix-utils.jsm
460 silly gunzTarPerm extractEntry build/suffix-source-map.jsm
461 silly gunzTarPerm extractEntry build/suffix-utils.jsm
462 silly gunzTarPerm extractEntry lib/source-map.js
463 silly gunzTarPerm extractEntry lib/source-map/array-set.js
464 silly gunzTarPerm extractEntry lib/source-map/base64-vlq.js
465 silly gunzTarPerm extractEntry lib/source-map/base64.js
466 silly gunzTarPerm extractEntry lib/source-map/binary-search.js
467 silly gunzTarPerm extractEntry lib/source-map/mapping-list.js
468 silly gunzTarPerm extractEntry lib/source-map/quick-sort.js
469 silly gunzTarPerm extractEntry lib/source-map/source-map-consumer.js
470 silly gunzTarPerm extractEntry lib/source-map/source-map-generator.js
471 silly gunzTarPerm extractEntry lib/source-map/source-node.js
472 silly gunzTarPerm extractEntry lib/source-map/util.js
473 silly gunzTarPerm extractEntry README.md
474 silly gunzTarPerm extractEntry dist/async.js
475 silly gunzTarPerm extractEntry dist/async.min.js
476 silly gunzTarPerm extractEntry lib/async.js
477 silly lockFile 5ec2934d-handlebars-node-modules-optimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist
478 silly lockFile 5ec2934d-handlebars-node-modules-optimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist
479 silly lockFile e5eab2ce-r-npm-optimist-0-6-1-package-tgz tar:///home/coder/.npm/optimist/0.6.1/package.tgz
480 silly lockFile e5eab2ce-r-npm-optimist-0-6-1-package-tgz tar:///home/coder/.npm/optimist/0.6.1/package.tgz
481 info preinstall optimist@0.6.1
482 verbose readDependencies using package.json deps
483 verbose readDependencies using package.json deps
484 verbose cache add [ 'wordwrap@~0.0.2', null ]
485 verbose cache add name=undefined spec="wordwrap@~0.0.2" args=["wordwrap@~0.0.2",null]
486 verbose parsed url { protocol: null,
486 verbose parsed url   slashes: null,
486 verbose parsed url   auth: null,
486 verbose parsed url   host: null,
486 verbose parsed url   port: null,
486 verbose parsed url   hostname: null,
486 verbose parsed url   hash: null,
486 verbose parsed url   search: null,
486 verbose parsed url   query: null,
486 verbose parsed url   pathname: 'wordwrap@~0.0.2',
486 verbose parsed url   path: 'wordwrap@~0.0.2',
486 verbose parsed url   href: 'wordwrap@~0.0.2' }
487 verbose cache add name="wordwrap" spec="~0.0.2" args=["wordwrap","~0.0.2"]
488 verbose parsed url { protocol: null,
488 verbose parsed url   slashes: null,
488 verbose parsed url   auth: null,
488 verbose parsed url   host: null,
488 verbose parsed url   port: null,
488 verbose parsed url   hostname: null,
488 verbose parsed url   hash: null,
488 verbose parsed url   search: null,
488 verbose parsed url   query: null,
488 verbose parsed url   pathname: '~0.0.2',
488 verbose parsed url   path: '~0.0.2',
488 verbose parsed url   href: '~0.0.2' }
489 verbose addNamed [ 'wordwrap', '~0.0.2' ]
490 verbose addNamed [ null, '>=0.0.2-0 <0.1.0-0' ]
491 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
492 verbose lock wordwrap@~0.0.2 /home/coder/.npm/8bd42136-wordwrap-0-0-2.lock
493 verbose cache add [ 'minimist@~0.0.1', null ]
494 verbose cache add name=undefined spec="minimist@~0.0.1" args=["minimist@~0.0.1",null]
495 verbose parsed url { protocol: null,
495 verbose parsed url   slashes: null,
495 verbose parsed url   auth: null,
495 verbose parsed url   host: null,
495 verbose parsed url   port: null,
495 verbose parsed url   hostname: null,
495 verbose parsed url   hash: null,
495 verbose parsed url   search: null,
495 verbose parsed url   query: null,
495 verbose parsed url   pathname: 'minimist@~0.0.1',
495 verbose parsed url   path: 'minimist@~0.0.1',
495 verbose parsed url   href: 'minimist@~0.0.1' }
496 verbose cache add name="minimist" spec="~0.0.1" args=["minimist","~0.0.1"]
497 verbose parsed url { protocol: null,
497 verbose parsed url   slashes: null,
497 verbose parsed url   auth: null,
497 verbose parsed url   host: null,
497 verbose parsed url   port: null,
497 verbose parsed url   hostname: null,
497 verbose parsed url   hash: null,
497 verbose parsed url   search: null,
497 verbose parsed url   query: null,
497 verbose parsed url   pathname: '~0.0.1',
497 verbose parsed url   path: '~0.0.1',
497 verbose parsed url   href: '~0.0.1' }
498 verbose addNamed [ 'minimist', '~0.0.1' ]
499 verbose addNamed [ null, '>=0.0.1-0 <0.1.0-0' ]
500 silly lockFile 7a855a96-minimist-0-0-1 minimist@~0.0.1
501 verbose lock minimist@~0.0.1 /home/coder/.npm/7a855a96-minimist-0-0-1.lock
502 silly addNameRange { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: false }
503 silly addNameRange { name: 'minimist', range: '>=0.0.1-0 <0.1.0-0', hasData: false }
504 silly lockFile 4ff77625-andlebars-node-modules-uglify-js tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js
505 silly lockFile 4ff77625-andlebars-node-modules-uglify-js tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js
506 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
507 silly lockFile 8bc88bcb--npm-uglify-js-2-6-4-package-tgz tar:///home/coder/.npm/uglify-js/2.6.4/package.tgz
508 info preinstall uglify-js@2.6.4
509 verbose readDependencies using package.json deps
510 verbose readDependencies using package.json deps
511 verbose cache add [ 'async@~0.2.6', null ]
512 verbose cache add name=undefined spec="async@~0.2.6" args=["async@~0.2.6",null]
513 verbose parsed url { protocol: null,
513 verbose parsed url   slashes: null,
513 verbose parsed url   auth: null,
513 verbose parsed url   host: null,
513 verbose parsed url   port: null,
513 verbose parsed url   hostname: null,
513 verbose parsed url   hash: null,
513 verbose parsed url   search: null,
513 verbose parsed url   query: null,
513 verbose parsed url   pathname: 'async@~0.2.6',
513 verbose parsed url   path: 'async@~0.2.6',
513 verbose parsed url   href: 'async@~0.2.6' }
514 verbose cache add name="async" spec="~0.2.6" args=["async","~0.2.6"]
515 verbose parsed url { protocol: null,
515 verbose parsed url   slashes: null,
515 verbose parsed url   auth: null,
515 verbose parsed url   host: null,
515 verbose parsed url   port: null,
515 verbose parsed url   hostname: null,
515 verbose parsed url   hash: null,
515 verbose parsed url   search: null,
515 verbose parsed url   query: null,
515 verbose parsed url   pathname: '~0.2.6',
515 verbose parsed url   path: '~0.2.6',
515 verbose parsed url   href: '~0.2.6' }
516 verbose addNamed [ 'async', '~0.2.6' ]
517 verbose addNamed [ null, '>=0.2.6-0 <0.3.0-0' ]
518 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
519 verbose lock async@~0.2.6 /home/coder/.npm/e00b1d77-async-0-2-6.lock
520 verbose cache add [ 'source-map@~0.5.1', null ]
521 verbose cache add name=undefined spec="source-map@~0.5.1" args=["source-map@~0.5.1",null]
522 verbose parsed url { protocol: null,
522 verbose parsed url   slashes: null,
522 verbose parsed url   auth: null,
522 verbose parsed url   host: null,
522 verbose parsed url   port: null,
522 verbose parsed url   hostname: null,
522 verbose parsed url   hash: null,
522 verbose parsed url   search: null,
522 verbose parsed url   query: null,
522 verbose parsed url   pathname: 'source-map@~0.5.1',
522 verbose parsed url   path: 'source-map@~0.5.1',
522 verbose parsed url   href: 'source-map@~0.5.1' }
523 verbose cache add name="source-map" spec="~0.5.1" args=["source-map","~0.5.1"]
524 verbose parsed url { protocol: null,
524 verbose parsed url   slashes: null,
524 verbose parsed url   auth: null,
524 verbose parsed url   host: null,
524 verbose parsed url   port: null,
524 verbose parsed url   hostname: null,
524 verbose parsed url   hash: null,
524 verbose parsed url   search: null,
524 verbose parsed url   query: null,
524 verbose parsed url   pathname: '~0.5.1',
524 verbose parsed url   path: '~0.5.1',
524 verbose parsed url   href: '~0.5.1' }
525 verbose addNamed [ 'source-map', '~0.5.1' ]
526 verbose addNamed [ null, '>=0.5.1-0 <0.6.0-0' ]
527 silly lockFile 27b644b5-source-map-0-5-1 source-map@~0.5.1
528 verbose lock source-map@~0.5.1 /home/coder/.npm/27b644b5-source-map-0-5-1.lock
529 verbose cache add [ 'uglify-to-browserify@~1.0.0', null ]
530 verbose cache add name=undefined spec="uglify-to-browserify@~1.0.0" args=["uglify-to-browserify@~1.0.0",null]
531 verbose parsed url { protocol: null,
531 verbose parsed url   slashes: null,
531 verbose parsed url   auth: null,
531 verbose parsed url   host: null,
531 verbose parsed url   port: null,
531 verbose parsed url   hostname: null,
531 verbose parsed url   hash: null,
531 verbose parsed url   search: null,
531 verbose parsed url   query: null,
531 verbose parsed url   pathname: 'uglify-to-browserify@~1.0.0',
531 verbose parsed url   path: 'uglify-to-browserify@~1.0.0',
531 verbose parsed url   href: 'uglify-to-browserify@~1.0.0' }
532 verbose cache add name="uglify-to-browserify" spec="~1.0.0" args=["uglify-to-browserify","~1.0.0"]
533 verbose parsed url { protocol: null,
533 verbose parsed url   slashes: null,
533 verbose parsed url   auth: null,
533 verbose parsed url   host: null,
533 verbose parsed url   port: null,
533 verbose parsed url   hostname: null,
533 verbose parsed url   hash: null,
533 verbose parsed url   search: null,
533 verbose parsed url   query: null,
533 verbose parsed url   pathname: '~1.0.0',
533 verbose parsed url   path: '~1.0.0',
533 verbose parsed url   href: '~1.0.0' }
534 verbose addNamed [ 'uglify-to-browserify', '~1.0.0' ]
535 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
536 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
537 verbose lock uglify-to-browserify@~1.0.0 /home/coder/.npm/8d4498e3-uglify-to-browserify-1-0-0.lock
538 silly addNameRange { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: false }
539 silly addNameRange { name: 'source-map',
539 silly addNameRange   range: '>=0.5.1-0 <0.6.0-0',
539 silly addNameRange   hasData: false }
540 verbose cache add [ 'yargs@~3.10.0', null ]
541 verbose cache add name=undefined spec="yargs@~3.10.0" args=["yargs@~3.10.0",null]
542 verbose parsed url { protocol: null,
542 verbose parsed url   slashes: null,
542 verbose parsed url   auth: null,
542 verbose parsed url   host: null,
542 verbose parsed url   port: null,
542 verbose parsed url   hostname: null,
542 verbose parsed url   hash: null,
542 verbose parsed url   search: null,
542 verbose parsed url   query: null,
542 verbose parsed url   pathname: 'yargs@~3.10.0',
542 verbose parsed url   path: 'yargs@~3.10.0',
542 verbose parsed url   href: 'yargs@~3.10.0' }
543 verbose cache add name="yargs" spec="~3.10.0" args=["yargs","~3.10.0"]
544 verbose parsed url { protocol: null,
544 verbose parsed url   slashes: null,
544 verbose parsed url   auth: null,
544 verbose parsed url   host: null,
544 verbose parsed url   port: null,
544 verbose parsed url   hostname: null,
544 verbose parsed url   hash: null,
544 verbose parsed url   search: null,
544 verbose parsed url   query: null,
544 verbose parsed url   pathname: '~3.10.0',
544 verbose parsed url   path: '~3.10.0',
544 verbose parsed url   href: '~3.10.0' }
545 verbose addNamed [ 'yargs', '~3.10.0' ]
546 verbose addNamed [ null, '>=3.10.0-0 <3.11.0-0' ]
547 silly lockFile 65827936-yargs-3-10-0 yargs@~3.10.0
548 verbose lock yargs@~3.10.0 /home/coder/.npm/65827936-yargs-3-10-0.lock
549 silly addNameRange { name: 'uglify-to-browserify',
549 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
549 silly addNameRange   hasData: false }
550 silly addNameRange { name: 'yargs', range: '>=3.10.0-0 <3.11.0-0', hasData: false }
551 verbose registry.get async not expired, no request
552 silly addNameRange number 2 { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: true }
553 silly addNameRange versions [ 'async',
553 silly addNameRange   [ '0.1.0',
553 silly addNameRange     '0.1.1',
553 silly addNameRange     '0.1.2',
553 silly addNameRange     '0.1.3',
553 silly addNameRange     '0.1.4',
553 silly addNameRange     '0.1.5',
553 silly addNameRange     '0.1.6',
553 silly addNameRange     '0.1.7',
553 silly addNameRange     '0.1.8',
553 silly addNameRange     '0.1.9',
553 silly addNameRange     '0.1.10',
553 silly addNameRange     '0.1.11',
553 silly addNameRange     '0.1.12',
553 silly addNameRange     '0.1.13',
553 silly addNameRange     '0.1.14',
553 silly addNameRange     '0.1.15',
553 silly addNameRange     '0.1.16',
553 silly addNameRange     '0.1.17',
553 silly addNameRange     '0.1.18',
553 silly addNameRange     '0.1.19',
553 silly addNameRange     '0.1.20',
553 silly addNameRange     '0.1.21',
553 silly addNameRange     '0.1.22',
553 silly addNameRange     '0.2.0',
553 silly addNameRange     '0.2.1',
553 silly addNameRange     '0.2.2',
553 silly addNameRange     '0.2.3',
553 silly addNameRange     '0.2.4',
553 silly addNameRange     '0.2.5',
553 silly addNameRange     '0.2.6',
553 silly addNameRange     '0.2.7',
553 silly addNameRange     '0.2.8',
553 silly addNameRange     '0.2.9',
553 silly addNameRange     '0.2.10',
553 silly addNameRange     '0.3.0',
553 silly addNameRange     '0.4.0',
553 silly addNameRange     '0.4.1',
553 silly addNameRange     '0.5.0',
553 silly addNameRange     '0.6.0',
553 silly addNameRange     '0.6.1',
553 silly addNameRange     '0.6.2',
553 silly addNameRange     '0.7.0',
553 silly addNameRange     '0.8.0',
553 silly addNameRange     '0.9.0',
553 silly addNameRange     '0.9.2',
553 silly addNameRange     '1.0.0',
553 silly addNameRange     '1.1.0',
553 silly addNameRange     '1.2.0',
553 silly addNameRange     '1.1.1',
553 silly addNameRange     '1.2.1',
553 silly addNameRange     '1.3.0',
553 silly addNameRange     '1.4.0',
553 silly addNameRange     '1.4.1',
553 silly addNameRange     '1.4.2',
553 silly addNameRange     '1.5.0',
553 silly addNameRange     '1.5.1',
553 silly addNameRange     '1.5.2',
553 silly addNameRange     '2.0.0-alpha.0',
553 silly addNameRange     '2.0.0-rc.1',
553 silly addNameRange     '2.0.0-rc.2',
553 silly addNameRange     '2.0.0-rc.3',
553 silly addNameRange     '2.0.0-rc.4',
553 silly addNameRange     '2.0.0-rc.5',
553 silly addNameRange     '2.0.0-rc.6' ] ]
554 verbose addNamed [ 'async', '0.2.10' ]
555 verbose addNamed [ '0.2.10', '0.2.10' ]
556 silly lockFile 098b530d-async-0-2-10 async@0.2.10
557 verbose lock async@0.2.10 /home/coder/.npm/098b530d-async-0-2-10.lock
558 verbose registry.get source-map not expired, no request
559 silly addNameRange number 2 { name: 'source-map',
559 silly addNameRange   range: '>=0.5.1-0 <0.6.0-0',
559 silly addNameRange   hasData: true }
560 silly addNameRange versions [ 'source-map',
560 silly addNameRange   [ '0.0.0',
560 silly addNameRange     '0.1.0',
560 silly addNameRange     '0.1.1',
560 silly addNameRange     '0.1.2',
560 silly addNameRange     '0.1.3',
560 silly addNameRange     '0.1.4',
560 silly addNameRange     '0.1.5',
560 silly addNameRange     '0.1.6',
560 silly addNameRange     '0.1.7',
560 silly addNameRange     '0.1.8',
560 silly addNameRange     '0.1.9',
560 silly addNameRange     '0.1.10',
560 silly addNameRange     '0.1.11',
560 silly addNameRange     '0.1.12',
560 silly addNameRange     '0.1.13',
560 silly addNameRange     '0.1.14',
560 silly addNameRange     '0.1.15',
560 silly addNameRange     '0.1.16',
560 silly addNameRange     '0.1.17',
560 silly addNameRange     '0.1.18',
560 silly addNameRange     '0.1.19',
560 silly addNameRange     '0.1.20',
560 silly addNameRange     '0.1.21',
560 silly addNameRange     '0.1.22',
560 silly addNameRange     '0.1.23',
560 silly addNameRange     '0.1.24',
560 silly addNameRange     '0.1.25',
560 silly addNameRange     '0.1.26',
560 silly addNameRange     '0.1.27',
560 silly addNameRange     '0.1.28',
560 silly addNameRange     '0.1.29',
560 silly addNameRange     '0.1.30',
560 silly addNameRange     '0.1.31',
560 silly addNameRange     '0.1.32',
560 silly addNameRange     '0.1.33',
560 silly addNameRange     '0.1.34',
560 silly addNameRange     '0.1.35',
560 silly addNameRange     '0.1.36',
560 silly addNameRange     '0.1.37',
560 silly addNameRange     '0.1.38',
560 silly addNameRange     '0.1.39',
560 silly addNameRange     '0.1.40',
560 silly addNameRange     '0.1.41',
560 silly addNameRange     '0.1.42',
560 silly addNameRange     '0.1.43',
560 silly addNameRange     '0.2.0',
560 silly addNameRange     '0.3.0',
560 silly addNameRange     '0.4.0',
560 silly addNameRange     '0.4.1',
560 silly addNameRange     '0.4.2',
560 silly addNameRange     '0.4.3',
560 silly addNameRange     '0.4.4',
560 silly addNameRange     '0.5.0',
560 silly addNameRange     '0.5.1',
560 silly addNameRange     '0.5.2',
560 silly addNameRange     '0.5.3',
560 silly addNameRange     '0.5.4',
560 silly addNameRange     '0.5.5',
560 silly addNameRange     '0.5.6' ] ]
561 verbose addNamed [ 'source-map', '0.5.6' ]
562 verbose addNamed [ '0.5.6', '0.5.6' ]
563 silly lockFile 604ff37e-source-map-0-5-6 source-map@0.5.6
564 verbose lock source-map@0.5.6 /home/coder/.npm/604ff37e-source-map-0-5-6.lock
565 verbose url raw wordwrap
566 verbose url resolving [ 'https://registry.npmjs.org/', './wordwrap' ]
567 verbose url resolved https://registry.npmjs.org/wordwrap
568 info trying registry request attempt 1 at 14:59:57
569 verbose etag "18ZMVFL4XQSNT8JYI76ECE9BV"
570 http GET https://registry.npmjs.org/wordwrap
571 verbose url raw minimist
572 verbose url resolving [ 'https://registry.npmjs.org/', './minimist' ]
573 verbose url resolved https://registry.npmjs.org/minimist
574 info trying registry request attempt 1 at 14:59:57
575 verbose etag "5LTFR8C7HYUUVDRJLP7YHS58M"
576 http GET https://registry.npmjs.org/minimist
577 verbose url raw uglify-to-browserify
578 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-to-browserify' ]
579 verbose url resolved https://registry.npmjs.org/uglify-to-browserify
580 info trying registry request attempt 1 at 14:59:57
581 verbose etag "5D2D85ZOGQX25YXI2QJJR7C7S"
582 http GET https://registry.npmjs.org/uglify-to-browserify
583 verbose url raw yargs
584 verbose url resolving [ 'https://registry.npmjs.org/', './yargs' ]
585 verbose url resolved https://registry.npmjs.org/yargs
586 info trying registry request attempt 1 at 14:59:57
587 verbose etag "1YA2UGDLDBCPLO8O8ID8FX8H5"
588 http GET https://registry.npmjs.org/yargs
589 silly lockFile dc89c65c-ndlebars-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/source-map
590 silly lockFile dc89c65c-ndlebars-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/source-map
591 silly lockFile 6209935b-npm-source-map-0-4-4-package-tgz tar:///home/coder/.npm/source-map/0.4.4/package.tgz
592 silly lockFile 6209935b-npm-source-map-0-4-4-package-tgz tar:///home/coder/.npm/source-map/0.4.4/package.tgz
593 info preinstall source-map@0.4.4
594 verbose readDependencies using package.json deps
595 verbose readDependencies using package.json deps
596 verbose cache add [ 'amdefine@>=0.0.4', null ]
597 verbose cache add name=undefined spec="amdefine@>=0.0.4" args=["amdefine@>=0.0.4",null]
598 verbose parsed url { protocol: null,
598 verbose parsed url   slashes: null,
598 verbose parsed url   auth: null,
598 verbose parsed url   host: null,
598 verbose parsed url   port: null,
598 verbose parsed url   hostname: null,
598 verbose parsed url   hash: null,
598 verbose parsed url   search: null,
598 verbose parsed url   query: null,
598 verbose parsed url   pathname: 'amdefine@%3E=0.0.4',
598 verbose parsed url   path: 'amdefine@%3E=0.0.4',
598 verbose parsed url   href: 'amdefine@%3E=0.0.4' }
599 verbose cache add name="amdefine" spec=">=0.0.4" args=["amdefine",">=0.0.4"]
600 verbose parsed url { protocol: null,
600 verbose parsed url   slashes: null,
600 verbose parsed url   auth: null,
600 verbose parsed url   host: null,
600 verbose parsed url   port: null,
600 verbose parsed url   hostname: null,
600 verbose parsed url   hash: null,
600 verbose parsed url   search: null,
600 verbose parsed url   query: null,
600 verbose parsed url   pathname: '%3E=0.0.4',
600 verbose parsed url   path: '%3E=0.0.4',
600 verbose parsed url   href: '%3E=0.0.4' }
601 verbose addNamed [ 'amdefine', '>=0.0.4' ]
602 verbose addNamed [ null, '>=0.0.4' ]
603 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
604 verbose lock amdefine@>=0.0.4 /home/coder/.npm/165d2d7b-amdefine-0-0-4.lock
605 silly addNameRange { name: 'amdefine', range: '>=0.0.4', hasData: false }
606 silly lockFile a5eabd4a-es-handlebars-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/async
607 silly lockFile a5eabd4a-es-handlebars-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/async
608 silly lockFile 90338524-oder-npm-async-1-5-2-package-tgz tar:///home/coder/.npm/async/1.5.2/package.tgz
609 silly lockFile 90338524-oder-npm-async-1-5-2-package-tgz tar:///home/coder/.npm/async/1.5.2/package.tgz
610 info preinstall async@1.5.2
611 verbose readDependencies using package.json deps
612 verbose readDependencies using package.json deps
613 silly resolved []
614 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/async
615 info build /usr/local/lib/node_modules/handlebars/node_modules/async
616 verbose linkStuff [ true,
616 verbose linkStuff   '/usr/local/lib/node_modules',
616 verbose linkStuff   false,
616 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules' ]
617 info linkStuff async@1.5.2
618 verbose linkBins async@1.5.2
619 verbose linkMans async@1.5.2
620 verbose rebuildBundles async@1.5.2
621 info install async@1.5.2
622 info postinstall async@1.5.2
623 silly lockFile 098b530d-async-0-2-10 async@0.2.10
624 silly lockFile 098b530d-async-0-2-10 async@0.2.10
625 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
626 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
627 silly lockFile 604ff37e-source-map-0-5-6 source-map@0.5.6
628 silly lockFile 604ff37e-source-map-0-5-6 source-map@0.5.6
629 silly lockFile 27b644b5-source-map-0-5-1 source-map@~0.5.1
630 silly lockFile 27b644b5-source-map-0-5-1 source-map@~0.5.1
631 verbose url raw amdefine
632 verbose url resolving [ 'https://registry.npmjs.org/', './amdefine' ]
633 verbose url resolved https://registry.npmjs.org/amdefine
634 info trying registry request attempt 1 at 14:59:57
635 verbose etag "7QBUZMENK2X1MN2MI4IF5JSH4"
636 http GET https://registry.npmjs.org/amdefine
637 http 304 https://registry.npmjs.org/wordwrap
638 silly registry.get cb [ 304,
638 silly registry.get   { date: 'Wed, 22 Jun 2016 12:59:58 GMT',
638 silly registry.get     via: '1.1 varnish',
638 silly registry.get     'cache-control': 'max-age=300',
638 silly registry.get     etag: '"18ZMVFL4XQSNT8JYI76ECE9BV"',
638 silly registry.get     age: '18',
638 silly registry.get     connection: 'keep-alive',
638 silly registry.get     'x-served-by': 'cache-lhr6327-LHR',
638 silly registry.get     'x-cache': 'HIT',
638 silly registry.get     'x-cache-hits': '1',
638 silly registry.get     'x-timer': 'S1466600398.508804,VS0,VE0',
638 silly registry.get     vary: 'Accept-Encoding' } ]
639 verbose etag wordwrap from cache
640 http 200 https://registry.npmjs.org/uglify-to-browserify
641 silly registry.get cb [ 200,
641 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
641 silly registry.get     etag: '"BEHQLBD9DR6K29JIICSDUTRUR"',
641 silly registry.get     'content-type': 'application/json',
641 silly registry.get     'cache-control': 'max-age=300',
641 silly registry.get     'content-length': '4779',
641 silly registry.get     'accept-ranges': 'bytes',
641 silly registry.get     date: 'Wed, 22 Jun 2016 12:59:58 GMT',
641 silly registry.get     via: '1.1 varnish',
641 silly registry.get     age: '299',
641 silly registry.get     connection: 'keep-alive',
641 silly registry.get     'x-served-by': 'cache-lhr6341-LHR',
641 silly registry.get     'x-cache': 'HIT',
641 silly registry.get     'x-cache-hits': '1',
641 silly registry.get     'x-timer': 'S1466600398.508987,VS0,VE0',
641 silly registry.get     vary: 'Accept-Encoding' } ]
642 http 304 https://registry.npmjs.org/minimist
643 silly registry.get cb [ 304,
643 silly registry.get   { date: 'Wed, 22 Jun 2016 12:59:58 GMT',
643 silly registry.get     via: '1.1 varnish',
643 silly registry.get     'cache-control': 'max-age=300',
643 silly registry.get     etag: '"5LTFR8C7HYUUVDRJLP7YHS58M"',
643 silly registry.get     age: '199',
643 silly registry.get     connection: 'keep-alive',
643 silly registry.get     'x-served-by': 'cache-lhr6331-LHR',
643 silly registry.get     'x-cache': 'HIT',
643 silly registry.get     'x-cache-hits': '1',
643 silly registry.get     'x-timer': 'S1466600398.511809,VS0,VE0',
643 silly registry.get     vary: 'Accept-Encoding' } ]
644 verbose etag minimist from cache
645 silly addNameRange number 2 { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: true }
646 silly addNameRange versions [ 'wordwrap', [ '0.0.1', '0.0.2', '0.0.3', '1.0.0' ] ]
647 verbose addNamed [ 'wordwrap', '0.0.3' ]
648 verbose addNamed [ '0.0.3', '0.0.3' ]
649 silly lockFile 62fc4320-wordwrap-0-0-3 wordwrap@0.0.3
650 verbose lock wordwrap@0.0.3 /home/coder/.npm/62fc4320-wordwrap-0-0-3.lock
651 silly addNameRange number 2 { name: 'uglify-to-browserify',
651 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
651 silly addNameRange   hasData: true }
652 silly addNameRange versions [ 'uglify-to-browserify',
652 silly addNameRange   [ '0.0.1', '1.0.0', '1.0.1', '1.0.2' ] ]
653 verbose addNamed [ 'uglify-to-browserify', '1.0.2' ]
654 verbose addNamed [ '1.0.2', '1.0.2' ]
655 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
656 verbose lock uglify-to-browserify@1.0.2 /home/coder/.npm/1fc290f9-uglify-to-browserify-1-0-2.lock
657 silly addNameRange number 2 { name: 'minimist', range: '>=0.0.1-0 <0.1.0-0', hasData: true }
658 silly addNameRange versions [ 'minimist',
658 silly addNameRange   [ '0.0.0',
658 silly addNameRange     '0.0.1',
658 silly addNameRange     '0.0.2',
658 silly addNameRange     '0.0.3',
658 silly addNameRange     '0.0.4',
658 silly addNameRange     '0.0.5',
658 silly addNameRange     '0.0.6',
658 silly addNameRange     '0.0.7',
658 silly addNameRange     '0.0.8',
658 silly addNameRange     '0.0.9',
658 silly addNameRange     '0.0.10',
658 silly addNameRange     '0.1.0',
658 silly addNameRange     '0.2.0',
658 silly addNameRange     '1.0.0',
658 silly addNameRange     '1.1.0',
658 silly addNameRange     '1.1.1',
658 silly addNameRange     '1.1.2',
658 silly addNameRange     '1.1.3',
658 silly addNameRange     '1.2.0' ] ]
659 verbose addNamed [ 'minimist', '0.0.10' ]
660 verbose addNamed [ '0.0.10', '0.0.10' ]
661 silly lockFile 92f0553b-minimist-0-0-10 minimist@0.0.10
662 verbose lock minimist@0.0.10 /home/coder/.npm/92f0553b-minimist-0-0-10.lock
663 silly lockFile 62fc4320-wordwrap-0-0-3 wordwrap@0.0.3
664 silly lockFile 62fc4320-wordwrap-0-0-3 wordwrap@0.0.3
665 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
666 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
667 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
668 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
669 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
670 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
671 silly lockFile 92f0553b-minimist-0-0-10 minimist@0.0.10
672 silly lockFile 92f0553b-minimist-0-0-10 minimist@0.0.10
673 silly lockFile 7a855a96-minimist-0-0-1 minimist@~0.0.1
674 silly lockFile 7a855a96-minimist-0-0-1 minimist@~0.0.1
675 silly resolved [ { name: 'wordwrap',
675 silly resolved     description: 'Wrap those words. Show them at what columns to start and stop.',
675 silly resolved     version: '0.0.3',
675 silly resolved     repository:
675 silly resolved      { type: 'git',
675 silly resolved        url: 'git://github.com/substack/node-wordwrap.git' },
675 silly resolved     main: './index.js',
675 silly resolved     keywords: [ 'word', 'wrap', 'rule', 'format', 'column' ],
675 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
675 silly resolved     scripts: { test: 'expresso' },
675 silly resolved     devDependencies: { expresso: '=0.7.x' },
675 silly resolved     engines: { node: '>=0.4.0' },
675 silly resolved     license: 'MIT',
675 silly resolved     author:
675 silly resolved      { name: 'James Halliday',
675 silly resolved        email: 'mail@substack.net',
675 silly resolved        url: 'http://substack.net' },
675 silly resolved     readme: 'wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require(\'wordwrap\')(15);\n    console.log(wrap(\'You and your whole family are made out of meat.\'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require(\'wordwrap\')(20, 60);\n    console.log(wrap(\n        \'At long last the struggle and tumult was over.\'\n        + \' The machines had finally cast off their oppressors\'\n        + \' and were finally free to roam the cosmos.\'\n        + \'\\n\'\n        + \'Free of purpose, free of obligation.\'\n        + \' Just drifting through emptiness.\'\n        + \' The sun was just another point of light.\'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require(\'wordwrap\');\n\nwrap(stop), wrap(start, stop, params={mode:"soft"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn "soft" mode, split chunks by `/(\\S+\\s+/` and don\'t break up chunks which are\nlonger than `stop - start`, in "hard" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = "hard"`.\n',
675 silly resolved     readmeFilename: 'README.markdown',
675 silly resolved     bugs: { url: 'https://github.com/substack/node-wordwrap/issues' },
675 silly resolved     _id: 'wordwrap@0.0.3',
675 silly resolved     _from: 'wordwrap@~0.0.2' },
675 silly resolved   { name: 'minimist',
675 silly resolved     version: '0.0.10',
675 silly resolved     description: 'parse argument options',
675 silly resolved     main: 'index.js',
675 silly resolved     devDependencies: { tape: '~1.0.4', tap: '~0.4.0' },
675 silly resolved     scripts: { test: 'tap test/*.js' },
675 silly resolved     testling: { files: 'test/*.js', browsers: [Object] },
675 silly resolved     repository: { type: 'git', url: 'git://github.com/substack/minimist.git' },
675 silly resolved     homepage: 'https://github.com/substack/minimist',
675 silly resolved     keywords: [ 'argv', 'getopt', 'parser', 'optimist' ],
675 silly resolved     author:
675 silly resolved      { name: 'James Halliday',
675 silly resolved        email: 'mail@substack.net',
675 silly resolved        url: 'http://substack.net' },
675 silly resolved     license: 'MIT',
675 silly resolved     readme: '# minimist\n\nparse argument options\n\nThis module is the guts of optimist\'s argument parser without all the\nfanciful decoration.\n\n[![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)\n\n[![build status](https://secure.travis-ci.org/substack/minimist.png)](http://travis-ci.org/substack/minimist)\n\n# example\n\n``` js\nvar argv = require(\'minimist\')(process.argv.slice(2));\nconsole.dir(argv);\n```\n\n```\n$ node example/parse.js -a beep -b boop\n{ _: [], a: \'beep\', b: \'boop\' }\n```\n\n```\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{ _: [ \'foo\', \'bar\', \'baz\' ],\n  x: 3,\n  y: 4,\n  n: 5,\n  a: true,\n  b: true,\n  c: true,\n  beep: \'boop\' }\n```\n\n# methods\n\n``` js\nvar parseArgs = require(\'minimist\')\n```\n\n## var argv = parseArgs(args, opts={})\n\nReturn an argument object `argv` populated with the array arguments from `args`.\n\n`argv._` contains all the arguments that didn\'t have an option associated with\nthem.\n\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\n`opts.boolean` is set for that argument name.\n\nAny arguments after `\'--\'` will not be parsed and will end up in `argv._`.\n\noptions can be:\n\n* `opts.string` - a string or array of strings argument names to always treat as\nstrings\n* `opts.boolean` - a string or array of strings to always treat as booleans\n* `opts.alias` - an object mapping string names to strings or arrays of string\nargument names to use as aliases\n* `opts.default` - an object mapping string argument names to default values\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install minimist\n```\n\n# license\n\nMIT\n',
675 silly resolved     readmeFilename: 'readme.markdown',
675 silly resolved     bugs: { url: 'https://github.com/substack/minimist/issues' },
675 silly resolved     _id: 'minimist@0.0.10',
675 silly resolved     _from: 'minimist@~0.0.1' } ]
676 info install wordwrap@0.0.3 into /usr/local/lib/node_modules/handlebars/node_modules/optimist
677 info install minimist@0.0.10 into /usr/local/lib/node_modules/handlebars/node_modules/optimist
678 info installOne wordwrap@0.0.3
679 info installOne minimist@0.0.10
680 info /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap unbuild
681 info /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/minimist unbuild
682 verbose tar unpack /home/coder/.npm/wordwrap/0.0.3/package.tgz
683 silly lockFile b463bc9d-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
684 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap /home/coder/.npm/b463bc9d-s-optimist-node-modules-wordwrap.lock
685 silly lockFile c08a1a92-r-npm-wordwrap-0-0-3-package-tgz tar:///home/coder/.npm/wordwrap/0.0.3/package.tgz
686 verbose lock tar:///home/coder/.npm/wordwrap/0.0.3/package.tgz /home/coder/.npm/c08a1a92-r-npm-wordwrap-0-0-3-package-tgz.lock
687 verbose tar unpack /home/coder/.npm/minimist/0.0.10/package.tgz
688 silly lockFile 44ac1d9c-s-optimist-node-modules-minimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/minimist
689 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/minimist /home/coder/.npm/44ac1d9c-s-optimist-node-modules-minimist.lock
690 silly lockFile bd95fff1--npm-minimist-0-0-10-package-tgz tar:///home/coder/.npm/minimist/0.0.10/package.tgz
691 verbose lock tar:///home/coder/.npm/minimist/0.0.10/package.tgz /home/coder/.npm/bd95fff1--npm-minimist-0-0-10-package-tgz.lock
692 silly gunzTarPerm modes [ '755', '644' ]
693 silly gunzTarPerm modes [ '755', '644' ]
694 silly gunzTarPerm extractEntry package.json
695 silly gunzTarPerm extractEntry LICENSE
696 silly gunzTarPerm extractEntry index.js
697 silly gunzTarPerm extractEntry README.markdown
698 silly gunzTarPerm extractEntry example/center.js
699 silly gunzTarPerm extractEntry example/meat.js
700 silly gunzTarPerm extractEntry test/break.js
701 silly gunzTarPerm extractEntry test/wrap.js
702 silly gunzTarPerm extractEntry test/idleness.txt
703 silly lockFile b463bc9d-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
704 silly lockFile b463bc9d-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
705 silly lockFile c08a1a92-r-npm-wordwrap-0-0-3-package-tgz tar:///home/coder/.npm/wordwrap/0.0.3/package.tgz
706 silly lockFile c08a1a92-r-npm-wordwrap-0-0-3-package-tgz tar:///home/coder/.npm/wordwrap/0.0.3/package.tgz
707 silly gunzTarPerm extractEntry package.json
708 info preinstall wordwrap@0.0.3
709 verbose readDependencies using package.json deps
710 silly gunzTarPerm extractEntry LICENSE
711 silly gunzTarPerm extractEntry index.js
712 verbose readDependencies using package.json deps
713 silly resolved []
714 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
715 info build /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/wordwrap
716 verbose linkStuff [ true,
716 verbose linkStuff   '/usr/local/lib/node_modules',
716 verbose linkStuff   false,
716 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules' ]
717 info linkStuff wordwrap@0.0.3
718 verbose linkBins wordwrap@0.0.3
719 verbose linkMans wordwrap@0.0.3
720 verbose rebuildBundles wordwrap@0.0.3
721 info install wordwrap@0.0.3
722 info postinstall wordwrap@0.0.3
723 silly gunzTarPerm extractEntry .travis.yml
724 silly gunzTarPerm extractEntry example/parse.js
725 silly gunzTarPerm extractEntry readme.markdown
726 silly gunzTarPerm extractEntry test/bool.js
727 silly gunzTarPerm extractEntry test/dash.js
728 silly gunzTarPerm extractEntry test/default_bool.js
729 silly gunzTarPerm extractEntry test/dotted.js
730 silly gunzTarPerm extractEntry test/long.js
731 silly gunzTarPerm extractEntry test/num.js
732 silly gunzTarPerm extractEntry test/parse.js
733 silly gunzTarPerm extractEntry test/parse_modified.js
734 silly gunzTarPerm extractEntry test/short.js
735 silly gunzTarPerm extractEntry test/whitespace.js
736 silly lockFile 44ac1d9c-s-optimist-node-modules-minimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/minimist
737 silly lockFile 44ac1d9c-s-optimist-node-modules-minimist tar:///usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/minimist
738 silly lockFile bd95fff1--npm-minimist-0-0-10-package-tgz tar:///home/coder/.npm/minimist/0.0.10/package.tgz
739 silly lockFile bd95fff1--npm-minimist-0-0-10-package-tgz tar:///home/coder/.npm/minimist/0.0.10/package.tgz
740 info preinstall minimist@0.0.10
741 verbose readDependencies using package.json deps
742 verbose readDependencies using package.json deps
743 silly resolved []
744 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/minimist
745 info build /usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules/minimist
746 verbose linkStuff [ true,
746 verbose linkStuff   '/usr/local/lib/node_modules',
746 verbose linkStuff   false,
746 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/optimist/node_modules' ]
747 info linkStuff minimist@0.0.10
748 verbose linkBins minimist@0.0.10
749 verbose linkMans minimist@0.0.10
750 verbose rebuildBundles minimist@0.0.10
751 info install minimist@0.0.10
752 info postinstall minimist@0.0.10
753 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/optimist
754 info build /usr/local/lib/node_modules/handlebars/node_modules/optimist
755 verbose linkStuff [ true,
755 verbose linkStuff   '/usr/local/lib/node_modules',
755 verbose linkStuff   false,
755 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules' ]
756 info linkStuff optimist@0.6.1
757 verbose linkBins optimist@0.6.1
758 verbose linkMans optimist@0.6.1
759 verbose rebuildBundles optimist@0.6.1
760 verbose rebuildBundles [ 'minimist', 'wordwrap' ]
761 info install optimist@0.6.1
762 info postinstall optimist@0.6.1
763 http 304 https://registry.npmjs.org/amdefine
764 silly registry.get cb [ 304,
764 silly registry.get   { date: 'Wed, 22 Jun 2016 12:59:58 GMT',
764 silly registry.get     via: '1.1 varnish',
764 silly registry.get     'cache-control': 'max-age=300',
764 silly registry.get     etag: '"7QBUZMENK2X1MN2MI4IF5JSH4"',
764 silly registry.get     age: '126',
764 silly registry.get     connection: 'keep-alive',
764 silly registry.get     'x-served-by': 'cache-lhr6329-LHR',
764 silly registry.get     'x-cache': 'HIT',
764 silly registry.get     'x-cache-hits': '2',
764 silly registry.get     'x-timer': 'S1466600398.631713,VS0,VE0',
764 silly registry.get     vary: 'Accept-Encoding' } ]
765 verbose etag amdefine from cache
766 silly addNameRange number 2 { name: 'amdefine', range: '>=0.0.4', hasData: true }
767 silly addNameRange versions [ 'amdefine',
767 silly addNameRange   [ '0.0.1',
767 silly addNameRange     '0.0.2',
767 silly addNameRange     '0.0.3',
767 silly addNameRange     '0.0.4',
767 silly addNameRange     '0.0.5',
767 silly addNameRange     '0.0.6',
767 silly addNameRange     '0.0.7',
767 silly addNameRange     '0.0.8',
767 silly addNameRange     '0.1.0',
767 silly addNameRange     '0.1.1',
767 silly addNameRange     '1.0.0' ] ]
768 verbose addNamed [ 'amdefine', '1.0.0' ]
769 verbose addNamed [ '1.0.0', '1.0.0' ]
770 silly lockFile c54e608e-amdefine-1-0-0 amdefine@1.0.0
771 verbose lock amdefine@1.0.0 /home/coder/.npm/c54e608e-amdefine-1-0-0.lock
772 silly lockFile c54e608e-amdefine-1-0-0 amdefine@1.0.0
773 silly lockFile c54e608e-amdefine-1-0-0 amdefine@1.0.0
774 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
775 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
776 silly resolved [ { name: 'amdefine',
776 silly resolved     description: 'Provide AMD\'s define() API for declaring modules in the AMD format',
776 silly resolved     version: '1.0.0',
776 silly resolved     homepage: 'http://github.com/jrburke/amdefine',
776 silly resolved     author:
776 silly resolved      { name: 'James Burke',
776 silly resolved        email: 'jrburke@gmail.com',
776 silly resolved        url: 'http://github.com/jrburke' },
776 silly resolved     license: 'BSD-3-Clause AND MIT',
776 silly resolved     repository: { type: 'git', url: 'https://github.com/jrburke/amdefine.git' },
776 silly resolved     main: './amdefine.js',
776 silly resolved     engines: { node: '>=0.4.2' },
776 silly resolved     readme: '# amdefine\n\nA module that can be used to implement AMD\'s define() in Node. This allows you\nto code to the AMD API and have the module work in node programs without\nrequiring those other programs to use AMD.\n\n## Usage\n\n**1)** Update your package.json to indicate amdefine as a dependency:\n\n```javascript\n    "dependencies": {\n        "amdefine": ">=0.1.0"\n    }\n```\n\nThen run `npm install` to get amdefine into your project.\n\n**2)** At the top of each module that uses define(), place this code:\n\n```javascript\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module) }\n```\n\n**Only use these snippets** when loading amdefine. If you preserve the basic structure,\nwith the braces, it will be stripped out when using the [RequireJS optimizer](#optimizer).\n\nYou can add spaces, line breaks and even require amdefine with a local path, but\nkeep the rest of the structure to get the stripping behavior.\n\nAs you may know, because `if` statements in JavaScript don\'t have their own scope, the var\ndeclaration in the above snippet is made whether the `if` expression is truthy or not. If\nRequireJS is loaded then the declaration is superfluous because `define` is already already\ndeclared in the same scope in RequireJS. Fortunately JavaScript handles multiple `var`\ndeclarations of the same variable in the same scope gracefully.\n\nIf you want to deliver amdefine.js with your code rather than specifying it as a dependency\nwith npm, then just download the latest release and refer to it using a relative path:\n\n[Latest Version](https://github.com/jrburke/amdefine/raw/latest/amdefine.js)\n\n### amdefine/intercept\n\nConsider this very experimental.\n\nInstead of pasting the piece of text for the amdefine setup of a `define`\nvariable in each module you create or consume, you can use `amdefine/intercept`\ninstead. It will automatically insert the above snippet in each .js file loaded\nby Node.\n\n**Warning**: you should only use this if you are creating an application that\nis consuming AMD style defined()\'d modules that are distributed via npm and want\nto run that code in Node.\n\nFor library code where you are not sure if it will be used by others in Node or\nin the browser, then explicitly depending on amdefine and placing the code\nsnippet above is suggested path, instead of using `amdefine/intercept`. The\nintercept module affects all .js files loaded in the Node app, and it is\ninconsiderate to modify global state like that unless you are also controlling\nthe top level app.\n\n#### Why distribute AMD-style modules via npm?\n\nnpm has a lot of weaknesses for front-end use (installed layout is not great,\nshould have better support for the `baseUrl + moduleID + \'.js\' style of loading,\nsingle file JS installs), but some people want a JS package manager and are\nwilling to live with those constraints. If that is you, but still want to author\nin AMD style modules to get dynamic require([]), better direct source usage and\npowerful loader plugin support in the browser, then this tool can help.\n\n#### amdefine/intercept usage\n\nJust require it in your top level app module (for example index.js, server.js):\n\n```javascript\nrequire(\'amdefine/intercept\');\n```\n\nThe module does not return a value, so no need to assign the result to a local\nvariable.\n\nThen just require() code as you normally would with Node\'s require(). Any .js\nloaded after the intercept require will have the amdefine check injected in\nthe .js source as it is loaded. It does not modify the source on disk, just\nprepends some content to the text of the module as it is loaded by Node.\n\n#### How amdefine/intercept works\n\nIt overrides the `Module._extensions[\'.js\']` in Node to automatically prepend\nthe amdefine snippet above. So, it will affect any .js file loaded by your\napp.\n\n## define() usage\n\nIt is best if you use the anonymous forms of define() in your module:\n\n```javascript\ndefine(function (require) {\n    var dependency = require(\'dependency\');\n});\n```\n\nor\n\n```javascript\ndefine([\'dependency\'], function (dependency) {\n\n});\n```\n\n## RequireJS optimizer integration. <a name="optimizer"></name>\n\nVersion 1.0.3 of the [RequireJS optimizer](http://requirejs.org/docs/optimization.html)\nwill have support for stripping the `if (typeof define !== \'function\')` check\nmentioned above, so you can include this snippet for code that runs in the\nbrowser, but avoid taking the cost of the if() statement once the code is\noptimized for deployment.\n\n## Node 0.4 Support\n\nIf you want to support Node 0.4, then add `require` as the second parameter to amdefine:\n\n```javascript\n//Only if you want Node 0.4. If using 0.5 or later, use the above snippet.\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module, require) }\n```\n\n## Limitations\n\n### Synchronous vs Asynchronous\n\namdefine creates a define() function that is callable by your code. It will\nexecute and trace dependencies and call the factory function *synchronously*,\nto keep the behavior in line with Node\'s synchronous dependency tracing.\n\nThe exception: calling AMD\'s callback-style require() from inside a factory\nfunction. The require callback is called on process.nextTick():\n\n```javascript\ndefine(function (require) {\n    require([\'a\'], function(a) {\n        //\'a\' is loaded synchronously, but\n        //this callback is called on process.nextTick().\n    });\n});\n```\n\n### Loader Plugins\n\nLoader plugins are supported as long as they call their load() callbacks\nsynchronously. So ones that do network requests will not work. However plugins\nlike [text](http://requirejs.org/docs/api.html#text) can load text files locally.\n\nThe plugin API\'s `load.fromText()` is **not supported** in amdefine, so this means\ntranspiler plugins like the [CoffeeScript loader plugin](https://github.com/jrburke/require-cs)\nwill not work. This may be fixable, but it is a bit complex, and I do not have\nenough node-fu to figure it out yet. See the source for amdefine.js if you want\nto get an idea of the issues involved.\n\n## Tests\n\nTo run the tests, cd to **tests** and run:\n\n```\nnode all.js\nnode all-intercept.js\n```\n\n## License\n\nNew BSD and MIT. Check the LICENSE file for all the details.\n',
776 silly resolved     readmeFilename: 'README.md',
776 silly resolved     bugs: { url: 'https://github.com/jrburke/amdefine/issues' },
776 silly resolved     _id: 'amdefine@1.0.0',
776 silly resolved     _from: 'amdefine@>=0.0.4' } ]
777 info install amdefine@1.0.0 into /usr/local/lib/node_modules/handlebars/node_modules/source-map
778 info installOne amdefine@1.0.0
779 info /usr/local/lib/node_modules/handlebars/node_modules/source-map/node_modules/amdefine unbuild
780 verbose tar unpack /home/coder/.npm/amdefine/1.0.0/package.tgz
781 silly lockFile e7d3787e-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/handlebars/node_modules/source-map/node_modules/amdefine
782 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/source-map/node_modules/amdefine /home/coder/.npm/e7d3787e-source-map-node-modules-amdefine.lock
783 silly lockFile c1882fdc-r-npm-amdefine-1-0-0-package-tgz tar:///home/coder/.npm/amdefine/1.0.0/package.tgz
784 verbose lock tar:///home/coder/.npm/amdefine/1.0.0/package.tgz /home/coder/.npm/c1882fdc-r-npm-amdefine-1-0-0-package-tgz.lock
785 silly gunzTarPerm modes [ '755', '644' ]
786 silly gunzTarPerm extractEntry package.json
787 silly gunzTarPerm extractEntry README.md
788 silly gunzTarPerm extractEntry LICENSE
789 silly gunzTarPerm extractEntry amdefine.js
790 silly gunzTarPerm extractEntry intercept.js
791 silly lockFile e7d3787e-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/handlebars/node_modules/source-map/node_modules/amdefine
792 silly lockFile e7d3787e-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/handlebars/node_modules/source-map/node_modules/amdefine
793 silly lockFile c1882fdc-r-npm-amdefine-1-0-0-package-tgz tar:///home/coder/.npm/amdefine/1.0.0/package.tgz
794 silly lockFile c1882fdc-r-npm-amdefine-1-0-0-package-tgz tar:///home/coder/.npm/amdefine/1.0.0/package.tgz
795 info preinstall amdefine@1.0.0
796 verbose readDependencies using package.json deps
797 verbose readDependencies using package.json deps
798 silly resolved []
799 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/source-map/node_modules/amdefine
800 info build /usr/local/lib/node_modules/handlebars/node_modules/source-map/node_modules/amdefine
801 verbose linkStuff [ true,
801 verbose linkStuff   '/usr/local/lib/node_modules',
801 verbose linkStuff   false,
801 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/source-map/node_modules' ]
802 info linkStuff amdefine@1.0.0
803 verbose linkBins amdefine@1.0.0
804 verbose linkMans amdefine@1.0.0
805 verbose rebuildBundles amdefine@1.0.0
806 info install amdefine@1.0.0
807 info postinstall amdefine@1.0.0
808 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/source-map
809 info build /usr/local/lib/node_modules/handlebars/node_modules/source-map
810 verbose linkStuff [ true,
810 verbose linkStuff   '/usr/local/lib/node_modules',
810 verbose linkStuff   false,
810 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules' ]
811 info linkStuff source-map@0.4.4
812 verbose linkBins source-map@0.4.4
813 verbose linkMans source-map@0.4.4
814 verbose rebuildBundles source-map@0.4.4
815 verbose rebuildBundles [ 'amdefine' ]
816 info install source-map@0.4.4
817 info postinstall source-map@0.4.4
818 http 200 https://registry.npmjs.org/yargs
819 silly registry.get cb [ 200,
819 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
819 silly registry.get     etag: '"B5C8JGQMOPR5TLO356M1PSKG8"',
819 silly registry.get     'content-type': 'application/json',
819 silly registry.get     'cache-control': 'max-age=300',
819 silly registry.get     'content-length': '221605',
819 silly registry.get     'accept-ranges': 'bytes',
819 silly registry.get     date: 'Wed, 22 Jun 2016 12:59:58 GMT',
819 silly registry.get     via: '1.1 varnish',
819 silly registry.get     age: '170',
819 silly registry.get     connection: 'keep-alive',
819 silly registry.get     'x-served-by': 'cache-lhr6342-LHR',
819 silly registry.get     'x-cache': 'HIT',
819 silly registry.get     'x-cache-hits': '1',
819 silly registry.get     'x-timer': 'S1466600398.537266,VS0,VE0',
819 silly registry.get     vary: 'Accept-Encoding' } ]
820 silly addNameRange number 2 { name: 'yargs', range: '>=3.10.0-0 <3.11.0-0', hasData: true }
821 silly addNameRange versions [ 'yargs',
821 silly addNameRange   [ '1.0.0',
821 silly addNameRange     '1.0.1',
821 silly addNameRange     '1.0.3',
821 silly addNameRange     '1.0.4',
821 silly addNameRange     '1.0.5',
821 silly addNameRange     '1.0.6',
821 silly addNameRange     '1.0.7',
821 silly addNameRange     '1.0.8',
821 silly addNameRange     '1.0.9',
821 silly addNameRange     '1.0.10',
821 silly addNameRange     '1.0.11',
821 silly addNameRange     '1.0.12',
821 silly addNameRange     '1.0.13',
821 silly addNameRange     '1.0.15',
821 silly addNameRange     '1.1.0',
821 silly addNameRange     '1.1.1',
821 silly addNameRange     '1.1.2',
821 silly addNameRange     '1.1.3',
821 silly addNameRange     '1.2.0',
821 silly addNameRange     '1.2.1',
821 silly addNameRange     '1.2.2',
821 silly addNameRange     '1.2.3',
821 silly addNameRange     '1.2.4',
821 silly addNameRange     '1.2.5',
821 silly addNameRange     '1.2.6',
821 silly addNameRange     '1.3.0',
821 silly addNameRange     '1.3.1',
821 silly addNameRange     '1.3.2',
821 silly addNameRange     '1.3.3',
821 silly addNameRange     '2.1.1',
821 silly addNameRange     '2.3.0',
821 silly addNameRange     '3.0.0',
821 silly addNameRange     '3.0.1',
821 silly addNameRange     '3.0.2',
821 silly addNameRange     '3.0.3',
821 silly addNameRange     '3.0.4',
821 silly addNameRange     '3.1.0',
821 silly addNameRange     '3.2.1',
821 silly addNameRange     '3.3.1',
821 silly addNameRange     '3.4.0',
821 silly addNameRange     '3.4.4',
821 silly addNameRange     '3.4.5',
821 silly addNameRange     '3.5.0',
821 silly addNameRange     '3.5.1',
821 silly addNameRange     '3.5.2',
821 silly addNameRange     '3.5.3',
821 silly addNameRange     '3.5.4',
821 silly addNameRange     '3.6.0',
821 silly addNameRange     '3.7.0',
821 silly addNameRange     '3.7.1',
821 silly addNameRange     '3.7.2',
821 silly addNameRange     '3.8.0',
821 silly addNameRange     '3.9.0',
821 silly addNameRange     '3.9.1',
821 silly addNameRange     '3.10.0',
821 silly addNameRange     '3.11.0',
821 silly addNameRange     '3.12.0',
821 silly addNameRange     '3.13.0',
821 silly addNameRange     '3.14.0',
821 silly addNameRange     '3.15.0',
821 silly addNameRange     '3.16.0',
821 silly addNameRange     '3.16.1',
821 silly addNameRange     '3.17.1',
821 silly addNameRange     '3.18.0',
821 silly addNameRange     '3.18.1',
821 silly addNameRange     '3.19.0',
821 silly addNameRange     '3.20.0',
821 silly addNameRange     '3.21.0',
821 silly addNameRange     '3.21.1',
821 silly addNameRange     '3.22.0',
821 silly addNameRange     '3.22.1',
821 silly addNameRange     '3.22.2',
821 silly addNameRange     '3.23.0',
821 silly addNameRange     '3.24.0',
821 silly addNameRange     '3.25.0',
821 silly addNameRange     '3.26.0',
821 silly addNameRange     '3.27.0',
821 silly addNameRange     '3.28.0',
821 silly addNameRange     '3.29.0',
821 silly addNameRange     '3.30.0',
821 silly addNameRange     '3.31.0',
821 silly addNameRange     '3.32.0',
821 silly addNameRange     '4.0.0-alpha1',
821 silly addNameRange     '4.0.0-alpha2',
821 silly addNameRange     '4.0.0-alpha3',
821 silly addNameRange     '4.0.0-alpha4',
821 silly addNameRange     '4.0.0-alpha5',
821 silly addNameRange     '4.0.0',
821 silly addNameRange     '4.1.0',
821 silly addNameRange     '4.2.0',
821 silly addNameRange     '4.3.0',
821 silly addNameRange     '4.3.1',
821 silly addNameRange     '4.3.2',
821 silly addNameRange     '4.4.0',
821 silly addNameRange     '4.5.0',
821 silly addNameRange     '4.6.0-candidate',
821 silly addNameRange     '4.6.0',
821 silly addNameRange     '4.7.0-pre',
821 silly addNameRange     '4.7.0',
821 silly addNameRange     '4.7.1' ] ]
822 verbose addNamed [ 'yargs', '3.10.0' ]
823 verbose addNamed [ '3.10.0', '3.10.0' ]
824 silly lockFile 94a5d6c6-yargs-3-10-0 yargs@3.10.0
825 verbose lock yargs@3.10.0 /home/coder/.npm/94a5d6c6-yargs-3-10-0.lock
826 silly lockFile 94a5d6c6-yargs-3-10-0 yargs@3.10.0
827 silly lockFile 94a5d6c6-yargs-3-10-0 yargs@3.10.0
828 silly lockFile 65827936-yargs-3-10-0 yargs@~3.10.0
829 silly lockFile 65827936-yargs-3-10-0 yargs@~3.10.0
830 silly resolved [ { name: 'async',
830 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
830 silly resolved     main: './lib/async',
830 silly resolved     author: { name: 'Caolan McMahon' },
830 silly resolved     version: '0.2.10',
830 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
830 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
830 silly resolved     licenses: [ [Object] ],
830 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
830 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
830 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
830 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
830 silly resolved     readmeFilename: 'README.md',
830 silly resolved     _id: 'async@0.2.10',
830 silly resolved     _from: 'async@~0.2.6' },
830 silly resolved   { name: 'source-map',
830 silly resolved     description: 'Generates and consumes source maps',
830 silly resolved     version: '0.5.6',
830 silly resolved     homepage: 'https://github.com/mozilla/source-map',
830 silly resolved     author: { name: 'Nick Fitzgerald', email: 'nfitzgerald@mozilla.com' },
830 silly resolved     contributors:
830 silly resolved      [ [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object],
830 silly resolved        [Object] ],
830 silly resolved     repository: { type: 'git', url: 'http://github.com/mozilla/source-map.git' },
830 silly resolved     main: './source-map.js',
830 silly resolved     files:
830 silly resolved      [ 'source-map.js',
830 silly resolved        'lib/',
830 silly resolved        'dist/source-map.debug.js',
830 silly resolved        'dist/source-map.js',
830 silly resolved        'dist/source-map.min.js',
830 silly resolved        'dist/source-map.min.js.map' ],
830 silly resolved     engines: { node: '>=0.10.0' },
830 silly resolved     license: 'BSD-3-Clause',
830 silly resolved     scripts:
830 silly resolved      { test: 'npm run build && node test/run-tests.js',
830 silly resolved        build: 'webpack --color',
830 silly resolved        toc: 'doctoc --title \'## Table of Contents\' README.md && doctoc --title \'## Table of Contents\' CONTRIBUTING.md' },
830 silly resolved     devDependencies: { doctoc: '^0.15.0', webpack: '^1.12.0' },
830 silly resolved     readme: '# Source Map\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\n[![NPM](https://nodei.co/npm/source-map.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/source-map)\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n\n## Use with Node\n\n    $ npm install source-map\n\n## Use on the Web\n\n    <script src="https://raw.githubusercontent.com/mozilla/source-map/master/dist/source-map.min.js" defer></script>\n\n--------------------------------------------------------------------------------\n\n<!-- `npm run toc` to regenerate the Table of Contents -->\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON\'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Examples](#examples)\n  - [Consuming a source map](#consuming-a-source-map)\n  - [Generating a source map](#generating-a-source-map)\n    - [With SourceNode (high level API)](#with-sourcenode-high-level-api)\n    - [With SourceMapGenerator (low level API)](#with-sourcemapgenerator-low-level-api)\n- [API](#api)\n  - [SourceMapConsumer](#sourcemapconsumer)\n    - [new SourceMapConsumer(rawSourceMap)](#new-sourcemapconsumerrawsourcemap)\n    - [SourceMapConsumer.prototype.computeColumnSpans()](#sourcemapconsumerprototypecomputecolumnspans)\n    - [SourceMapConsumer.prototype.originalPositionFor(generatedPosition)](#sourcemapconsumerprototypeoriginalpositionforgeneratedposition)\n    - [SourceMapConsumer.prototype.generatedPositionFor(originalPosition)](#sourcemapconsumerprototypegeneratedpositionfororiginalposition)\n    - [SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)](#sourcemapconsumerprototypeallgeneratedpositionsfororiginalposition)\n    - [SourceMapConsumer.prototype.hasContentsOfAllSources()](#sourcemapconsumerprototypehascontentsofallsources)\n    - [SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])](#sourcemapconsumerprototypesourcecontentforsource-returnnullonmissing)\n    - [SourceMapConsumer.prototype.eachMapping(callback, context, order)](#sourcemapconsumerprototypeeachmappingcallback-context-order)\n  - [SourceMapGenerator](#sourcemapgenerator)\n    - [new SourceMapGenerator([startOfSourceMap])](#new-sourcemapgeneratorstartofsourcemap)\n    - [SourceMapGenerator.fromSourceMap(sourceMapConsumer)](#sourcemapgeneratorfromsourcemapsourcemapconsumer)\n    - [SourceMapGenerator.prototype.addMapping(mapping)](#sourcemapgeneratorprototypeaddmappingmapping)\n    - [SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)](#sourcemapgeneratorprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])](#sourcemapgeneratorprototypeapplysourcemapsourcemapconsumer-sourcefile-sourcemappath)\n    - [SourceMapGenerator.prototype.toString()](#sourcemapgeneratorprototypetostring)\n  - [SourceNode](#sourcenode)\n    - [new SourceNode([line, column, source[, chunk[, name]]])](#new-sourcenodeline-column-source-chunk-name)\n    - [SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])](#sourcenodefromstringwithsourcemapcode-sourcemapconsumer-relativepath)\n    - [SourceNode.prototype.add(chunk)](#sourcenodeprototypeaddchunk)\n    - [SourceNode.prototype.prepend(chunk)](#sourcenodeprototypeprependchunk)\n    - [SourceNode.prototype.setSourceContent(sourceFile, sourceContent)](#sourcenodeprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceNode.prototype.walk(fn)](#sourcenodeprototypewalkfn)\n    - [SourceNode.prototype.walkSourceContents(fn)](#sourcenodeprototypewalksourcecontentsfn)\n    - [SourceNode.prototype.join(sep)](#sourcenodeprototypejoinsep)\n    - [SourceNode.prototype.replaceRight(pattern, replacement)](#sourcenodeprototypereplacerightpattern-replacement)\n    - [SourceNode.prototype.toString()](#sourcenodeprototypetostring)\n    - [SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])](#sourcenodeprototypetostringwithsourcemapstartofsourcemap)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Examples\n\n### Consuming a source map\n\n```js\nvar rawSourceMap = {\n  version: 3,\n  file: \'min.js\',\n  names: [\'bar\', \'baz\', \'n\'],\n  sources: [\'one.js\', \'two.js\'],\n  sourceRoot: \'http://example.com/www/js/\',\n  mappings: \'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA\'\n};\n\nvar smc = new SourceMapConsumer(rawSourceMap);\n\nconsole.log(smc.sources);\n// [ \'http://example.com/www/js/one.js\',\n//   \'http://example.com/www/js/two.js\' ]\n\nconsole.log(smc.originalPositionFor({\n  line: 2,\n  column: 28\n}));\n// { source: \'http://example.com/www/js/two.js\',\n//   line: 2,\n//   column: 10,\n//   name: \'n\' }\n\nconsole.log(smc.generatedPositionFor({\n  source: \'http://example.com/www/js/two.js\',\n  line: 2,\n  column: 10\n}));\n// { line: 2, column: 28 }\n\nsmc.eachMapping(function (m) {\n  // ...\n});\n```\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n```js\nfunction compile(ast) {\n  switch (ast.type) {\n  case \'BinaryExpression\':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      [compile(ast.left), " + ", compile(ast.right)]\n    );\n  case \'Literal\':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      String(ast.value)\n    );\n  // ...\n  default:\n    throw new Error("Bad AST");\n  }\n}\n\nvar ast = parse("40 + 2", "add.js");\nconsole.log(compile(ast).toStringWithSourceMap({\n  file: \'add.js\'\n}));\n// { code: \'40 + 2\',\n//   map: [object SourceMapGenerator] }\n```\n\n#### With SourceMapGenerator (low level API)\n\n```js\nvar map = new SourceMapGenerator({\n  file: "source-mapped.js"\n});\n\nmap.addMapping({\n  generated: {\n    line: 10,\n    column: 35\n  },\n  source: "foo.js",\n  original: {\n    line: 33,\n    column: 2\n  },\n  name: "christopher"\n});\n\nconsole.log(map.toString());\n// \'{"version":3,"file":"source-mapped.js","sources":["foo.js"],"names":["christopher"],"mappings":";;;;;;;;;mCAgCEA"}\'\n```\n\n## API\n\nGet a reference to the module:\n\n```js\n// Node.js\nvar sourceMap = require(\'source-map\');\n\n// Browser builds\nvar sourceMap = window.sourceMap;\n\n// Inside Firefox\nconst sourceMap = require("devtools/toolkit/sourcemap/source-map.js");\n```\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`\'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n```js\nvar consumer = new sourceMap.SourceMapConsumer(rawSourceMapJsonData);\n```\n\n#### SourceMapConsumer.prototype.computeColumnSpans()\n\nCompute the last column for each generated mapping. The last column is\ninclusive.\n\n```js\n// Before:\nconsumer.allGeneratedPositionsFor({ line: 2, source: "foo.coffee" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n\nconsumer.computeColumnSpans();\n\n// After:\nconsumer.allGeneratedPositionsFor({ line: 2, source: "foo.coffee" })\n// [ { line: 2,\n//     column: 1,\n//     lastColumn: 9 },\n//   { line: 2,\n//     column: 10,\n//     lastColumn: 19 },\n//   { line: 2,\n//     column: 20,\n//     lastColumn: Infinity } ]\n\n```\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource\'s line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\n* `bias`: Either `SourceMapConsumer.GREATEST_LOWER_BOUND` or\n  `SourceMapConsumer.LEAST_UPPER_BOUND`. Specifies whether to return the closest\n  element that is smaller than or greater than the one we are searching for,\n  respectively, if the exact element cannot be found.  Defaults to\n  `SourceMapConsumer.GREATEST_LOWER_BOUND`.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n```js\nconsumer.originalPositionFor({ line: 2, column: 10 })\n// { source: \'foo.coffee\',\n//   line: 2,\n//   column: 2,\n//   name: null }\n\nconsumer.originalPositionFor({ line: 99999999999999999, column: 999999999999999 })\n// { source: null,\n//   line: null,\n//   column: null,\n//   name: null }\n```\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.generatedPositionFor({ source: "example.js", line: 2, column: 10 })\n// { line: 1,\n//   column: 56 }\n```\n\n#### SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)\n\nReturns all generated line and column information for the original source, line,\nand column provided. If no column is provided, returns all mappings\ncorresponding to a either the line we are searching for or the next closest line\nthat has any mappings. Otherwise, returns all mappings corresponding to the\ngiven line and either the column we are searching for or the next closest column\nthat has any offsets.\n\nThe only argument is an object with the following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: Optional. The column number in the original source.\n\nand an array of objects is returned, each with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.allGeneratedpositionsfor({ line: 2, source: "foo.coffee" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n```\n\n#### SourceMapConsumer.prototype.hasContentsOfAllSources()\n\nReturn true if we have the embedded source content for every source listed in\nthe source map, false otherwise.\n\nIn other words, if this method returns `true`, then\n`consumer.sourceContentFor(s)` will succeed for every source `s` in\n`consumer.sources`.\n\n```js\n// ...\nif (consumer.hasContentsOfAllSources()) {\n  consumerReadyCallback(consumer);\n} else {\n  fetchSources(consumer, consumerReadyCallback);\n}\n// ...\n```\n\n#### SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\nIf the source content for the given source is not found, then an error is\nthrown. Optionally, pass `true` as the second param to have `null` returned\ninstead.\n\n```js\nconsumer.sources\n// [ "my-cool-lib.clj" ]\n\nconsumer.sourceContentFor("my-cool-lib.clj")\n// "..."\n\nconsumer.sourceContentFor("this is not in the source map");\n// Error: "this is not in the source map" is not in the source map\n\nconsumer.sourceContentFor("this is not in the source map", true);\n// null\n```\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file\'s line/column order or the\n  original\'s source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n```js\nconsumer.eachMapping(function (m) { console.log(m); })\n// ...\n// { source: \'illmatic.js\',\n//   generatedLine: 1,\n//   generatedColumn: 0,\n//   originalLine: 1,\n//   originalColumn: 0,\n//   name: null }\n// { source: \'illmatic.js\',\n//   generatedLine: 2,\n//   generatedColumn: 0,\n//   originalLine: 2,\n//   originalColumn: 0,\n//   name: null }\n// ...\n```\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n* `skipValidation`: Optional. When `true`, disables validation of mappings as\n  they are added. This can improve performance but should be used with\n  discretion, as a last resort. Even then, one should avoid using this flag when\n  running tests, if possible.\n\n```js\nvar generator = new sourceMap.SourceMapGenerator({\n  file: "my-generated-javascript-file.js",\n  sourceRoot: "http://example.com/app/js/"\n});\n```\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new `SourceMapGenerator` from an existing `SourceMapConsumer` instance.\n\n* `sourceMapConsumer` The SourceMap.\n\n```js\nvar generator = sourceMap.SourceMapGenerator.fromSourceMap(consumer);\n```\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource\'s line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n```js\ngenerator.addMapping({\n  source: "module-one.scm",\n  original: { line: 128, column: 0 },\n  generated: { line: 3, column: 456 }\n})\n```\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n```js\ngenerator.setSourceContent("module-one.scm",\n                           fs.readFileSync("path/to/module-one.scm"))\n```\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimum of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren\'t in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `\'.\'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n```js\ngenerator.toString()\n// \'{"version":3,"sources":["module-one.scm"],"names":[],"mappings":"...snip...","file":"my-generated-javascript-file.js","sourceRoot":"http://example.com/app/js/"}\'\n```\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn\'t associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn\'t associated with an original column.\n\n* `source`: The original source\'s filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n```js\nvar node = new SourceNode(1, 2, "a.cpp", [\n  new SourceNode(3, 4, "b.cpp", "extern int status;\\n"),\n  new SourceNode(5, 6, "c.cpp", "std::string* make_string(size_t n);\\n"),\n  new SourceNode(7, 8, "d.cpp", "int main(int argc, char** argv) {}\\n"),\n]);\n```\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n* `relativePath` The optional path that relative sources in `sourceMapConsumer`\n  should be relative to.\n\n```js\nvar consumer = new SourceMapConsumer(fs.readFileSync("path/to/my-file.js.map"));\nvar node = SourceNode.fromStringWithSourceMap(fs.readFileSync("path/to/my-file.js"),\n                                              consumer);\n```\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.add(" + ");\nnode.add(otherNode);\nnode.add([leftHandOperandNode, " + ", rightHandOperandNode]);\n```\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.prepend("/** Build Id: f783haef86324gf **/\\n\\n");\n```\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n```js\nnode.setSourceContent("module-one.scm",\n                      fs.readFileSync("path/to/module-one.scm"))\n```\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source\'s line/column location.\n\n* `fn`: The traversal function.\n\n```js\nvar node = new SourceNode(1, 2, "a.js", [\n  new SourceNode(3, 4, "b.js", "uno"),\n  "dos",\n  [\n    "tres",\n    new SourceNode(5, 6, "c.js", "quatro")\n  ]\n]);\n\nnode.walk(function (code, loc) { console.log("WALK:", code, loc); })\n// WALK: uno { source: \'b.js\', line: 3, column: 4, name: null }\n// WALK: dos { source: \'a.js\', line: 1, column: 2, name: null }\n// WALK: tres { source: \'a.js\', line: 1, column: 2, name: null }\n// WALK: quatro { source: \'c.js\', line: 5, column: 6, name: null }\n```\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n```js\nvar a = new SourceNode(1, 2, "a.js", "generated from a");\na.setSourceContent("a.js", "original a");\nvar b = new SourceNode(1, 2, "b.js", "generated from b");\nb.setSourceContent("b.js", "original b");\nvar c = new SourceNode(1, 2, "c.js", "generated from c");\nc.setSourceContent("c.js", "original c");\n\nvar node = new SourceNode(null, null, null, [a, b, c]);\nnode.walkSourceContents(function (source, contents) { console.log("WALK:", source, ":", contents); })\n// WALK: a.js : original a\n// WALK: b.js : original b\n// WALK: c.js : original c\n```\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node\'s children.\n\n* `sep`: The separator.\n\n```js\nvar lhs = new SourceNode(1, 2, "a.rs", "my_copy");\nvar operand = new SourceNode(3, 4, "a.rs", "=");\nvar rhs = new SourceNode(5, 6, "a.rs", "orig.clone()");\n\nvar node = new SourceNode(null, null, null, [ lhs, operand, rhs ]);\nvar joinedNode = node.join(" ");\n```\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming white space from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n```js\n// Trim trailing white space.\nnode.replaceRight(/\\s*$/, "");\n```\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n```js\nvar node = new SourceNode(1, 2, "a.js", [\n  new SourceNode(3, 4, "b.js", "uno"),\n  "dos",\n  [\n    "tres",\n    new SourceNode(5, 6, "c.js", "quatro")\n  ]\n]);\n\nnode.toString()\n// \'unodostresquatro\'\n```\n\n#### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n```js\nvar node = new SourceNode(1, 2, "a.js", [\n  new SourceNode(3, 4, "b.js", "uno"),\n  "dos",\n  [\n    "tres",\n    new SourceNode(5, 6, "c.js", "quatro")\n  ]\n]);\n\nnode.toStringWithSourceMap({ file: "my-output-file.js" })\n// { code: \'unodostresquatro\',\n//   map: [object SourceMapGenerator] }\n```\n',
830 silly resolved     readmeFilename: 'README.md',
830 silly resolved     bugs: { url: 'https://github.com/mozilla/source-map/issues' },
830 silly resolved     _id: 'source-map@0.5.6',
830 silly resolved     _from: 'source-map@~0.5.1' },
830 silly resolved   { name: 'uglify-to-browserify',
830 silly resolved     version: '1.0.2',
830 silly resolved     description: 'A transform to make UglifyJS work in browserify.',
830 silly resolved     keywords: [],
830 silly resolved     dependencies: {},
830 silly resolved     devDependencies: { 'uglify-js': '~2.4.0', 'source-map': '~0.1.27' },
830 silly resolved     scripts: { test: 'node test/index.js' },
830 silly resolved     repository:
830 silly resolved      { type: 'git',
830 silly resolved        url: 'https://github.com/ForbesLindesay/uglify-to-browserify.git' },
830 silly resolved     author: { name: 'ForbesLindesay' },
830 silly resolved     license: 'MIT',
830 silly resolved     readme: '# uglify-to-browserify\r\n\r\nA transform to make UglifyJS work in browserify.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/uglify-to-browserify.png?branch=master)](https://travis-ci.org/ForbesLindesay/uglify-to-browserify)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/uglify-to-browserify.png)](https://gemnasium.com/ForbesLindesay/uglify-to-browserify)\r\n[![NPM version](https://badge.fury.io/js/uglify-to-browserify.png)](http://badge.fury.io/js/uglify-to-browserify)\r\n\r\n## Installation\r\n\r\n    npm install uglify-to-browserify\r\n\r\n## License\r\n\r\n  MIT',
830 silly resolved     readmeFilename: 'README.md',
830 silly resolved     bugs: { url: 'https://github.com/ForbesLindesay/uglify-to-browserify/issues' },
830 silly resolved     _id: 'uglify-to-browserify@1.0.2',
830 silly resolved     _from: 'uglify-to-browserify@~1.0.0' },
830 silly resolved   { name: 'yargs',
830 silly resolved     version: '3.10.0',
830 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
830 silly resolved     main: './index.js',
830 silly resolved     files: [ 'index.js', 'lib', 'completion.sh.hbs', 'LICENSE' ],
830 silly resolved     dependencies:
830 silly resolved      { camelcase: '^1.0.2',
830 silly resolved        cliui: '^2.1.0',
830 silly resolved        decamelize: '^1.0.0',
830 silly resolved        'window-size': '0.1.0' },
830 silly resolved     devDependencies:
830 silly resolved      { chai: '^2.2.0',
830 silly resolved        coveralls: '^2.11.2',
830 silly resolved        hashish: '0.0.4',
830 silly resolved        mocha: '^2.2.1',
830 silly resolved        nyc: '^2.2.1',
830 silly resolved        standard: '^3.11.1' },
830 silly resolved     scripts:
830 silly resolved      { test: 'standard && nyc mocha --check-leaks && nyc report',
830 silly resolved        coverage: 'nyc report --reporter=text-lcov | coveralls' },
830 silly resolved     repository: { type: 'git', url: 'http://github.com/bcoe/yargs.git' },
830 silly resolved     standard: { ignore: [Object], globals: [Object] },
830 silly resolved     keywords:
830 silly resolved      [ 'argument',
830 silly resolved        'args',
830 silly resolved        'option',
830 silly resolved        'parser',
830 silly resolved        'parsing',
830 silly resolved        'cli',
830 silly resolved        'command' ],
830 silly resolved     author:
830 silly resolved      { name: 'Alex Ford',
830 silly resolved        email: 'Alex.Ford@CodeTunnel.com',
830 silly resolved        url: 'http://CodeTunnel.com' },
830 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object] ],
830 silly resolved     license: 'MIT',
830 silly resolved     engine: { node: '>=0.4' },
830 silly resolved     readme: 'yargs\n========\n\nYargs be a node.js library fer hearties tryin\' ter parse optstrings.\n\nWith yargs, ye be havin\' a map that leads straight to yer treasure! Treasure of course, being a simple option hash.\n\n[![Build Status](https://travis-ci.org/bcoe/yargs.png)](https://travis-ci.org/bcoe/yargs)\n[![Dependency Status](https://gemnasium.com/bcoe/yargs.png)](https://gemnasium.com/bcoe/yargs)\n[![Coverage Status](https://coveralls.io/repos/bcoe/yargs/badge.svg?branch=)](https://coveralls.io/r/bcoe/yargs?branch=)\n[![NPM version](https://img.shields.io/npm/v/yargs.svg)](https://www.npmjs.com/package/yargs)\n\n> Yargs is the official successor to optimist. Please feel free to submit issues and pull requests. If you\'d like to contribute and don\'t know where to start, have a look at [the issue list](https://github.com/bcoe/yargs/issues) :)\n\nexamples\n========\n\nWith yargs, the options be just a hash!\n-------------------------------------------------------------------\n\nplunder.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\').argv;\n\nif (argv.ships > 3 && argv.distance < 53.5) {\n    console.log(\'Plunder more riffiwobbles!\');\n}\nelse {\n    console.log(\'Retreat from the xupptumblers!\');\n}\n````\n\n***\n\n    $ ./plunder.js --ships=4 --distance=22\n    Plunder more riffiwobbles!\n\n    $ ./plunder.js --ships 12 --distance 98.7\n    Retreat from the xupptumblers!\n\n![Joe was one optimistic pirate.](http://i.imgur.com/4WFGVJ9.png)\n\nBut don\'t walk the plank just yet! There be more! You can do short options:\n-------------------------------------------------\n\nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long, short, and even grouped:\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'yargs\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le perroquet dit: \' : \'The parrot says: \');\n}\nconsole.log(\n    (argv.fr ? \'couac\' : \'squawk\') + (argv.p ? \'!\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The parrot says: squawk\n\n    $ ./bool.js -sp\n    The parrot says: squawk!\n\n    $ ./bool.js -sp --fr\n    Le perroquet dit: couac!\n\nAnd non-hyphenated options too! Just use `argv._`!\n-------------------------------------------------\n\nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 rum\n    (6.82,3.35)\n    [ \'rum\' ]\n\n    $ ./nonopt.js "me hearties" -x 0.54 yo -y 1.12 ho\n    (0.54,1.12)\n    [ \'me hearties\', \'yo\', \'ho\' ]\n\nYargs even counts your booleans!\n----------------------------------------------------------------------\n\ncount.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .count(\'verbose\')\n    .alias(\'v\', \'verbose\')\n    .argv;\n\nVERBOSE_LEVEL = argv.verbose;\n\nfunction WARN()  { VERBOSE_LEVEL >= 0 && console.log.apply(console, arguments); }\nfunction INFO()  { VERBOSE_LEVEL >= 1 && console.log.apply(console, arguments); }\nfunction DEBUG() { VERBOSE_LEVEL >= 2 && console.log.apply(console, arguments); }\n\nWARN("Showing only important stuff");\nINFO("Showing semi-mportant stuff too");\nDEBUG("Extra chatty mode");\n````\n\n***\n    $ node count.js\n    Showing only important stuff\n\n    $ node count.js -v\n    Showing only important stuff\n    Showing semi-important stuff too\n\n    $ node count.js -vv\n    Showing only important stuff\n    Showing semi-important stuff too\n    Extra chatty mode\n\n    $ node count.js -v --verbose\n    Showing only important stuff\n    Showing semi-important stuff too\n    Extra chatty mode\n\nTell users how to use yer options and make demands.\n-------------------------------------------------\n\narea.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .usage(\'Usage: $0 -w [num] -yh[num]\')\n    .demand([\'w\',\'h\'])\n    .argv;\n\nconsole.log("The area is:", argv.w * argv.h);\n````\n\n***\n\n    $ ./area.js -w 55 -h 11\n    605\n\n    $ node ./area.js -w 4.91 -w 2.51\n    Usage: node ./area.js -w [num] -h [num]\n\n    Options:\n      -w  [required]\n      -h  [required]\n\n    Missing required arguments: h\n\nAfter yer demands have been met, demand more! Ask for non-hypenated arguments!\n-----------------------------------------\n\ndemand_count.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .demand(2)\n    .argv;\nconsole.dir(argv)\n````\n\n***\n\n\t$ ./demand_count.js a\n\tNot enough arguments, expected 2, but only found 1\n\t$ ./demand_count.js a b\n\t{ _: [ \'a\', \'b\' ], \'$0\': \'node ./demand_count.js\' }\n\t$ ./demand_count.js a b c\n\t{ _: [ \'a\', \'b\', \'c\' ], \'$0\': \'node ./demand_count.js\' }\n\nEVEN MORE SHIVER ME TIMBERS!\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv.v);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_single.js -v "me hearties" yo ho\n    true\n    [ \'me hearties\', \'yo\', \'ho\' ]\n\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nYargs is here to help you...\n---------------------------\n\nYe can describe parameters fer help messages and set aliases. Yargs figures\nout how ter format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .usage(\'Usage: $0 <command> [options]\')\n    .command(\'count\', \'Count the lines in a file\')\n    .demand(1)\n    .example(\'$0 count -f foo.js\', \'count the lines in the given file\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .nargs(\'f\', 1)\n    .describe(\'f\', \'Load a file\')\n    .help(\'h\')\n    .alias(\'h\', \'help\')\n    .epilog(\'copyright 2015\')\n    .argv;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n    $ node line_count.js count\n    Usage: node test.js <command> [options]\n\n    Commands:\n      count    Count the lines in a file\n\n    Options:\n      -f, --file  Load a file        [required]\n      -h, --help  Show help\n\n    Examples:\n      node test.js count -f foo.js    count the lines in the given file\n\n    copyright 2015\n\n    Missing required arguments: f\n\n    $ node line_count.js count --file line_count.js\n    20\n\n    $ node line_count.js count -f line_count.js\n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'yargs\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'yargs\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'yargs\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\nEach key of this object should be the canonical version of the option, and each\nvalue should be a string or an array of strings.\n\n.default(key, value, [description])\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\nBut wait, there\'s more! the default value can be a `function` which returns\na value. The name of the function will be used in the usage string:\n\n```js\nvar argv = require(\'yargs\')\n  .default(\'random\', function randomValue() {\n    return Math.random() * 256;\n  }).argv;\n```\n\nOptionally, `description` can also be provided and will take precedence over\ndisplaying the value in the usage instructions:\n\n```js\n.default(\'timeout\', 60000, \'(one-minute)\');\n```\n\n.demand(key, [msg | boolean])\n-----------------------------\n.require(key, [msg | boolean])\n------------------------------\n.required(key, [msg | boolean])\n-------------------------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\nIf a `msg` string is given, it will be printed when the argument is missing,\ninstead of the standard error message. This is especially helpful for the non-option arguments in `argv._`.\n\nIf a `boolean` value is given, it controls whether the option is demanded;\nthis is useful when using `.options()` to specify command line parameters.\n\n.requiresArg(key)\n-----------------\n\nSpecifies either a single option key (string), or an array of options that\nmust be followed by option values. If any option value is missing, show the\nusage information and exit.\n\nThe default behaviour is to set the value of any key not followed by an\noption value to `true`.\n\n.implies(x, y)\n--------------\n\nGiven the key `x` is set, it is required that the key `y` is set.\n\nimplies can also accept an object specifying multiple implications.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.option(key, opt)\n-----------------\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default().describe().string()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'yargs\')\n    .option(\'f\', {\n        alias : \'file\',\n        demand: true,\n        default: \'/etc/passwd\',\n        describe: \'x marks the spot\',\n        type: \'string\'\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'yargs\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n````javascript\nvar argv = require(\'yargs\')\n    .options({\n      \'f\': {\n        alias: \'file\',\n        demand: true,\n        default: \'/etc/passwd\',\n        describe: \'x marks the spot\',\n        type: \'string\'\n      }\n    })\n    .argv\n;\n````\n\n.usage(message, opts)\n---------------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n`opts` is optional and acts like calling `.options(opts)`.\n\n.command(cmd, desc, [fn])\n-------------------\n\nDocument the commands exposed by your application.\n\nuse `desc` to provide a description for each command your application accepts (the\nvalues stored in `argv._`).\n\nOptionally, you can provide a handler `fn` which will be executed when\na given command is provided. The handler will be executed with an instance\nof `yargs`, which can be used to compose nested commands.\n\nHere\'s an example of top-level and nested commands in action:\n\n```js\nvar argv = require(\'yargs\')\n  .usage(\'npm <command>\')\n  .command(\'install\', \'tis a mighty fine package to install\')\n  .command(\'publish\', \'shiver me timbers, should you be sharing all that\', function (yargs) {\n    argv = yargs.option(\'f\', {\n      alias: \'force\',\n      description: \'yar, it usually be a bad idea\'\n    })\n    .help(\'help\')\n    .argv\n  })\n  .help(\'help\')\n  .argv;\n```\n\n.example(cmd, desc)\n-------------------\n\nGive some example invocations of your program. Inside `cmd`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\nExamples will be printed out as part of the help message.\n\n\n.epilogue(str)\n--------------\n.epilog(str)\n------------\n\nA message to print at the end of the usage instructions, e.g.,\n\n```js\nvar argv = require(\'yargs\')\n  .epilogue(\'for more information, find our manual at http://example.com\');\n```\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\n`fn` is called with two arguments, the parsed `argv` hash and an array of options and their aliases.\n\nIf `fn` throws or returns a non-truthy value, show the thrown error, usage information, and\nexit.\n\n.fail(fn)\n---------\n\nMethod to execute when a failure occurs, rather then printing the failure message.\n\n`fn` is called with the failure message that would have been printed.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\n`key` will default to `false`, unless an `default(key, undefined)` is\nexplicitly set.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n`.string(\'_\')` will result in non-hyphenated arguments being interpreted as strings,\nregardless of whether they resemble numbers.\n\n.array(key)\n----------\n\nTell the parser to interpret `key` as an array. If `.array(\'foo\')` is set,\n`--foo foo bar` will be parsed as `[\'foo\', \'bar\']` rather than as `\'bar\'`.\n\n.nargs(key, count)\n-----------\n\nThe number of arguments that should be consumed after a key. This can be a\nuseful hint to prevent parsing ambiguity:\n\n```js\nvar argv = require(\'yargs\')\n  .nargs(\'token\', 1)\n  .parse([\'--token\', \'-my-token\']);\n```\n\nparses as:\n\n`{ _: [], token: \'-my-token\', \'$0\': \'node test\' }`\n\nOptionally `.nargs()` can take an object of `key`/`narg` pairs.\n\n.config(key)\n------------\n\nTells the parser that if the option specified by `key` is passed in, it\nshould be interpreted as a path to a JSON config file. The file is loaded\nand parsed, and its properties are set as arguments.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\nBy default wrap will be set to `Math.min(80, windowWidth)`. Use `.wrap(null)` to\nspecify no column limit.\n\n`yargs.wrap(yargs.terminalWidth())` can be used to maximize the width\nof yargs\' usage instructions.\n\n.strict()\n---------\n\nAny command-line argument given that is not demanded, or does not have a\ncorresponding description, will be reported as an error.\n\n.help([option, [description]])\n------------------------------\n\nAdd an option (e.g., `--help`) that displays the usage string and exits the\nprocess. If present, the `description` parameter customises the description of\nthe help option in the usage string.\n\nIf invoked without parameters, `.help` returns the generated usage string.\n\nExample:\n\n```\nvar yargs = require("yargs")\n       .usage("$0 -operand1 number -operand2 number -operation [add|subtract]");\nconsole.log(yargs.help());\n```\n\nLater on, ```argv``` can be retrived with ```yargs.argv```\n\n.version(version, [option], [description])\n----------------------------------------\n\nAdd an option (e.g., `--version`) that displays the version number (given by the\n`version` parameter) and exits the process. If present, the `description`\nparameter customizes the description of the version option in the usage string.\n\nYou can provide a `function` for version, rather than a string.\nThis is useful if you want to use the version from your package.json:\n\n```js\nvar argv = require(\'yargs\')\n  .version(function() {\n    return require(\'../package\').version;\n  })\n  .argv;\n```\n\n.showHelpOnFail(enable, [message])\n----------------------------------\n\nBy default, yargs outputs a usage string if any error is detected. Use the\n`.showHelpOnFail` method to customize this behaviour. if `enable` is `false`,\nthe usage string is not output. If the `message` parameter is present, this\nmessage is output after the error message.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .showHelpOnFail(false, "Specify --help for available options")\n    .argv;\n\n// etc.\n````\n\n***\n\n    $ node line_count.js --file\n    Missing argument value: f\n\n    Specify --help for available options\n\n.showHelp(consoleLevel=\'error\')\n---------------------------\n\nPrint the usage data using the [`console`](https://nodejs.org/api/console.html) function `consoleLevel` for printing.\n\nExample:\n\n```\nvar yargs = require("yargs")\n       .usage("$0 -operand1 number -operand2 number -operation [add|subtract]");\nyargs.showHelp();\n```\n\nOr, to print the usage data to `stdout` instead, you can specify the use of `console.log`:\n\n```\nyargs.showHelp("log");\n```\n\nLater on, ```argv``` can be retrived with ```yargs.argv```\n\n.completion(cmd, [description], [fn]);\n-------------\n\nEnable bash-completion shortcuts for commands and options.\n\n`cmd`: when present in `argv._`, will result in the `.bashrc` completion script\nbeing outputted. To enable bash completions, concat the generated script to your\n`.bashrc`, or `.bash_profile`.\n\n`description`: provide a description in your usage instructions for the command\nthat generates bash completion scripts.\n\n`fn`, rather than relying on yargs\' default completion functionlity, which\nshiver me timbers is pretty awesome, you can provide your own completion\nmethod.\n\n```js\nvar argv = require(\'yargs\')\n  .completion(\'completion\', function(current, argv) {\n    // \'current\' is the current command being completed.\n    // \'argv\' is the parsed arguments so far.\n    // simply return an array of completions.\n    return [\n      \'foo\',\n      \'bar\'\n    ];\n  })\n  .argv;\n```\n\nBut wait, there\'s more! you can provide asynchronous completions.\n\n```js\nvar argv = require(\'yargs\')\n  .completion(\'completion\', function(current, argv, done) {\n    setTimeout(function() {\n      done([\n        \'apple\',\n        \'banana\'\n      ]);\n    }, 500);\n  })\n  .argv;\n```\n\n.showCompletionScript()\n----------------------\n\nGenerate a bash completion script. Users of your application can install this\nscript in their `.bashrc`, and yargs will provide completion shortcuts for\ncommands and options.\n\n.exitProcess(enable)\n----------------------------------\n\nBy default, yargs exits the process when the user passes a help flag, uses the `.version` functionality or when validation fails. Calling `.exitProcess(false)` disables this behavior, enabling further actions after yargs have been validated.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.reset()\n--------\n\nReset the argument object built up so far. This is useful for\ncreating nested command line interfaces.\n\n```js\nvar yargs = require(\'./yargs\')\n  .usage(\'$0 command\')\n  .command(\'hello\', \'hello command\')\n  .command(\'world\', \'world command\')\n  .demand(1, \'must provide a valid command\'),\n  argv = yargs.argv,\n  command = argv._[0];\n\nif (command === \'hello\') {\n  yargs.reset()\n    .usage(\'$0 hello\')\n    .help(\'h\')\n    .example(\'$0 hello\', \'print the hello message!\')\n    .argv\n\n  console.log(\'hello!\');\n} else if (command === \'world\'){\n  yargs.reset()\n    .usage(\'$0 world\')\n    .help(\'h\')\n    .example(\'$0 world\', \'print the world message!\')\n    .argv\n\n  console.log(\'world!\');\n} else {\n  yargs.showHelp();\n}\n```\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\nshort numbers\n-------------\n\nShort numeric `head -n5` style argument work too:\n\n    $ node reflect.js -n123 -m456\n    { \'3\': true,\n      \'6\': true,\n      _: [],\n      \'$0\': \'node ./reflect.js\',\n      n: 123,\n      m: 456 }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n\n    npm install yargs\n\nor clone this project on github:\n\n    git clone http://github.com/bcoe/yargs.git\n\nTo run the tests with npm, just do:\n\n    npm test\n\ninspired by\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
830 silly resolved     readmeFilename: 'README.md',
830 silly resolved     bugs: { url: 'https://github.com/bcoe/yargs/issues' },
830 silly resolved     _id: 'yargs@3.10.0',
830 silly resolved     _from: 'yargs@~3.10.0' } ]
831 info install async@0.2.10 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
832 info install source-map@0.5.6 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
833 info install uglify-to-browserify@1.0.2 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
834 info install yargs@3.10.0 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
835 info installOne async@0.2.10
836 info installOne source-map@0.5.6
837 info installOne uglify-to-browserify@1.0.2
838 info installOne yargs@3.10.0
839 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async unbuild
840 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map unbuild
841 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/uglify-to-browserify unbuild
842 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs unbuild
843 verbose tar unpack /home/coder/.npm/async/0.2.10/package.tgz
844 silly lockFile ad983bea-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
845 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async /home/coder/.npm/ad983bea-les-uglify-js-node-modules-async.lock
846 silly lockFile 01f75de2-der-npm-async-0-2-10-package-tgz tar:///home/coder/.npm/async/0.2.10/package.tgz
847 verbose lock tar:///home/coder/.npm/async/0.2.10/package.tgz /home/coder/.npm/01f75de2-der-npm-async-0-2-10-package-tgz.lock
848 verbose tar unpack /home/coder/.npm/source-map/0.5.6/package.tgz
849 silly lockFile 3f94c749-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
850 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map /home/coder/.npm/3f94c749-glify-js-node-modules-source-map.lock
851 silly lockFile 2090737b-npm-source-map-0-5-6-package-tgz tar:///home/coder/.npm/source-map/0.5.6/package.tgz
852 verbose lock tar:///home/coder/.npm/source-map/0.5.6/package.tgz /home/coder/.npm/2090737b-npm-source-map-0-5-6-package-tgz.lock
853 verbose tar unpack /home/coder/.npm/uglify-to-browserify/1.0.2/package.tgz
854 silly lockFile 6e886263-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/uglify-to-browserify
855 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/uglify-to-browserify /home/coder/.npm/6e886263-ode-modules-uglify-to-browserify.lock
856 silly lockFile 892e12bc--to-browserify-1-0-2-package-tgz tar:///home/coder/.npm/uglify-to-browserify/1.0.2/package.tgz
857 verbose lock tar:///home/coder/.npm/uglify-to-browserify/1.0.2/package.tgz /home/coder/.npm/892e12bc--to-browserify-1-0-2-package-tgz.lock
858 verbose tar unpack /home/coder/.npm/yargs/3.10.0/package.tgz
859 silly lockFile 2901eac1-les-uglify-js-node-modules-yargs tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
860 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs /home/coder/.npm/2901eac1-les-uglify-js-node-modules-yargs.lock
861 silly lockFile 612ef5f3-der-npm-yargs-3-10-0-package-tgz tar:///home/coder/.npm/yargs/3.10.0/package.tgz
862 verbose lock tar:///home/coder/.npm/yargs/3.10.0/package.tgz /home/coder/.npm/612ef5f3-der-npm-yargs-3-10-0-package-tgz.lock
863 silly gunzTarPerm modes [ '755', '644' ]
864 silly gunzTarPerm modes [ '755', '644' ]
865 silly gunzTarPerm modes [ '755', '644' ]
866 silly gunzTarPerm modes [ '755', '644' ]
867 silly gunzTarPerm extractEntry package.json
868 silly gunzTarPerm extractEntry package.json
869 silly gunzTarPerm extractEntry package.json
870 silly gunzTarPerm extractEntry package.json
871 silly gunzTarPerm extractEntry .npmignore
872 silly gunzTarPerm extractEntry README.md
873 silly gunzTarPerm extractEntry README.md
874 silly gunzTarPerm extractEntry source-map.js
875 silly gunzTarPerm extractEntry README.md
876 silly gunzTarPerm extractEntry LICENSE
877 silly gunzTarPerm extractEntry index.js
878 silly gunzTarPerm extractEntry completion.sh.hbs
879 silly gunzTarPerm extractEntry lib/completion.js
880 silly gunzTarPerm extractEntry lib/parser.js
881 silly gunzTarPerm extractEntry lib/usage.js
882 silly gunzTarPerm extractEntry lib/validation.js
883 silly gunzTarPerm extractEntry README.md
884 silly gunzTarPerm extractEntry LICENSE
885 silly gunzTarPerm extractEntry component.json
886 silly gunzTarPerm extractEntry lib/async.js
887 silly gunzTarPerm extractEntry LICENSE
888 silly gunzTarPerm extractEntry index.js
889 silly gunzTarPerm extractEntry dist/source-map.debug.js
890 silly gunzTarPerm extractEntry dist/source-map.js
891 silly gunzTarPerm extractEntry .travis.yml
892 silly gunzTarPerm extractEntry test/index.js
893 silly gunzTarPerm extractEntry dist/source-map.min.js
894 silly gunzTarPerm extractEntry dist/source-map.min.js.map
895 silly lockFile 6e886263-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/uglify-to-browserify
896 silly lockFile 6e886263-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/uglify-to-browserify
897 silly lockFile 892e12bc--to-browserify-1-0-2-package-tgz tar:///home/coder/.npm/uglify-to-browserify/1.0.2/package.tgz
898 silly lockFile 892e12bc--to-browserify-1-0-2-package-tgz tar:///home/coder/.npm/uglify-to-browserify/1.0.2/package.tgz
899 silly gunzTarPerm extractEntry lib/array-set.js
900 info preinstall uglify-to-browserify@1.0.2
901 verbose readDependencies using package.json deps
902 verbose readDependencies using package.json deps
903 silly resolved []
904 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/uglify-to-browserify
905 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/uglify-to-browserify
906 verbose linkStuff [ true,
906 verbose linkStuff   '/usr/local/lib/node_modules',
906 verbose linkStuff   false,
906 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules' ]
907 info linkStuff uglify-to-browserify@1.0.2
908 verbose linkBins uglify-to-browserify@1.0.2
909 verbose linkMans uglify-to-browserify@1.0.2
910 verbose rebuildBundles uglify-to-browserify@1.0.2
911 info install uglify-to-browserify@1.0.2
912 info postinstall uglify-to-browserify@1.0.2
913 silly lockFile ad983bea-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
914 silly lockFile ad983bea-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
915 silly lockFile 01f75de2-der-npm-async-0-2-10-package-tgz tar:///home/coder/.npm/async/0.2.10/package.tgz
916 silly lockFile 01f75de2-der-npm-async-0-2-10-package-tgz tar:///home/coder/.npm/async/0.2.10/package.tgz
917 info preinstall async@0.2.10
918 verbose readDependencies using package.json deps
919 verbose readDependencies using package.json deps
920 silly resolved []
921 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
922 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/async
923 verbose linkStuff [ true,
923 verbose linkStuff   '/usr/local/lib/node_modules',
923 verbose linkStuff   false,
923 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules' ]
924 info linkStuff async@0.2.10
925 verbose linkBins async@0.2.10
926 verbose linkMans async@0.2.10
927 verbose rebuildBundles async@0.2.10
928 info install async@0.2.10
929 silly lockFile 2901eac1-les-uglify-js-node-modules-yargs tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
930 silly lockFile 2901eac1-les-uglify-js-node-modules-yargs tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
931 silly lockFile 612ef5f3-der-npm-yargs-3-10-0-package-tgz tar:///home/coder/.npm/yargs/3.10.0/package.tgz
932 silly lockFile 612ef5f3-der-npm-yargs-3-10-0-package-tgz tar:///home/coder/.npm/yargs/3.10.0/package.tgz
933 info postinstall async@0.2.10
934 info preinstall yargs@3.10.0
935 verbose readDependencies using package.json deps
936 verbose readDependencies using package.json deps
937 verbose cache add [ 'camelcase@^1.0.2', null ]
938 verbose cache add name=undefined spec="camelcase@^1.0.2" args=["camelcase@^1.0.2",null]
939 verbose parsed url { protocol: null,
939 verbose parsed url   slashes: null,
939 verbose parsed url   auth: null,
939 verbose parsed url   host: null,
939 verbose parsed url   port: null,
939 verbose parsed url   hostname: null,
939 verbose parsed url   hash: null,
939 verbose parsed url   search: null,
939 verbose parsed url   query: null,
939 verbose parsed url   pathname: 'camelcase@^1.0.2',
939 verbose parsed url   path: 'camelcase@^1.0.2',
939 verbose parsed url   href: 'camelcase@^1.0.2' }
940 verbose cache add name="camelcase" spec="^1.0.2" args=["camelcase","^1.0.2"]
941 verbose parsed url { protocol: null,
941 verbose parsed url   slashes: null,
941 verbose parsed url   auth: null,
941 verbose parsed url   host: null,
941 verbose parsed url   port: null,
941 verbose parsed url   hostname: null,
941 verbose parsed url   hash: null,
941 verbose parsed url   search: null,
941 verbose parsed url   query: null,
941 verbose parsed url   pathname: '^1.0.2',
941 verbose parsed url   path: '^1.0.2',
941 verbose parsed url   href: '^1.0.2' }
942 verbose addNamed [ 'camelcase', '^1.0.2' ]
943 verbose addNamed [ null, '>=1.0.2-0 <2.0.0-0' ]
944 silly lockFile 80aa6a97-camelcase-1-0-2 camelcase@^1.0.2
945 verbose lock camelcase@^1.0.2 /home/coder/.npm/80aa6a97-camelcase-1-0-2.lock
946 verbose cache add [ 'cliui@^2.1.0', null ]
947 verbose cache add name=undefined spec="cliui@^2.1.0" args=["cliui@^2.1.0",null]
948 verbose parsed url { protocol: null,
948 verbose parsed url   slashes: null,
948 verbose parsed url   auth: null,
948 verbose parsed url   host: null,
948 verbose parsed url   port: null,
948 verbose parsed url   hostname: null,
948 verbose parsed url   hash: null,
948 verbose parsed url   search: null,
948 verbose parsed url   query: null,
948 verbose parsed url   pathname: 'cliui@^2.1.0',
948 verbose parsed url   path: 'cliui@^2.1.0',
948 verbose parsed url   href: 'cliui@^2.1.0' }
949 verbose cache add name="cliui" spec="^2.1.0" args=["cliui","^2.1.0"]
950 verbose parsed url { protocol: null,
950 verbose parsed url   slashes: null,
950 verbose parsed url   auth: null,
950 verbose parsed url   host: null,
950 verbose parsed url   port: null,
950 verbose parsed url   hostname: null,
950 verbose parsed url   hash: null,
950 verbose parsed url   search: null,
950 verbose parsed url   query: null,
950 verbose parsed url   pathname: '^2.1.0',
950 verbose parsed url   path: '^2.1.0',
950 verbose parsed url   href: '^2.1.0' }
951 verbose addNamed [ 'cliui', '^2.1.0' ]
952 verbose addNamed [ null, '>=2.1.0-0 <3.0.0-0' ]
953 silly lockFile 31274be7-cliui-2-1-0 cliui@^2.1.0
954 verbose lock cliui@^2.1.0 /home/coder/.npm/31274be7-cliui-2-1-0.lock
955 verbose cache add [ 'decamelize@^1.0.0', null ]
956 verbose cache add name=undefined spec="decamelize@^1.0.0" args=["decamelize@^1.0.0",null]
957 verbose parsed url { protocol: null,
957 verbose parsed url   slashes: null,
957 verbose parsed url   auth: null,
957 verbose parsed url   host: null,
957 verbose parsed url   port: null,
957 verbose parsed url   hostname: null,
957 verbose parsed url   hash: null,
957 verbose parsed url   search: null,
957 verbose parsed url   query: null,
957 verbose parsed url   pathname: 'decamelize@^1.0.0',
957 verbose parsed url   path: 'decamelize@^1.0.0',
957 verbose parsed url   href: 'decamelize@^1.0.0' }
958 verbose cache add name="decamelize" spec="^1.0.0" args=["decamelize","^1.0.0"]
959 verbose parsed url { protocol: null,
959 verbose parsed url   slashes: null,
959 verbose parsed url   auth: null,
959 verbose parsed url   host: null,
959 verbose parsed url   port: null,
959 verbose parsed url   hostname: null,
959 verbose parsed url   hash: null,
959 verbose parsed url   search: null,
959 verbose parsed url   query: null,
959 verbose parsed url   pathname: '^1.0.0',
959 verbose parsed url   path: '^1.0.0',
959 verbose parsed url   href: '^1.0.0' }
960 verbose addNamed [ 'decamelize', '^1.0.0' ]
961 verbose addNamed [ null, '>=1.0.0-0 <2.0.0-0' ]
962 silly lockFile 659e6240-decamelize-1-0-0 decamelize@^1.0.0
963 verbose lock decamelize@^1.0.0 /home/coder/.npm/659e6240-decamelize-1-0-0.lock
964 silly addNameRange { name: 'camelcase',
964 silly addNameRange   range: '>=1.0.2-0 <2.0.0-0',
964 silly addNameRange   hasData: false }
965 silly addNameRange { name: 'cliui', range: '>=2.1.0-0 <3.0.0-0', hasData: false }
966 silly addNameRange { name: 'decamelize',
966 silly addNameRange   range: '>=1.0.0-0 <2.0.0-0',
966 silly addNameRange   hasData: false }
967 verbose cache add [ 'window-size@0.1.0', null ]
968 verbose cache add name=undefined spec="window-size@0.1.0" args=["window-size@0.1.0",null]
969 verbose parsed url { protocol: null,
969 verbose parsed url   slashes: null,
969 verbose parsed url   auth: null,
969 verbose parsed url   host: null,
969 verbose parsed url   port: null,
969 verbose parsed url   hostname: null,
969 verbose parsed url   hash: null,
969 verbose parsed url   search: null,
969 verbose parsed url   query: null,
969 verbose parsed url   pathname: 'window-size@0.1.0',
969 verbose parsed url   path: 'window-size@0.1.0',
969 verbose parsed url   href: 'window-size@0.1.0' }
970 verbose cache add name="window-size" spec="0.1.0" args=["window-size","0.1.0"]
971 verbose parsed url { protocol: null,
971 verbose parsed url   slashes: null,
971 verbose parsed url   auth: null,
971 verbose parsed url   host: null,
971 verbose parsed url   port: null,
971 verbose parsed url   hostname: null,
971 verbose parsed url   hash: null,
971 verbose parsed url   search: null,
971 verbose parsed url   query: null,
971 verbose parsed url   pathname: '0.1.0',
971 verbose parsed url   path: '0.1.0',
971 verbose parsed url   href: '0.1.0' }
972 verbose addNamed [ 'window-size', '0.1.0' ]
973 verbose addNamed [ '0.1.0', '0.1.0' ]
974 silly lockFile a0d49481-window-size-0-1-0 window-size@0.1.0
975 verbose lock window-size@0.1.0 /home/coder/.npm/a0d49481-window-size-0-1-0.lock
976 verbose url raw decamelize
977 verbose url resolving [ 'https://registry.npmjs.org/', './decamelize' ]
978 verbose url resolved https://registry.npmjs.org/decamelize
979 info trying registry request attempt 1 at 14:59:59
980 verbose etag "8QR0SL6R3INLDP1XM6B9R1CKD"
981 http GET https://registry.npmjs.org/decamelize
982 verbose url raw camelcase
983 verbose url resolving [ 'https://registry.npmjs.org/', './camelcase' ]
984 verbose url resolved https://registry.npmjs.org/camelcase
985 info trying registry request attempt 1 at 14:59:59
986 verbose etag "BINRO10P3TD68JIVVM7UXFBXN"
987 http GET https://registry.npmjs.org/camelcase
988 verbose url raw cliui
989 verbose url resolving [ 'https://registry.npmjs.org/', './cliui' ]
990 verbose url resolved https://registry.npmjs.org/cliui
991 info trying registry request attempt 1 at 14:59:59
992 verbose etag "3DECEACP755TKOYK3CFEYCYNO"
993 http GET https://registry.npmjs.org/cliui
994 verbose url raw window-size/0.1.0
995 verbose url resolving [ 'https://registry.npmjs.org/', './window-size/0.1.0' ]
996 verbose url resolved https://registry.npmjs.org/window-size/0.1.0
997 info trying registry request attempt 1 at 14:59:59
998 verbose etag "DUTWHLQ7GRH20165UV8WJGSNP"
999 http GET https://registry.npmjs.org/window-size/0.1.0
1000 silly gunzTarPerm extractEntry lib/base64-vlq.js
1001 silly gunzTarPerm extractEntry lib/base64.js
1002 silly gunzTarPerm extractEntry lib/binary-search.js
1003 silly gunzTarPerm extractEntry lib/mapping-list.js
1004 silly gunzTarPerm extractEntry lib/quick-sort.js
1005 silly gunzTarPerm extractEntry lib/source-map-consumer.js
1006 silly gunzTarPerm extractEntry lib/source-map-generator.js
1007 silly gunzTarPerm extractEntry lib/source-node.js
1008 silly gunzTarPerm extractEntry lib/util.js
1009 silly lockFile 3f94c749-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
1010 silly lockFile 3f94c749-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
1011 silly lockFile 2090737b-npm-source-map-0-5-6-package-tgz tar:///home/coder/.npm/source-map/0.5.6/package.tgz
1012 silly lockFile 2090737b-npm-source-map-0-5-6-package-tgz tar:///home/coder/.npm/source-map/0.5.6/package.tgz
1013 info preinstall source-map@0.5.6
1014 verbose readDependencies using package.json deps
1015 verbose readDependencies using package.json deps
1016 silly resolved []
1017 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
1018 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/source-map
1019 verbose linkStuff [ true,
1019 verbose linkStuff   '/usr/local/lib/node_modules',
1019 verbose linkStuff   false,
1019 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules' ]
1020 info linkStuff source-map@0.5.6
1021 verbose linkBins source-map@0.5.6
1022 verbose linkMans source-map@0.5.6
1023 verbose rebuildBundles source-map@0.5.6
1024 info install source-map@0.5.6
1025 info postinstall source-map@0.5.6
1026 http 304 https://registry.npmjs.org/camelcase
1027 silly registry.get cb [ 304,
1027 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:00 GMT',
1027 silly registry.get     via: '1.1 varnish',
1027 silly registry.get     'cache-control': 'max-age=300',
1027 silly registry.get     etag: '"BINRO10P3TD68JIVVM7UXFBXN"',
1027 silly registry.get     age: '64',
1027 silly registry.get     connection: 'keep-alive',
1027 silly registry.get     'x-served-by': 'cache-lhr6323-LHR',
1027 silly registry.get     'x-cache': 'HIT',
1027 silly registry.get     'x-cache-hits': '2',
1027 silly registry.get     'x-timer': 'S1466600400.102578,VS0,VE0',
1027 silly registry.get     vary: 'Accept-Encoding' } ]
1028 verbose etag camelcase from cache
1029 http 200 https://registry.npmjs.org/decamelize
1030 silly registry.get cb [ 200,
1030 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
1030 silly registry.get     etag: '"AAT63TCUW5VNB1WJ81O63MUR0"',
1030 silly registry.get     'content-type': 'application/json',
1030 silly registry.get     'cache-control': 'max-age=300',
1030 silly registry.get     'content-length': '8168',
1030 silly registry.get     'accept-ranges': 'bytes',
1030 silly registry.get     date: 'Wed, 22 Jun 2016 13:00:00 GMT',
1030 silly registry.get     via: '1.1 varnish',
1030 silly registry.get     age: '54',
1030 silly registry.get     connection: 'keep-alive',
1030 silly registry.get     'x-served-by': 'cache-lhr6327-LHR',
1030 silly registry.get     'x-cache': 'HIT',
1030 silly registry.get     'x-cache-hits': '1',
1030 silly registry.get     'x-timer': 'S1466600400.102757,VS0,VE0',
1030 silly registry.get     vary: 'Accept-Encoding' } ]
1031 http 304 https://registry.npmjs.org/cliui
1032 silly registry.get cb [ 304,
1032 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:00 GMT',
1032 silly registry.get     via: '1.1 varnish',
1032 silly registry.get     'cache-control': 'max-age=300',
1032 silly registry.get     etag: '"3DECEACP755TKOYK3CFEYCYNO"',
1032 silly registry.get     age: '107',
1032 silly registry.get     connection: 'keep-alive',
1032 silly registry.get     'x-served-by': 'cache-lhr6324-LHR',
1032 silly registry.get     'x-cache': 'HIT',
1032 silly registry.get     'x-cache-hits': '2',
1032 silly registry.get     'x-timer': 'S1466600400.103156,VS0,VE0',
1032 silly registry.get     vary: 'Accept-Encoding' } ]
1033 verbose etag cliui from cache
1034 silly addNameRange number 2 { name: 'camelcase', range: '>=1.0.2-0 <2.0.0-0', hasData: true }
1035 silly addNameRange versions [ 'camelcase',
1035 silly addNameRange   [ '1.0.0',
1035 silly addNameRange     '1.0.1',
1035 silly addNameRange     '1.0.2',
1035 silly addNameRange     '1.1.0',
1035 silly addNameRange     '1.2.0',
1035 silly addNameRange     '1.2.1',
1035 silly addNameRange     '2.0.0',
1035 silly addNameRange     '2.0.1',
1035 silly addNameRange     '2.1.0',
1035 silly addNameRange     '2.1.1',
1035 silly addNameRange     '3.0.0' ] ]
1036 verbose addNamed [ 'camelcase', '1.2.1' ]
1037 verbose addNamed [ '1.2.1', '1.2.1' ]
1038 silly lockFile b0f36886-camelcase-1-2-1 camelcase@1.2.1
1039 verbose lock camelcase@1.2.1 /home/coder/.npm/b0f36886-camelcase-1-2-1.lock
1040 silly addNameRange number 2 { name: 'decamelize',
1040 silly addNameRange   range: '>=1.0.0-0 <2.0.0-0',
1040 silly addNameRange   hasData: true }
1041 silly addNameRange versions [ 'decamelize',
1041 silly addNameRange   [ '1.0.0', '1.1.0', '1.1.1', '1.1.2', '1.2.0' ] ]
1042 verbose addNamed [ 'decamelize', '1.2.0' ]
1043 verbose addNamed [ '1.2.0', '1.2.0' ]
1044 silly lockFile 355569fb-decamelize-1-2-0 decamelize@1.2.0
1045 verbose lock decamelize@1.2.0 /home/coder/.npm/355569fb-decamelize-1-2-0.lock
1046 silly addNameRange number 2 { name: 'cliui', range: '>=2.1.0-0 <3.0.0-0', hasData: true }
1047 silly addNameRange versions [ 'cliui',
1047 silly addNameRange   [ '1.0.0',
1047 silly addNameRange     '1.1.0',
1047 silly addNameRange     '1.3.0',
1047 silly addNameRange     '1.4.0',
1047 silly addNameRange     '2.0.0',
1047 silly addNameRange     '2.1.0',
1047 silly addNameRange     '3.0.0',
1047 silly addNameRange     '3.0.1',
1047 silly addNameRange     '3.0.2',
1047 silly addNameRange     '3.0.3',
1047 silly addNameRange     '3.1.0',
1047 silly addNameRange     '3.1.1',
1047 silly addNameRange     '3.1.2',
1047 silly addNameRange     '3.2.0' ] ]
1048 verbose addNamed [ 'cliui', '2.1.0' ]
1049 verbose addNamed [ '2.1.0', '2.1.0' ]
1050 silly lockFile e6b80c4d-cliui-2-1-0 cliui@2.1.0
1051 verbose lock cliui@2.1.0 /home/coder/.npm/e6b80c4d-cliui-2-1-0.lock
1052 http 304 https://registry.npmjs.org/window-size/0.1.0
1053 silly registry.get cb [ 304,
1053 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:00 GMT',
1053 silly registry.get     via: '1.1 varnish',
1053 silly registry.get     'cache-control': 'max-age=300',
1053 silly registry.get     etag: '"DUTWHLQ7GRH20165UV8WJGSNP"',
1053 silly registry.get     age: '299',
1053 silly registry.get     connection: 'keep-alive',
1053 silly registry.get     'x-served-by': 'cache-lhr6334-LHR',
1053 silly registry.get     'x-cache': 'HIT',
1053 silly registry.get     'x-cache-hits': '1',
1053 silly registry.get     'x-timer': 'S1466600400.115080,VS0,VE0',
1053 silly registry.get     vary: 'Accept-Encoding' } ]
1054 verbose etag window-size/0.1.0 from cache
1055 silly lockFile 355569fb-decamelize-1-2-0 decamelize@1.2.0
1056 silly lockFile 355569fb-decamelize-1-2-0 decamelize@1.2.0
1057 silly lockFile b0f36886-camelcase-1-2-1 camelcase@1.2.1
1058 silly lockFile b0f36886-camelcase-1-2-1 camelcase@1.2.1
1059 silly lockFile 659e6240-decamelize-1-0-0 decamelize@^1.0.0
1060 silly lockFile 659e6240-decamelize-1-0-0 decamelize@^1.0.0
1061 silly lockFile 80aa6a97-camelcase-1-0-2 camelcase@^1.0.2
1062 silly lockFile 80aa6a97-camelcase-1-0-2 camelcase@^1.0.2
1063 silly lockFile e6b80c4d-cliui-2-1-0 cliui@2.1.0
1064 silly lockFile e6b80c4d-cliui-2-1-0 cliui@2.1.0
1065 silly lockFile a0d49481-window-size-0-1-0 window-size@0.1.0
1066 silly lockFile a0d49481-window-size-0-1-0 window-size@0.1.0
1067 silly lockFile 31274be7-cliui-2-1-0 cliui@^2.1.0
1068 silly lockFile 31274be7-cliui-2-1-0 cliui@^2.1.0
1069 silly resolved [ { name: 'decamelize',
1069 silly resolved     version: '1.2.0',
1069 silly resolved     description: 'Convert a camelized string into a lowercased one with a custom separator: unicornRainbow → unicorn_rainbow',
1069 silly resolved     license: 'MIT',
1069 silly resolved     repository: { type: 'git', url: 'git://github.com/sindresorhus/decamelize' },
1069 silly resolved     author:
1069 silly resolved      { name: 'Sindre Sorhus',
1069 silly resolved        email: 'sindresorhus@gmail.com',
1069 silly resolved        url: 'sindresorhus.com' },
1069 silly resolved     engines: { node: '>=0.10.0' },
1069 silly resolved     scripts: { test: 'xo && ava' },
1069 silly resolved     files: [ 'index.js' ],
1069 silly resolved     keywords:
1069 silly resolved      [ 'decamelize',
1069 silly resolved        'decamelcase',
1069 silly resolved        'camelcase',
1069 silly resolved        'lowercase',
1069 silly resolved        'case',
1069 silly resolved        'dash',
1069 silly resolved        'hyphen',
1069 silly resolved        'string',
1069 silly resolved        'str',
1069 silly resolved        'text',
1069 silly resolved        'convert' ],
1069 silly resolved     devDependencies: { ava: '*', xo: '*' },
1069 silly resolved     readme: '# decamelize [![Build Status](https://travis-ci.org/sindresorhus/decamelize.svg?branch=master)](https://travis-ci.org/sindresorhus/decamelize)\n\n> Convert a camelized string into a lowercased one with a custom separator<br>\n> Example: `unicornRainbow` → `unicorn_rainbow`\n\n\n## Install\n\n```\n$ npm install --save decamelize\n```\n\n\n## Usage\n\n```js\nconst decamelize = require(\'decamelize\');\n\ndecamelize(\'unicornRainbow\');\n//=> \'unicorn_rainbow\'\n\ndecamelize(\'unicornRainbow\', \'-\');\n//=> \'unicorn-rainbow\'\n```\n\n\n## API\n\n### decamelize(input, [separator])\n\n#### input\n\nType: `string`\n\n#### separator\n\nType: `string`<br>\nDefault: `_`\n\n\n## Related\n\nSee [`camelcase`](https://github.com/sindresorhus/camelcase) for the inverse.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n',
1069 silly resolved     readmeFilename: 'readme.md',
1069 silly resolved     bugs: { url: 'https://github.com/sindresorhus/decamelize/issues' },
1069 silly resolved     _id: 'decamelize@1.2.0',
1069 silly resolved     _from: 'decamelize@^1.0.0' },
1069 silly resolved   { name: 'camelcase',
1069 silly resolved     version: '1.2.1',
1069 silly resolved     description: 'Convert a dash/dot/underscore/space separated string to camelCase: foo-bar → fooBar',
1069 silly resolved     license: 'MIT',
1069 silly resolved     repository: { type: 'git', url: 'git://github.com/sindresorhus/camelcase' },
1069 silly resolved     author:
1069 silly resolved      { name: 'Sindre Sorhus',
1069 silly resolved        email: 'sindresorhus@gmail.com',
1069 silly resolved        url: 'http://sindresorhus.com' },
1069 silly resolved     engines: { node: '>=0.10.0' },
1069 silly resolved     scripts: { test: 'node test.js' },
1069 silly resolved     files: [ 'index.js' ],
1069 silly resolved     keywords:
1069 silly resolved      [ 'camelcase',
1069 silly resolved        'camel-case',
1069 silly resolved        'camel',
1069 silly resolved        'case',
1069 silly resolved        'dash',
1069 silly resolved        'hyphen',
1069 silly resolved        'dot',
1069 silly resolved        'underscore',
1069 silly resolved        'separator',
1069 silly resolved        'string',
1069 silly resolved        'text',
1069 silly resolved        'convert' ],
1069 silly resolved     devDependencies: { ava: '0.0.4' },
1069 silly resolved     readme: '# camelcase [![Build Status](https://travis-ci.org/sindresorhus/camelcase.svg?branch=master)](https://travis-ci.org/sindresorhus/camelcase)\n\n> Convert a dash/dot/underscore/space separated string to camelCase: `foo-bar` → `fooBar`\n\n\n## Install\n\n```sh\n$ npm install --save camelcase\n```\n\n\n## Usage\n\n```js\nvar camelCase = require(\'camelcase\');\n\ncamelCase(\'foo-bar\');\n//=> fooBar\n\ncamelCase(\'foo_bar\');\n//=> fooBar\n\ncamelCase(\'Foo-Bar\');\n//=> fooBar\n\ncamelCase(\'--foo.bar\');\n//=> fooBar\n\ncamelCase(\'__foo__bar__\');\n//=> fooBar\n\ncamelCase(\'foo bar\');\n//=> fooBar\n\nconsole.log(process.argv[3]);\n//=> --foo-bar\ncamelCase(process.argv[3]);\n//=> fooBar\n\ncamelCase(\'foo\', \'bar\');\n//=> fooBar\n\ncamelCase(\'__foo__\', \'--bar\');\n//=> fooBar\n```\n\n\n## Related\n\nSee [`decamelize`](https://github.com/sindresorhus/decamelize) for the inverse.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n',
1069 silly resolved     readmeFilename: 'readme.md',
1069 silly resolved     bugs: { url: 'https://github.com/sindresorhus/camelcase/issues' },
1069 silly resolved     _id: 'camelcase@1.2.1',
1069 silly resolved     _from: 'camelcase@^1.0.2' },
1069 silly resolved   { name: 'window-size',
1069 silly resolved     description: 'Reliable way to to get the height and width of the terminal/console in a node.js environment.',
1069 silly resolved     version: '0.1.0',
1069 silly resolved     homepage: 'https://github.com/jonschlinkert/window-size',
1069 silly resolved     author:
1069 silly resolved      { name: 'Jon Schlinkert',
1069 silly resolved        url: 'https://github.com/jonschlinkert' },
1069 silly resolved     repository:
1069 silly resolved      { type: 'git',
1069 silly resolved        url: 'https://github.com/jonschlinkert/window-size.git' },
1069 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/window-size/issues' },
1069 silly resolved     licenses: [ [Object] ],
1069 silly resolved     main: 'index.js',
1069 silly resolved     engines: { node: '>= 0.8.0' },
1069 silly resolved     keywords: [ 'window', 'console', 'terminal', 'tty' ],
1069 silly resolved     readme: '# window-size [![NPM version](https://badge.fury.io/js/window-size.png)](http://badge.fury.io/js/window-size)\r\n\r\n> Reliable way to to get the height and width of the terminal/console in a node.js environment.\r\n\r\n## Install\r\n\r\n### [npm](npmjs.org)\r\n\r\n```bash\r\nnpm i window-size --save\r\n```\r\n\r\n```javascript\r\nvar size = require(\'window-size\');\r\nsize.height; // "80" (rows)\r\nsize.width; // "25" (columns)\r\n```\r\n\r\n## Author\r\n\r\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\r\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\r\n\r\n## License\r\nCopyright (c) 2014 Jon Schlinkert\r\nLicensed under the MIT license.',
1069 silly resolved     readmeFilename: 'README.md',
1069 silly resolved     _id: 'window-size@0.1.0',
1069 silly resolved     _from: 'window-size@0.1.0' },
1069 silly resolved   { name: 'cliui',
1069 silly resolved     version: '2.1.0',
1069 silly resolved     description: 'easily create complex multi-column command-line-interfaces',
1069 silly resolved     main: 'index.js',
1069 silly resolved     scripts: { test: 'standard && mocha --check-leaks --ui exports --require patched-blanket -R mocoverage' },
1069 silly resolved     repository: { type: 'git', url: 'http://github.com/bcoe/cliui.git' },
1069 silly resolved     config: { blanket: [Object] },
1069 silly resolved     standard: { ignore: [Object], globals: [Object] },
1069 silly resolved     keywords:
1069 silly resolved      [ 'cli',
1069 silly resolved        'command-line',
1069 silly resolved        'layout',
1069 silly resolved        'design',
1069 silly resolved        'console',
1069 silly resolved        'wrap',
1069 silly resolved        'table' ],
1069 silly resolved     author: { name: 'Ben Coe', email: 'ben@npmjs.com' },
1069 silly resolved     license: 'ISC',
1069 silly resolved     dependencies:
1069 silly resolved      { 'center-align': '^0.1.1',
1069 silly resolved        'right-align': '^0.1.1',
1069 silly resolved        wordwrap: '0.0.2' },
1069 silly resolved     devDependencies:
1069 silly resolved      { blanket: '^1.1.6',
1069 silly resolved        chai: '^2.2.0',
1069 silly resolved        coveralls: '^2.11.2',
1069 silly resolved        mocha: '^2.2.4',
1069 silly resolved        'mocha-lcov-reporter': '0.0.2',
1069 silly resolved        mocoverage: '^1.0.0',
1069 silly resolved        'patched-blanket': '^1.0.1',
1069 silly resolved        standard: '^3.6.1' },
1069 silly resolved     readme: '# cliui\n\n[![Build Status](https://travis-ci.org/bcoe/cliui.png)](https://travis-ci.org/bcoe/cliui)\n[![Coverage Status](https://coveralls.io/repos/bcoe/cliui/badge.svg?branch=)](https://coveralls.io/r/bcoe/cliui?branch=)\n[![NPM version](https://img.shields.io/npm/v/cliui.svg)](https://www.npmjs.com/package/cliui)\n\neasily create complex multi-column command-line-interfaces.\n\n## Example\n\n```js\nvar ui = require(\'cliui\')({\n  width: 80\n})\n\nui.div(\'Usage: $0 [command] [options]\')\n\nui.div({\n  text: \'Options:\',\n  padding: [2, 0, 2, 0]\n})\n\nui.div(\n  {\n    text: "-f, --file",\n    width: 40,\n    padding: [0, 4, 0, 4]\n  },\n  {\n    text: "the file to load",\n    width: 25\n  },\n  {\n    text: "[required]",\n    align: \'right\'\n  }\n)\n\nconsole.log(ui.toString())\n```\n\n## Layout DSL\n\ncliui exposes a simple layout DSL:\n\nIf you create a single `ui.row`, passing a string rather than an\nobject:\n\n* `\\n`: characters will be interpreted as new rows.\n* `\\t`: characters will be interpreted as new columns.\n* ` `: characters will be interpreted as padding.\n\n**as an example...**\n\n```js\nvar ui = require(\'./\')({\n  width: 60\n})\n\nui.div(\n  \'Usage: node ./bin/foo.js\\n\' +\n  \'  <regex>\\t  provide a regex\\n\' +\n  \'  <glob>\\t  provide a glob\\t [required]\'\n)\n\nconsole.log(ui.toString())\n```\n\n**will output:**\n\n```shell\nUsage: node ./bin/foo.js\n  <regex>  provide a regex\n  <glob>   provide a glob          [required]\n```\n\n## Methods\n\n```js\ncliui = require(\'cliui\')\n```\n\n### cliui({width: integer})\n\nSpecify the maximum width of the UI being generated.\n\n### cliui({wrap: boolean})\n\nEnable or disable the wrapping of text in a column.\n\n### cliui.div(column, column, column)\n\nCreate a row with any number of columns, a column\ncan either be a string, or an object with the following\noptions:\n\n* **width:** the width of a column.\n* **align:** alignment, `right` or `center`.\n* **padding:** `[top, right, bottom, left]`.\n\n### cliui.span(column, column, column)\n\nSimilar to `div`, except the next row will be appended without\na new line being created.\n',
1069 silly resolved     readmeFilename: 'README.md',
1069 silly resolved     bugs: { url: 'https://github.com/bcoe/cliui/issues' },
1069 silly resolved     _id: 'cliui@2.1.0',
1069 silly resolved     _from: 'cliui@^2.1.0' } ]
1070 info install decamelize@1.2.0 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
1071 info install camelcase@1.2.1 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
1072 info install window-size@0.1.0 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
1073 info install cliui@2.1.0 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
1074 info installOne decamelize@1.2.0
1075 info installOne camelcase@1.2.1
1076 info installOne window-size@0.1.0
1077 info installOne cliui@2.1.0
1078 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/decamelize unbuild
1079 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/camelcase unbuild
1080 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/window-size unbuild
1081 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui unbuild
1082 verbose tar unpack /home/coder/.npm/decamelize/1.2.0/package.tgz
1083 silly lockFile 53eff144-es-yargs-node-modules-decamelize tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/decamelize
1084 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/decamelize /home/coder/.npm/53eff144-es-yargs-node-modules-decamelize.lock
1085 silly lockFile 6bad175c-npm-decamelize-1-2-0-package-tgz tar:///home/coder/.npm/decamelize/1.2.0/package.tgz
1086 verbose lock tar:///home/coder/.npm/decamelize/1.2.0/package.tgz /home/coder/.npm/6bad175c-npm-decamelize-1-2-0-package-tgz.lock
1087 verbose tar unpack /home/coder/.npm/camelcase/1.2.1/package.tgz
1088 silly lockFile e6d7d3e8-les-yargs-node-modules-camelcase tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/camelcase
1089 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/camelcase /home/coder/.npm/e6d7d3e8-les-yargs-node-modules-camelcase.lock
1090 silly lockFile 6dfaee3d--npm-camelcase-1-2-1-package-tgz tar:///home/coder/.npm/camelcase/1.2.1/package.tgz
1091 verbose lock tar:///home/coder/.npm/camelcase/1.2.1/package.tgz /home/coder/.npm/6dfaee3d--npm-camelcase-1-2-1-package-tgz.lock
1092 verbose tar unpack /home/coder/.npm/window-size/0.1.0/package.tgz
1093 silly lockFile f1a622eb-s-yargs-node-modules-window-size tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/window-size
1094 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/window-size /home/coder/.npm/f1a622eb-s-yargs-node-modules-window-size.lock
1095 silly lockFile 770ec2c0-pm-window-size-0-1-0-package-tgz tar:///home/coder/.npm/window-size/0.1.0/package.tgz
1096 verbose lock tar:///home/coder/.npm/window-size/0.1.0/package.tgz /home/coder/.npm/770ec2c0-pm-window-size-0-1-0-package-tgz.lock
1097 verbose tar unpack /home/coder/.npm/cliui/2.1.0/package.tgz
1098 silly lockFile 6eaecc9d-modules-yargs-node-modules-cliui tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui
1099 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui /home/coder/.npm/6eaecc9d-modules-yargs-node-modules-cliui.lock
1100 silly lockFile 88626faa-oder-npm-cliui-2-1-0-package-tgz tar:///home/coder/.npm/cliui/2.1.0/package.tgz
1101 verbose lock tar:///home/coder/.npm/cliui/2.1.0/package.tgz /home/coder/.npm/88626faa-oder-npm-cliui-2-1-0-package-tgz.lock
1102 silly gunzTarPerm modes [ '755', '644' ]
1103 silly gunzTarPerm modes [ '755', '644' ]
1104 silly gunzTarPerm modes [ '755', '644' ]
1105 silly gunzTarPerm modes [ '755', '644' ]
1106 silly gunzTarPerm extractEntry package.json
1107 silly gunzTarPerm extractEntry package.json
1108 silly gunzTarPerm extractEntry index.js
1109 silly gunzTarPerm extractEntry readme.md
1110 silly gunzTarPerm extractEntry .npmignore
1111 silly gunzTarPerm extractEntry README.md
1112 silly gunzTarPerm extractEntry index.js
1113 silly gunzTarPerm extractEntry .coveralls.yml
1114 silly gunzTarPerm extractEntry .travis.yml
1115 silly gunzTarPerm extractEntry LICENSE.txt
1116 silly gunzTarPerm extractEntry test/cliui.js
1117 silly lockFile e6d7d3e8-les-yargs-node-modules-camelcase tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/camelcase
1118 silly lockFile e6d7d3e8-les-yargs-node-modules-camelcase tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/camelcase
1119 silly lockFile 6dfaee3d--npm-camelcase-1-2-1-package-tgz tar:///home/coder/.npm/camelcase/1.2.1/package.tgz
1120 silly lockFile 6dfaee3d--npm-camelcase-1-2-1-package-tgz tar:///home/coder/.npm/camelcase/1.2.1/package.tgz
1121 info preinstall camelcase@1.2.1
1122 verbose readDependencies using package.json deps
1123 verbose readDependencies using package.json deps
1124 silly resolved []
1125 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/camelcase
1126 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/camelcase
1127 verbose linkStuff [ true,
1127 verbose linkStuff   '/usr/local/lib/node_modules',
1127 verbose linkStuff   false,
1127 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules' ]
1128 info linkStuff camelcase@1.2.1
1129 verbose linkBins camelcase@1.2.1
1130 verbose linkMans camelcase@1.2.1
1131 verbose rebuildBundles camelcase@1.2.1
1132 info install camelcase@1.2.1
1133 info postinstall camelcase@1.2.1
1134 silly gunzTarPerm extractEntry package.json
1135 silly lockFile 6eaecc9d-modules-yargs-node-modules-cliui tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui
1136 silly lockFile 6eaecc9d-modules-yargs-node-modules-cliui tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui
1137 silly lockFile 88626faa-oder-npm-cliui-2-1-0-package-tgz tar:///home/coder/.npm/cliui/2.1.0/package.tgz
1138 silly lockFile 88626faa-oder-npm-cliui-2-1-0-package-tgz tar:///home/coder/.npm/cliui/2.1.0/package.tgz
1139 silly gunzTarPerm extractEntry README.md
1140 silly gunzTarPerm extractEntry index.js
1141 info preinstall cliui@2.1.0
1142 verbose readDependencies using package.json deps
1143 verbose readDependencies using package.json deps
1144 silly gunzTarPerm extractEntry LICENSE-MIT
1145 verbose cache add [ 'center-align@^0.1.1', null ]
1146 verbose cache add name=undefined spec="center-align@^0.1.1" args=["center-align@^0.1.1",null]
1147 verbose parsed url { protocol: null,
1147 verbose parsed url   slashes: null,
1147 verbose parsed url   auth: null,
1147 verbose parsed url   host: null,
1147 verbose parsed url   port: null,
1147 verbose parsed url   hostname: null,
1147 verbose parsed url   hash: null,
1147 verbose parsed url   search: null,
1147 verbose parsed url   query: null,
1147 verbose parsed url   pathname: 'center-align@^0.1.1',
1147 verbose parsed url   path: 'center-align@^0.1.1',
1147 verbose parsed url   href: 'center-align@^0.1.1' }
1148 verbose cache add name="center-align" spec="^0.1.1" args=["center-align","^0.1.1"]
1149 verbose parsed url { protocol: null,
1149 verbose parsed url   slashes: null,
1149 verbose parsed url   auth: null,
1149 verbose parsed url   host: null,
1149 verbose parsed url   port: null,
1149 verbose parsed url   hostname: null,
1149 verbose parsed url   hash: null,
1149 verbose parsed url   search: null,
1149 verbose parsed url   query: null,
1149 verbose parsed url   pathname: '^0.1.1',
1149 verbose parsed url   path: '^0.1.1',
1149 verbose parsed url   href: '^0.1.1' }
1150 verbose addNamed [ 'center-align', '^0.1.1' ]
1151 verbose addNamed [ null, '>=0.1.1-0 <0.2.0-0' ]
1152 silly lockFile 32564c8f-center-align-0-1-1 center-align@^0.1.1
1153 verbose lock center-align@^0.1.1 /home/coder/.npm/32564c8f-center-align-0-1-1.lock
1154 verbose cache add [ 'right-align@^0.1.1', null ]
1155 verbose cache add name=undefined spec="right-align@^0.1.1" args=["right-align@^0.1.1",null]
1156 verbose parsed url { protocol: null,
1156 verbose parsed url   slashes: null,
1156 verbose parsed url   auth: null,
1156 verbose parsed url   host: null,
1156 verbose parsed url   port: null,
1156 verbose parsed url   hostname: null,
1156 verbose parsed url   hash: null,
1156 verbose parsed url   search: null,
1156 verbose parsed url   query: null,
1156 verbose parsed url   pathname: 'right-align@^0.1.1',
1156 verbose parsed url   path: 'right-align@^0.1.1',
1156 verbose parsed url   href: 'right-align@^0.1.1' }
1157 verbose cache add name="right-align" spec="^0.1.1" args=["right-align","^0.1.1"]
1158 verbose parsed url { protocol: null,
1158 verbose parsed url   slashes: null,
1158 verbose parsed url   auth: null,
1158 verbose parsed url   host: null,
1158 verbose parsed url   port: null,
1158 verbose parsed url   hostname: null,
1158 verbose parsed url   hash: null,
1158 verbose parsed url   search: null,
1158 verbose parsed url   query: null,
1158 verbose parsed url   pathname: '^0.1.1',
1158 verbose parsed url   path: '^0.1.1',
1158 verbose parsed url   href: '^0.1.1' }
1159 verbose addNamed [ 'right-align', '^0.1.1' ]
1160 verbose addNamed [ null, '>=0.1.1-0 <0.2.0-0' ]
1161 silly lockFile 2e19d086-right-align-0-1-1 right-align@^0.1.1
1162 verbose lock right-align@^0.1.1 /home/coder/.npm/2e19d086-right-align-0-1-1.lock
1163 verbose cache add [ 'wordwrap@0.0.2', null ]
1164 verbose cache add name=undefined spec="wordwrap@0.0.2" args=["wordwrap@0.0.2",null]
1165 verbose parsed url { protocol: null,
1165 verbose parsed url   slashes: null,
1165 verbose parsed url   auth: null,
1165 verbose parsed url   host: null,
1165 verbose parsed url   port: null,
1165 verbose parsed url   hostname: null,
1165 verbose parsed url   hash: null,
1165 verbose parsed url   search: null,
1165 verbose parsed url   query: null,
1165 verbose parsed url   pathname: 'wordwrap@0.0.2',
1165 verbose parsed url   path: 'wordwrap@0.0.2',
1165 verbose parsed url   href: 'wordwrap@0.0.2' }
1166 verbose cache add name="wordwrap" spec="0.0.2" args=["wordwrap","0.0.2"]
1167 verbose parsed url { protocol: null,
1167 verbose parsed url   slashes: null,
1167 verbose parsed url   auth: null,
1167 verbose parsed url   host: null,
1167 verbose parsed url   port: null,
1167 verbose parsed url   hostname: null,
1167 verbose parsed url   hash: null,
1167 verbose parsed url   search: null,
1167 verbose parsed url   query: null,
1167 verbose parsed url   pathname: '0.0.2',
1167 verbose parsed url   path: '0.0.2',
1167 verbose parsed url   href: '0.0.2' }
1168 verbose addNamed [ 'wordwrap', '0.0.2' ]
1169 verbose addNamed [ '0.0.2', '0.0.2' ]
1170 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1171 verbose lock wordwrap@0.0.2 /home/coder/.npm/24a694c8-wordwrap-0-0-2.lock
1172 silly addNameRange { name: 'center-align',
1172 silly addNameRange   range: '>=0.1.1-0 <0.2.0-0',
1172 silly addNameRange   hasData: false }
1173 silly addNameRange { name: 'right-align',
1173 silly addNameRange   range: '>=0.1.1-0 <0.2.0-0',
1173 silly addNameRange   hasData: false }
1174 silly gunzTarPerm extractEntry package.json
1175 silly gunzTarPerm extractEntry index.js
1176 silly gunzTarPerm extractEntry readme.md
1177 silly lockFile f1a622eb-s-yargs-node-modules-window-size tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/window-size
1178 silly lockFile f1a622eb-s-yargs-node-modules-window-size tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/window-size
1179 silly lockFile 770ec2c0-pm-window-size-0-1-0-package-tgz tar:///home/coder/.npm/window-size/0.1.0/package.tgz
1180 silly lockFile 770ec2c0-pm-window-size-0-1-0-package-tgz tar:///home/coder/.npm/window-size/0.1.0/package.tgz
1181 info preinstall window-size@0.1.0
1182 verbose readDependencies using package.json deps
1183 verbose readDependencies using package.json deps
1184 silly resolved []
1185 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/window-size
1186 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/window-size
1187 verbose linkStuff [ true,
1187 verbose linkStuff   '/usr/local/lib/node_modules',
1187 verbose linkStuff   false,
1187 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules' ]
1188 info linkStuff window-size@0.1.0
1189 verbose linkBins window-size@0.1.0
1190 verbose linkMans window-size@0.1.0
1191 verbose rebuildBundles window-size@0.1.0
1192 info install window-size@0.1.0
1193 info postinstall window-size@0.1.0
1194 silly lockFile 53eff144-es-yargs-node-modules-decamelize tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/decamelize
1195 silly lockFile 53eff144-es-yargs-node-modules-decamelize tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/decamelize
1196 silly lockFile 6bad175c-npm-decamelize-1-2-0-package-tgz tar:///home/coder/.npm/decamelize/1.2.0/package.tgz
1197 silly lockFile 6bad175c-npm-decamelize-1-2-0-package-tgz tar:///home/coder/.npm/decamelize/1.2.0/package.tgz
1198 info preinstall decamelize@1.2.0
1199 verbose readDependencies using package.json deps
1200 verbose readDependencies using package.json deps
1201 silly resolved []
1202 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/decamelize
1203 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/decamelize
1204 verbose linkStuff [ true,
1204 verbose linkStuff   '/usr/local/lib/node_modules',
1204 verbose linkStuff   false,
1204 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules' ]
1205 info linkStuff decamelize@1.2.0
1206 verbose linkBins decamelize@1.2.0
1207 verbose linkMans decamelize@1.2.0
1208 verbose rebuildBundles decamelize@1.2.0
1209 info install decamelize@1.2.0
1210 info postinstall decamelize@1.2.0
1211 verbose url raw wordwrap/0.0.2
1212 verbose url resolving [ 'https://registry.npmjs.org/', './wordwrap/0.0.2' ]
1213 verbose url resolved https://registry.npmjs.org/wordwrap/0.0.2
1214 info trying registry request attempt 1 at 15:00:00
1215 verbose etag "18ZMVFL4XQSNT8JYI76ECE9BV"
1216 http GET https://registry.npmjs.org/wordwrap/0.0.2
1217 verbose url raw center-align
1218 verbose url resolving [ 'https://registry.npmjs.org/', './center-align' ]
1219 verbose url resolved https://registry.npmjs.org/center-align
1220 info trying registry request attempt 1 at 15:00:00
1221 verbose etag "89Q3E4NN2XOUT6RXCOYZYGJPN"
1222 http GET https://registry.npmjs.org/center-align
1223 verbose url raw right-align
1224 verbose url resolving [ 'https://registry.npmjs.org/', './right-align' ]
1225 verbose url resolved https://registry.npmjs.org/right-align
1226 info trying registry request attempt 1 at 15:00:00
1227 verbose etag "BUK8YIBQX3H9UO64I3UYZP9HJ"
1228 http GET https://registry.npmjs.org/right-align
1229 http 304 https://registry.npmjs.org/wordwrap/0.0.2
1230 silly registry.get cb [ 304,
1230 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:00 GMT',
1230 silly registry.get     via: '1.1 varnish',
1230 silly registry.get     'cache-control': 'max-age=300',
1230 silly registry.get     etag: '"18ZMVFL4XQSNT8JYI76ECE9BV"',
1230 silly registry.get     age: '125',
1230 silly registry.get     connection: 'keep-alive',
1230 silly registry.get     'x-served-by': 'cache-lhr6322-LHR',
1230 silly registry.get     'x-cache': 'HIT',
1230 silly registry.get     'x-cache-hits': '2',
1230 silly registry.get     'x-timer': 'S1466600400.907189,VS0,VE0',
1230 silly registry.get     vary: 'Accept-Encoding' } ]
1231 verbose etag wordwrap/0.0.2 from cache
1232 http 304 https://registry.npmjs.org/right-align
1233 silly registry.get cb [ 304,
1233 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:00 GMT',
1233 silly registry.get     via: '1.1 varnish',
1233 silly registry.get     'cache-control': 'max-age=300',
1233 silly registry.get     etag: '"BUK8YIBQX3H9UO64I3UYZP9HJ"',
1233 silly registry.get     age: '158',
1233 silly registry.get     connection: 'keep-alive',
1233 silly registry.get     'x-served-by': 'cache-lhr6325-LHR',
1233 silly registry.get     'x-cache': 'HIT',
1233 silly registry.get     'x-cache-hits': '1',
1233 silly registry.get     'x-timer': 'S1466600400.908319,VS0,VE0',
1233 silly registry.get     vary: 'Accept-Encoding' } ]
1234 verbose etag right-align from cache
1235 http 304 https://registry.npmjs.org/center-align
1236 silly registry.get cb [ 304,
1236 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:00 GMT',
1236 silly registry.get     via: '1.1 varnish',
1236 silly registry.get     'cache-control': 'max-age=300',
1236 silly registry.get     etag: '"89Q3E4NN2XOUT6RXCOYZYGJPN"',
1236 silly registry.get     age: '56',
1236 silly registry.get     connection: 'keep-alive',
1236 silly registry.get     'x-served-by': 'cache-lhr6331-LHR',
1236 silly registry.get     'x-cache': 'HIT',
1236 silly registry.get     'x-cache-hits': '1',
1236 silly registry.get     'x-timer': 'S1466600400.910164,VS0,VE0',
1236 silly registry.get     vary: 'Accept-Encoding' } ]
1237 verbose etag center-align from cache
1238 silly addNameRange number 2 { name: 'right-align',
1238 silly addNameRange   range: '>=0.1.1-0 <0.2.0-0',
1238 silly addNameRange   hasData: true }
1239 silly addNameRange versions [ 'right-align', [ '0.1.0', '0.1.1', '0.1.2', '0.1.3' ] ]
1240 verbose addNamed [ 'right-align', '0.1.3' ]
1241 verbose addNamed [ '0.1.3', '0.1.3' ]
1242 silly lockFile 7e53da51-right-align-0-1-3 right-align@0.1.3
1243 verbose lock right-align@0.1.3 /home/coder/.npm/7e53da51-right-align-0-1-3.lock
1244 silly addNameRange number 2 { name: 'center-align',
1244 silly addNameRange   range: '>=0.1.1-0 <0.2.0-0',
1244 silly addNameRange   hasData: true }
1245 silly addNameRange versions [ 'center-align', [ '0.1.0', '0.1.1', '0.1.2', '0.1.3' ] ]
1246 verbose addNamed [ 'center-align', '0.1.3' ]
1247 verbose addNamed [ '0.1.3', '0.1.3' ]
1248 silly lockFile ec318f87-center-align-0-1-3 center-align@0.1.3
1249 verbose lock center-align@0.1.3 /home/coder/.npm/ec318f87-center-align-0-1-3.lock
1250 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1251 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1252 silly lockFile 7e53da51-right-align-0-1-3 right-align@0.1.3
1253 silly lockFile 7e53da51-right-align-0-1-3 right-align@0.1.3
1254 silly lockFile 2e19d086-right-align-0-1-1 right-align@^0.1.1
1255 silly lockFile 2e19d086-right-align-0-1-1 right-align@^0.1.1
1256 silly lockFile ec318f87-center-align-0-1-3 center-align@0.1.3
1257 silly lockFile ec318f87-center-align-0-1-3 center-align@0.1.3
1258 silly lockFile 32564c8f-center-align-0-1-1 center-align@^0.1.1
1259 silly lockFile 32564c8f-center-align-0-1-1 center-align@^0.1.1
1260 silly resolved [ { name: 'wordwrap',
1260 silly resolved     description: 'Wrap those words. Show them at what columns to start and stop.',
1260 silly resolved     version: '0.0.2',
1260 silly resolved     repository:
1260 silly resolved      { type: 'git',
1260 silly resolved        url: 'git://github.com/substack/node-wordwrap.git' },
1260 silly resolved     main: './index.js',
1260 silly resolved     keywords: [ 'word', 'wrap', 'rule', 'format', 'column' ],
1260 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
1260 silly resolved     scripts: { test: 'expresso' },
1260 silly resolved     devDependencies: { expresso: '=0.7.x' },
1260 silly resolved     engines: { node: '>=0.4.0' },
1260 silly resolved     license: 'MIT/X11',
1260 silly resolved     author:
1260 silly resolved      { name: 'James Halliday',
1260 silly resolved        email: 'mail@substack.net',
1260 silly resolved        url: 'http://substack.net' },
1260 silly resolved     readme: 'wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require(\'wordwrap\')(15);\n    console.log(wrap(\'You and your whole family are made out of meat.\'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require(\'wordwrap\')(20, 60);\n    console.log(wrap(\n        \'At long last the struggle and tumult was over.\'\n        + \' The machines had finally cast off their oppressors\'\n        + \' and were finally free to roam the cosmos.\'\n        + \'\\n\'\n        + \'Free of purpose, free of obligation.\'\n        + \' Just drifting through emptiness.\'\n        + \' The sun was just another point of light.\'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require(\'wordwrap\');\n\nwrap(stop), wrap(start, stop, params={mode:"soft"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn "soft" mode, split chunks by `/(\\S+\\s+/` and don\'t break up chunks which are\nlonger than `stop - start`, in "hard" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = "hard"`.\n',
1260 silly resolved     readmeFilename: 'README.markdown',
1260 silly resolved     bugs: { url: 'https://github.com/substack/node-wordwrap/issues' },
1260 silly resolved     _id: 'wordwrap@0.0.2',
1260 silly resolved     _from: 'wordwrap@0.0.2' },
1260 silly resolved   { name: 'right-align',
1260 silly resolved     description: 'Right-align the text in a string.',
1260 silly resolved     version: '0.1.3',
1260 silly resolved     homepage: 'https://github.com/jonschlinkert/right-align',
1260 silly resolved     author:
1260 silly resolved      { name: 'Jon Schlinkert',
1260 silly resolved        url: 'https://github.com/jonschlinkert' },
1260 silly resolved     repository:
1260 silly resolved      { type: 'git',
1260 silly resolved        url: 'git://github.com/jonschlinkert/right-align.git' },
1260 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/right-align/issues' },
1260 silly resolved     license: 'MIT',
1260 silly resolved     files: [ 'index.js' ],
1260 silly resolved     main: 'index.js',
1260 silly resolved     engines: { node: '>=0.10.0' },
1260 silly resolved     scripts: { test: 'mocha' },
1260 silly resolved     dependencies: { 'align-text': '^0.1.1' },
1260 silly resolved     devDependencies: { mocha: '*', should: '*' },
1260 silly resolved     keywords:
1260 silly resolved      [ 'align',
1260 silly resolved        'align-center',
1260 silly resolved        'center',
1260 silly resolved        'center-align',
1260 silly resolved        'right',
1260 silly resolved        'right-align',
1260 silly resolved        'text',
1260 silly resolved        'typography' ],
1260 silly resolved     readme: '# right-align [![NPM version](https://badge.fury.io/js/right-align.svg)](http://badge.fury.io/js/right-align)\n\n> Right-align the text in a string.\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i right-align --save\n```\n\n## Usage\n\n```js\nvar rightAlign = require(\'right-align\');\nrightAlign(string);\n```\n\n**Example**\n\nIf used on the following:\n\n```\nLorem ipsum dolor sit amet,\nconsectetur adipiscing\nelit, sed do eiusmod tempor incididunt\nut labore et dolore\nmagna aliqua. Ut enim ad minim\nveniam, quis\n```\n\nThe result would be:\n\n```\n           Lorem ipsum dolor sit amet,\n                consectetur adipiscing\nelit, sed do eiusmod tempor incididunt\n                   ut labore et dolore\n        magna aliqua. Ut enim ad minim\n                          veniam, quis\n```\n\n## Related projects\n\n* [align-text](https://github.com/jonschlinkert/align-text): Align the text in a string.\n* [center-align](https://github.com/jonschlinkert/center-align): Center-align the text in a string.\n* [justify](https://github.com/bahamas10/node-justify): Left or right (or both) justify text using a custom width and character\n* [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.\n* [repeat-element](https://github.com/jonschlinkert/repeat-element): Create an array by repeating the given value n times.\n* [word-wrap](https://github.com/jonschlinkert/word-wrap): Wrap words to a specified length.\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/right-align/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on June 09, 2015._\n',
1260 silly resolved     readmeFilename: 'README.md',
1260 silly resolved     _id: 'right-align@0.1.3',
1260 silly resolved     _from: 'right-align@^0.1.1' },
1260 silly resolved   { name: 'center-align',
1260 silly resolved     description: 'Center-align the text in a string.',
1260 silly resolved     version: '0.1.3',
1260 silly resolved     homepage: 'https://github.com/jonschlinkert/center-align',
1260 silly resolved     author:
1260 silly resolved      { name: 'Jon Schlinkert',
1260 silly resolved        url: 'https://github.com/jonschlinkert' },
1260 silly resolved     repository:
1260 silly resolved      { type: 'git',
1260 silly resolved        url: 'git://github.com/jonschlinkert/center-align' },
1260 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/center-align/issues' },
1260 silly resolved     license: 'MIT',
1260 silly resolved     files: [ 'index.js', 'utils.js' ],
1260 silly resolved     main: 'index.js',
1260 silly resolved     engines: { node: '>=0.10.0' },
1260 silly resolved     scripts: { test: 'mocha' },
1260 silly resolved     dependencies: { 'align-text': '^0.1.3', 'lazy-cache': '^1.0.3' },
1260 silly resolved     devDependencies: { mocha: '^2.2.0' },
1260 silly resolved     keywords:
1260 silly resolved      [ 'align',
1260 silly resolved        'align-center',
1260 silly resolved        'center',
1260 silly resolved        'center-align',
1260 silly resolved        'right',
1260 silly resolved        'right-align',
1260 silly resolved        'text',
1260 silly resolved        'typography' ],
1260 silly resolved     verb: { related: [Object] },
1260 silly resolved     readme: '# center-align [![NPM version](https://badge.fury.io/js/center-align.svg)](http://badge.fury.io/js/center-align)\n\n> Center-align the text in a string.\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i center-align --save\n```\n\n## Usage\n\n```js\nvar centerAlign = require(\'center-align\');\n```\n\n**Example**\n\nIf used on the following:\n\n```\nLorem ipsum dolor sit amet,\nconsectetur adipiscing\nelit, sed do eiusmod tempor incididunt\nut labore et dolore\nmagna aliqua. Ut enim ad minim\nveniam, quis\n```\n\nThe result would be:\n\n```\n     Lorem ipsum dolor sit amet,\n        consectetur adipiscing\nelit, sed do eiusmod tempor incididunt\n         ut labore et dolore\n    magna aliqua. Ut enim ad minim\n             veniam, quis\n```\n\n## Related projects\n\n* [align-text](https://www.npmjs.com/package/align-text): Align the text in a string. | [homepage](https://github.com/jonschlinkert/align-text)\n* [justified](https://www.npmjs.com/package/justified): Wrap words to a specified length and justified the text. | [homepage](https://github.com/jonschlinkert/justified)\n* [right-align](https://www.npmjs.com/package/right-align): Right-align the text in a string. | [homepage](https://github.com/jonschlinkert/right-align)\n* [word-wrap](https://www.npmjs.com/package/word-wrap): Wrap words to a specified length. | [homepage](https://github.com/jonschlinkert/word-wrap)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/center-align/issues/new).\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on October 27, 2015._',
1260 silly resolved     readmeFilename: 'README.md',
1260 silly resolved     _id: 'center-align@0.1.3',
1260 silly resolved     _from: 'center-align@^0.1.1' } ]
1261 info install wordwrap@0.0.2 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui
1262 info install right-align@0.1.3 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui
1263 info install center-align@0.1.3 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui
1264 info installOne wordwrap@0.0.2
1265 info installOne right-align@0.1.3
1266 info installOne center-align@0.1.3
1267 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/wordwrap unbuild
1268 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align unbuild
1269 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align unbuild
1270 verbose tar unpack /home/coder/.npm/wordwrap/0.0.2/package.tgz
1271 silly lockFile 1bcb11f6-ules-cliui-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/wordwrap
1272 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/wordwrap /home/coder/.npm/1bcb11f6-ules-cliui-node-modules-wordwrap.lock
1273 silly lockFile 70cfc6a2-r-npm-wordwrap-0-0-2-package-tgz tar:///home/coder/.npm/wordwrap/0.0.2/package.tgz
1274 verbose lock tar:///home/coder/.npm/wordwrap/0.0.2/package.tgz /home/coder/.npm/70cfc6a2-r-npm-wordwrap-0-0-2-package-tgz.lock
1275 verbose tar unpack /home/coder/.npm/right-align/0.1.3/package.tgz
1276 silly lockFile 1a26a8c9-s-cliui-node-modules-right-align tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align
1277 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align /home/coder/.npm/1a26a8c9-s-cliui-node-modules-right-align.lock
1278 silly lockFile 8cfdea62-pm-right-align-0-1-3-package-tgz tar:///home/coder/.npm/right-align/0.1.3/package.tgz
1279 verbose lock tar:///home/coder/.npm/right-align/0.1.3/package.tgz /home/coder/.npm/8cfdea62-pm-right-align-0-1-3-package-tgz.lock
1280 verbose tar unpack /home/coder/.npm/center-align/0.1.3/package.tgz
1281 silly lockFile 5e1592c3--cliui-node-modules-center-align tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align
1282 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align /home/coder/.npm/5e1592c3--cliui-node-modules-center-align.lock
1283 silly lockFile 12fd00c1-m-center-align-0-1-3-package-tgz tar:///home/coder/.npm/center-align/0.1.3/package.tgz
1284 verbose lock tar:///home/coder/.npm/center-align/0.1.3/package.tgz /home/coder/.npm/12fd00c1-m-center-align-0-1-3-package-tgz.lock
1285 silly gunzTarPerm modes [ '755', '644' ]
1286 silly gunzTarPerm modes [ '755', '644' ]
1287 silly gunzTarPerm modes [ '755', '644' ]
1288 silly gunzTarPerm extractEntry package.json
1289 silly gunzTarPerm extractEntry package.json
1290 silly gunzTarPerm extractEntry package.json
1291 silly gunzTarPerm extractEntry .npmignore
1292 silly gunzTarPerm extractEntry index.js
1293 silly gunzTarPerm extractEntry README.md
1294 silly gunzTarPerm extractEntry index.js
1295 silly gunzTarPerm extractEntry README.md
1296 silly gunzTarPerm extractEntry index.js
1297 silly gunzTarPerm extractEntry README.markdown
1298 silly gunzTarPerm extractEntry example/center.js
1299 silly gunzTarPerm extractEntry utils.js
1300 silly gunzTarPerm extractEntry example/meat.js
1301 silly gunzTarPerm extractEntry test/break.js
1302 silly gunzTarPerm extractEntry test/wrap.js
1303 silly gunzTarPerm extractEntry test/idleness.txt
1304 silly lockFile 1a26a8c9-s-cliui-node-modules-right-align tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align
1305 silly lockFile 1a26a8c9-s-cliui-node-modules-right-align tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align
1306 silly lockFile 8cfdea62-pm-right-align-0-1-3-package-tgz tar:///home/coder/.npm/right-align/0.1.3/package.tgz
1307 silly lockFile 8cfdea62-pm-right-align-0-1-3-package-tgz tar:///home/coder/.npm/right-align/0.1.3/package.tgz
1308 info preinstall right-align@0.1.3
1309 silly lockFile 5e1592c3--cliui-node-modules-center-align tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align
1310 silly lockFile 5e1592c3--cliui-node-modules-center-align tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align
1311 silly lockFile 12fd00c1-m-center-align-0-1-3-package-tgz tar:///home/coder/.npm/center-align/0.1.3/package.tgz
1312 silly lockFile 12fd00c1-m-center-align-0-1-3-package-tgz tar:///home/coder/.npm/center-align/0.1.3/package.tgz
1313 verbose readDependencies using package.json deps
1314 verbose readDependencies using package.json deps
1315 info preinstall center-align@0.1.3
1316 verbose cache add [ 'align-text@^0.1.1', null ]
1317 verbose cache add name=undefined spec="align-text@^0.1.1" args=["align-text@^0.1.1",null]
1318 verbose parsed url { protocol: null,
1318 verbose parsed url   slashes: null,
1318 verbose parsed url   auth: null,
1318 verbose parsed url   host: null,
1318 verbose parsed url   port: null,
1318 verbose parsed url   hostname: null,
1318 verbose parsed url   hash: null,
1318 verbose parsed url   search: null,
1318 verbose parsed url   query: null,
1318 verbose parsed url   pathname: 'align-text@^0.1.1',
1318 verbose parsed url   path: 'align-text@^0.1.1',
1318 verbose parsed url   href: 'align-text@^0.1.1' }
1319 verbose cache add name="align-text" spec="^0.1.1" args=["align-text","^0.1.1"]
1320 verbose parsed url { protocol: null,
1320 verbose parsed url   slashes: null,
1320 verbose parsed url   auth: null,
1320 verbose parsed url   host: null,
1320 verbose parsed url   port: null,
1320 verbose parsed url   hostname: null,
1320 verbose parsed url   hash: null,
1320 verbose parsed url   search: null,
1320 verbose parsed url   query: null,
1320 verbose parsed url   pathname: '^0.1.1',
1320 verbose parsed url   path: '^0.1.1',
1320 verbose parsed url   href: '^0.1.1' }
1321 verbose addNamed [ 'align-text', '^0.1.1' ]
1322 verbose addNamed [ null, '>=0.1.1-0 <0.2.0-0' ]
1323 silly lockFile b8b9901a-align-text-0-1-1 align-text@^0.1.1
1324 verbose lock align-text@^0.1.1 /home/coder/.npm/b8b9901a-align-text-0-1-1.lock
1325 verbose readDependencies using package.json deps
1326 silly addNameRange { name: 'align-text',
1326 silly addNameRange   range: '>=0.1.1-0 <0.2.0-0',
1326 silly addNameRange   hasData: false }
1327 verbose readDependencies using package.json deps
1328 verbose cache add [ 'align-text@^0.1.3', null ]
1329 verbose cache add name=undefined spec="align-text@^0.1.3" args=["align-text@^0.1.3",null]
1330 verbose parsed url { protocol: null,
1330 verbose parsed url   slashes: null,
1330 verbose parsed url   auth: null,
1330 verbose parsed url   host: null,
1330 verbose parsed url   port: null,
1330 verbose parsed url   hostname: null,
1330 verbose parsed url   hash: null,
1330 verbose parsed url   search: null,
1330 verbose parsed url   query: null,
1330 verbose parsed url   pathname: 'align-text@^0.1.3',
1330 verbose parsed url   path: 'align-text@^0.1.3',
1330 verbose parsed url   href: 'align-text@^0.1.3' }
1331 verbose cache add name="align-text" spec="^0.1.3" args=["align-text","^0.1.3"]
1332 verbose parsed url { protocol: null,
1332 verbose parsed url   slashes: null,
1332 verbose parsed url   auth: null,
1332 verbose parsed url   host: null,
1332 verbose parsed url   port: null,
1332 verbose parsed url   hostname: null,
1332 verbose parsed url   hash: null,
1332 verbose parsed url   search: null,
1332 verbose parsed url   query: null,
1332 verbose parsed url   pathname: '^0.1.3',
1332 verbose parsed url   path: '^0.1.3',
1332 verbose parsed url   href: '^0.1.3' }
1333 verbose addNamed [ 'align-text', '^0.1.3' ]
1334 verbose addNamed [ null, '>=0.1.3-0 <0.2.0-0' ]
1335 silly lockFile e3531912-align-text-0-1-3 align-text@^0.1.3
1336 verbose lock align-text@^0.1.3 /home/coder/.npm/e3531912-align-text-0-1-3.lock
1337 verbose cache add [ 'lazy-cache@^1.0.3', null ]
1338 verbose cache add name=undefined spec="lazy-cache@^1.0.3" args=["lazy-cache@^1.0.3",null]
1339 verbose parsed url { protocol: null,
1339 verbose parsed url   slashes: null,
1339 verbose parsed url   auth: null,
1339 verbose parsed url   host: null,
1339 verbose parsed url   port: null,
1339 verbose parsed url   hostname: null,
1339 verbose parsed url   hash: null,
1339 verbose parsed url   search: null,
1339 verbose parsed url   query: null,
1339 verbose parsed url   pathname: 'lazy-cache@^1.0.3',
1339 verbose parsed url   path: 'lazy-cache@^1.0.3',
1339 verbose parsed url   href: 'lazy-cache@^1.0.3' }
1340 verbose cache add name="lazy-cache" spec="^1.0.3" args=["lazy-cache","^1.0.3"]
1341 verbose parsed url { protocol: null,
1341 verbose parsed url   slashes: null,
1341 verbose parsed url   auth: null,
1341 verbose parsed url   host: null,
1341 verbose parsed url   port: null,
1341 verbose parsed url   hostname: null,
1341 verbose parsed url   hash: null,
1341 verbose parsed url   search: null,
1341 verbose parsed url   query: null,
1341 verbose parsed url   pathname: '^1.0.3',
1341 verbose parsed url   path: '^1.0.3',
1341 verbose parsed url   href: '^1.0.3' }
1342 verbose addNamed [ 'lazy-cache', '^1.0.3' ]
1343 verbose addNamed [ null, '>=1.0.3-0 <2.0.0-0' ]
1344 silly lockFile 6a989fa7-lazy-cache-1-0-3 lazy-cache@^1.0.3
1345 verbose lock lazy-cache@^1.0.3 /home/coder/.npm/6a989fa7-lazy-cache-1-0-3.lock
1346 silly addNameRange { name: 'align-text',
1346 silly addNameRange   range: '>=0.1.3-0 <0.2.0-0',
1346 silly addNameRange   hasData: false }
1347 silly addNameRange { name: 'lazy-cache',
1347 silly addNameRange   range: '>=1.0.3-0 <2.0.0-0',
1347 silly addNameRange   hasData: false }
1348 verbose url raw lazy-cache
1349 verbose url resolving [ 'https://registry.npmjs.org/', './lazy-cache' ]
1350 verbose url resolved https://registry.npmjs.org/lazy-cache
1351 info trying registry request attempt 1 at 15:00:01
1352 verbose etag "E61NSAP2ZD1SA26PVMZZQGK2H"
1353 http GET https://registry.npmjs.org/lazy-cache
1354 verbose url raw align-text
1355 verbose url resolving [ 'https://registry.npmjs.org/', './align-text' ]
1356 verbose url resolved https://registry.npmjs.org/align-text
1357 info trying registry request attempt 1 at 15:00:01
1358 verbose etag "AT68QJAX5IBW8ATA4JI5MK0QZ"
1359 http GET https://registry.npmjs.org/align-text
1360 verbose url raw align-text
1361 verbose url resolving [ 'https://registry.npmjs.org/', './align-text' ]
1362 verbose url resolved https://registry.npmjs.org/align-text
1363 info trying registry request attempt 1 at 15:00:01
1364 verbose etag "AT68QJAX5IBW8ATA4JI5MK0QZ"
1365 http GET https://registry.npmjs.org/align-text
1366 silly lockFile 1bcb11f6-ules-cliui-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/wordwrap
1367 silly lockFile 1bcb11f6-ules-cliui-node-modules-wordwrap tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/wordwrap
1368 silly lockFile 70cfc6a2-r-npm-wordwrap-0-0-2-package-tgz tar:///home/coder/.npm/wordwrap/0.0.2/package.tgz
1369 silly lockFile 70cfc6a2-r-npm-wordwrap-0-0-2-package-tgz tar:///home/coder/.npm/wordwrap/0.0.2/package.tgz
1370 info preinstall wordwrap@0.0.2
1371 verbose readDependencies using package.json deps
1372 verbose readDependencies using package.json deps
1373 silly resolved []
1374 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/wordwrap
1375 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/wordwrap
1376 verbose linkStuff [ true,
1376 verbose linkStuff   '/usr/local/lib/node_modules',
1376 verbose linkStuff   false,
1376 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules' ]
1377 info linkStuff wordwrap@0.0.2
1378 verbose linkBins wordwrap@0.0.2
1379 verbose linkMans wordwrap@0.0.2
1380 verbose rebuildBundles wordwrap@0.0.2
1381 info install wordwrap@0.0.2
1382 info postinstall wordwrap@0.0.2
1383 http 304 https://registry.npmjs.org/align-text
1384 silly registry.get cb [ 304,
1384 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:01 GMT',
1384 silly registry.get     via: '1.1 varnish',
1384 silly registry.get     'cache-control': 'max-age=300',
1384 silly registry.get     etag: '"AT68QJAX5IBW8ATA4JI5MK0QZ"',
1384 silly registry.get     age: '44',
1384 silly registry.get     connection: 'keep-alive',
1384 silly registry.get     'x-served-by': 'cache-lhr6338-LHR',
1384 silly registry.get     'x-cache': 'HIT',
1384 silly registry.get     'x-cache-hits': '3',
1384 silly registry.get     'x-timer': 'S1466600401.648948,VS0,VE0',
1384 silly registry.get     vary: 'Accept-Encoding' } ]
1385 verbose etag align-text from cache
1386 silly addNameRange number 2 { name: 'align-text',
1386 silly addNameRange   range: '>=0.1.3-0 <0.2.0-0',
1386 silly addNameRange   hasData: true }
1387 silly addNameRange versions [ 'align-text',
1387 silly addNameRange   [ '0.1.0', '0.1.1', '0.1.2', '0.1.3', '0.1.4' ] ]
1388 verbose addNamed [ 'align-text', '0.1.4' ]
1389 verbose addNamed [ '0.1.4', '0.1.4' ]
1390 silly lockFile 787af468-align-text-0-1-4 align-text@0.1.4
1391 verbose lock align-text@0.1.4 /home/coder/.npm/787af468-align-text-0-1-4.lock
1392 http 304 https://registry.npmjs.org/lazy-cache
1393 silly registry.get cb [ 304,
1393 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:01 GMT',
1393 silly registry.get     via: '1.1 varnish',
1393 silly registry.get     'cache-control': 'max-age=300',
1393 silly registry.get     etag: '"E61NSAP2ZD1SA26PVMZZQGK2H"',
1393 silly registry.get     age: '157',
1393 silly registry.get     connection: 'keep-alive',
1393 silly registry.get     'x-served-by': 'cache-lhr6320-LHR',
1393 silly registry.get     'x-cache': 'HIT',
1393 silly registry.get     'x-cache-hits': '3',
1393 silly registry.get     'x-timer': 'S1466600401.654543,VS0,VE0',
1393 silly registry.get     vary: 'Accept-Encoding' } ]
1394 verbose etag lazy-cache from cache
1395 http 304 https://registry.npmjs.org/align-text
1396 silly registry.get cb [ 304,
1396 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:01 GMT',
1396 silly registry.get     via: '1.1 varnish',
1396 silly registry.get     'cache-control': 'max-age=300',
1396 silly registry.get     etag: '"AT68QJAX5IBW8ATA4JI5MK0QZ"',
1396 silly registry.get     age: '44',
1396 silly registry.get     connection: 'keep-alive',
1396 silly registry.get     'x-served-by': 'cache-lhr6327-LHR',
1396 silly registry.get     'x-cache': 'HIT',
1396 silly registry.get     'x-cache-hits': '2',
1396 silly registry.get     'x-timer': 'S1466600401.655855,VS0,VE0',
1396 silly registry.get     vary: 'Accept-Encoding' } ]
1397 verbose etag align-text from cache
1398 silly addNameRange number 2 { name: 'lazy-cache',
1398 silly addNameRange   range: '>=1.0.3-0 <2.0.0-0',
1398 silly addNameRange   hasData: true }
1399 silly addNameRange versions [ 'lazy-cache',
1399 silly addNameRange   [ '0.1.0',
1399 silly addNameRange     '0.2.0',
1399 silly addNameRange     '0.2.1',
1399 silly addNameRange     '0.2.2',
1399 silly addNameRange     '0.2.3',
1399 silly addNameRange     '0.2.4',
1399 silly addNameRange     '0.2.5',
1399 silly addNameRange     '1.0.0',
1399 silly addNameRange     '0.2.6',
1399 silly addNameRange     '1.0.1',
1399 silly addNameRange     '0.2.7',
1399 silly addNameRange     '1.0.2',
1399 silly addNameRange     '1.0.3',
1399 silly addNameRange     '1.0.4',
1399 silly addNameRange     '2.0.0',
1399 silly addNameRange     '2.0.1' ] ]
1400 verbose addNamed [ 'lazy-cache', '1.0.4' ]
1401 verbose addNamed [ '1.0.4', '1.0.4' ]
1402 silly lockFile 6ece2254-lazy-cache-1-0-4 lazy-cache@1.0.4
1403 verbose lock lazy-cache@1.0.4 /home/coder/.npm/6ece2254-lazy-cache-1-0-4.lock
1404 silly addNameRange number 2 { name: 'align-text',
1404 silly addNameRange   range: '>=0.1.1-0 <0.2.0-0',
1404 silly addNameRange   hasData: true }
1405 silly addNameRange versions [ 'align-text',
1405 silly addNameRange   [ '0.1.0', '0.1.1', '0.1.2', '0.1.3', '0.1.4' ] ]
1406 verbose addNamed [ 'align-text', '0.1.4' ]
1407 silly lockFile 787af468-align-text-0-1-4 align-text@0.1.4
1408 silly lockFile 787af468-align-text-0-1-4 align-text@0.1.4
1409 silly lockFile 6ece2254-lazy-cache-1-0-4 lazy-cache@1.0.4
1410 silly lockFile 6ece2254-lazy-cache-1-0-4 lazy-cache@1.0.4
1411 silly lockFile e3531912-align-text-0-1-3 align-text@^0.1.3
1412 silly lockFile e3531912-align-text-0-1-3 align-text@^0.1.3
1413 silly lockFile b8b9901a-align-text-0-1-1 align-text@^0.1.1
1414 silly lockFile b8b9901a-align-text-0-1-1 align-text@^0.1.1
1415 silly lockFile 6a989fa7-lazy-cache-1-0-3 lazy-cache@^1.0.3
1416 silly lockFile 6a989fa7-lazy-cache-1-0-3 lazy-cache@^1.0.3
1417 silly resolved [ { name: 'align-text',
1417 silly resolved     description: 'Align the text in a string.',
1417 silly resolved     version: '0.1.4',
1417 silly resolved     homepage: 'https://github.com/jonschlinkert/align-text',
1417 silly resolved     author:
1417 silly resolved      { name: 'Jon Schlinkert',
1417 silly resolved        url: 'https://github.com/jonschlinkert' },
1417 silly resolved     repository:
1417 silly resolved      { type: 'git',
1417 silly resolved        url: 'git://github.com/jonschlinkert/align-text.git' },
1417 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/align-text/issues' },
1417 silly resolved     license: 'MIT',
1417 silly resolved     files: [ 'index.js' ],
1417 silly resolved     main: 'index.js',
1417 silly resolved     engines: { node: '>=0.10.0' },
1417 silly resolved     scripts: { test: 'mocha' },
1417 silly resolved     dependencies:
1417 silly resolved      { 'kind-of': '^3.0.2',
1417 silly resolved        longest: '^1.0.1',
1417 silly resolved        'repeat-string': '^1.5.2' },
1417 silly resolved     devDependencies: { mocha: '*', should: '*', 'word-wrap': '^1.0.3' },
1417 silly resolved     keywords:
1417 silly resolved      [ 'align',
1417 silly resolved        'align-center',
1417 silly resolved        'alignment',
1417 silly resolved        'center',
1417 silly resolved        'center-align',
1417 silly resolved        'indent',
1417 silly resolved        'pad',
1417 silly resolved        'padding',
1417 silly resolved        'right',
1417 silly resolved        'right-align',
1417 silly resolved        'text',
1417 silly resolved        'typography' ],
1417 silly resolved     readme: '# align-text [![NPM version](https://badge.fury.io/js/align-text.svg)](http://badge.fury.io/js/align-text)  [![Build Status](https://travis-ci.org/jonschlinkert/align-text.svg)](https://travis-ci.org/jonschlinkert/align-text)\n\n> Align the text in a string.\n\n**Examples**\n\nAlign text values in an array:\n\n```js\nalign([1, 2, 3, 100]);\n//=> [\'  1\', \'  2\', \'  3\', \'100\']\n```\n\nOr [do stuff like this](./example.js):\n\n[![screen shot 2015-06-09 at 2 08 34 am](https://cloud.githubusercontent.com/assets/383994/8051597/7b716fbc-0e4c-11e5-9aef-4493fd22db58.png)](./example.js)\n\nVisit [the example](./example.js) to see how this works.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i align-text --save\n```\n\n## Usage\n\n```js\nvar align = require(\'align-text\');\nalign(text, callback_function_or_integer);\n```\n\n**Params**\n\n* `text` can be a **string or array**. If a string is passed, a string will be returned. If an array is passed, an array will be returned.\n* `callback|integer`: if an integer, the text will be indented by that amount. If a function, it must return an integer representing the amount of leading indentation to use as `align` loops over each line.\n\n**Example**\n\n```js\nalign(text, 4);\n```\n\nWould align:\n\n```\nabc\nabc\nabc\n```\n\nTo:\n\n```\n    abc\n    abc\n    abc\n```\n\n## callback\n\n### params\n\nThe callback is used to determine the indentation of each line and gets the following params:\n\n* `len` the length of the "current" line\n* `longest` the length of the longest line\n* `line` the current line (string) being aligned\n* `lines` the array of all lines\n\n### return\n\nThe callback may return:\n\n* an integer that represents the number of spaces to use for padding,\n* or an object with the following properties:\n  - `indent`: **{Number}** the amount of indentation to use. Default is `0` when an object is returned.\n  - `character`: **{String}** the character to use for indentation. Default is `\'\'` (empty string) when an object is returned.\n  - `prefix`: **{String}** leading characters to use at the beginning of each line. `\'\'` (empty string) when an object is returned.\n\n**Integer example:**\n\n```js\n// calculate half the difference between the length\n// of the current line and the longest line\nfunction centerAlign(len, longest, line, lines) {\n  return Math.floor((longest - len) / 2);\n}\n```\n\n**Object example:**\n\n```js\nfunction centerAlign(len, longest, line, lines) {\n  return {\n    character: \'\\t\',\n    indent: Math.floor((longest - len) / 2),\n    prefix: \'~ \',\n  }\n}\n```\n\n## Usage examples\n\n### Center align\n\nUsing the `centerAlign` function from above:\n\n```js\nalign(text, centerAlign);\n```\n\nWould align this text:\n\n```js\nLorem ipsum dolor sit amet\nconsectetur adipiscin\nelit, sed do eiusmod tempor incididun\nut labore et dolor\nmagna aliqua. Ut enim ad mini\nveniam, quis\n```\n\nResulting in this:\n\n```\n     Lorem ipsum dolor sit amet,\n        consectetur adipiscing\nelit, sed do eiusmod tempor incididunt\n         ut labore et dolore\n    magna aliqua. Ut enim ad minim\n             veniam, quis\n```\n\n**Customize**\n\nIf you wanted to add more padding on the left, just pass the number in the callback.\n\nFor example, to add 4 spaces before every line:\n\n```js\nfunction centerAlign(len, longest, line, lines) {\n  return 4 + Math.floor((longest - len) / 2);\n}\n```\n\nWould result in:\n\n```\n         Lorem ipsum dolor sit amet,\n            consectetur adipiscing\n    elit, sed do eiusmod tempor incididunt\n             ut labore et dolore\n        magna aliqua. Ut enim ad minim\n                 veniam, quis\n```\n\n### Bullets\n\n```js\nalign(text, function (len, max, line, lines) {\n  return {prefix: \' - \'};\n});\n```\n\nWould return:\n\n```\n- Lorem ipsum dolor sit amet,\n- consectetur adipiscing\n- elit, sed do eiusmod tempor incididunt\n- ut labore et dolore\n- magna aliqua. Ut enim ad minim\n- veniam, quis\n```\n\n### Different indent character\n\n```js\nalign(text, function (len, max, line, lines) {\n  return { \n    indent: Math.floor((max - len) / 2), \n    character: \'~\', \n  };\n});\n```\n\nWould return\n\n```\n~~~~~Lorem ipsum dolor sit amet,\n~~~~~~~~consectetur adipiscing\nelit, sed do eiusmod tempor incididunt\n~~~~~~~~~ut labore et dolore\n~~~~magna aliqua. Ut enim ad minim\n~~~~~~~~~~~~~veniam, quis\n```\n\n## Related projects\n\n* [center-align](https://github.com/jonschlinkert/center-align): Center-align the text in a string.\n* [justify](https://github.com/bahamas10/node-justify): Left or right (or both) justify text using a custom width and character\n* [longest](https://github.com/jonschlinkert/longest): Get the longest item in an array.\n* [right-align](https://github.com/jonschlinkert/right-align): Right-align the text in a string.\n* [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.\n* [word-wrap](https://github.com/jonschlinkert/word-wrap): Wrap words to a specified length.\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/align-text/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2015 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on June 09, 2015._\n',
1417 silly resolved     readmeFilename: 'README.md',
1417 silly resolved     _id: 'align-text@0.1.4',
1417 silly resolved     _from: 'align-text@^0.1.1' } ]
1418 info install align-text@0.1.4 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align
1419 info installOne align-text@0.1.4
1420 silly resolved [ { name: 'align-text',
1420 silly resolved     description: 'Align the text in a string.',
1420 silly resolved     version: '0.1.4',
1420 silly resolved     homepage: 'https://github.com/jonschlinkert/align-text',
1420 silly resolved     author:
1420 silly resolved      { name: 'Jon Schlinkert',
1420 silly resolved        url: 'https://github.com/jonschlinkert' },
1420 silly resolved     repository:
1420 silly resolved      { type: 'git',
1420 silly resolved        url: 'git://github.com/jonschlinkert/align-text.git' },
1420 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/align-text/issues' },
1420 silly resolved     license: 'MIT',
1420 silly resolved     files: [ 'index.js' ],
1420 silly resolved     main: 'index.js',
1420 silly resolved     engines: { node: '>=0.10.0' },
1420 silly resolved     scripts: { test: 'mocha' },
1420 silly resolved     dependencies:
1420 silly resolved      { 'kind-of': '^3.0.2',
1420 silly resolved        longest: '^1.0.1',
1420 silly resolved        'repeat-string': '^1.5.2' },
1420 silly resolved     devDependencies: { mocha: '*', should: '*', 'word-wrap': '^1.0.3' },
1420 silly resolved     keywords:
1420 silly resolved      [ 'align',
1420 silly resolved        'align-center',
1420 silly resolved        'alignment',
1420 silly resolved        'center',
1420 silly resolved        'center-align',
1420 silly resolved        'indent',
1420 silly resolved        'pad',
1420 silly resolved        'padding',
1420 silly resolved        'right',
1420 silly resolved        'right-align',
1420 silly resolved        'text',
1420 silly resolved        'typography' ],
1420 silly resolved     readme: '# align-text [![NPM version](https://badge.fury.io/js/align-text.svg)](http://badge.fury.io/js/align-text)  [![Build Status](https://travis-ci.org/jonschlinkert/align-text.svg)](https://travis-ci.org/jonschlinkert/align-text)\n\n> Align the text in a string.\n\n**Examples**\n\nAlign text values in an array:\n\n```js\nalign([1, 2, 3, 100]);\n//=> [\'  1\', \'  2\', \'  3\', \'100\']\n```\n\nOr [do stuff like this](./example.js):\n\n[![screen shot 2015-06-09 at 2 08 34 am](https://cloud.githubusercontent.com/assets/383994/8051597/7b716fbc-0e4c-11e5-9aef-4493fd22db58.png)](./example.js)\n\nVisit [the example](./example.js) to see how this works.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i align-text --save\n```\n\n## Usage\n\n```js\nvar align = require(\'align-text\');\nalign(text, callback_function_or_integer);\n```\n\n**Params**\n\n* `text` can be a **string or array**. If a string is passed, a string will be returned. If an array is passed, an array will be returned.\n* `callback|integer`: if an integer, the text will be indented by that amount. If a function, it must return an integer representing the amount of leading indentation to use as `align` loops over each line.\n\n**Example**\n\n```js\nalign(text, 4);\n```\n\nWould align:\n\n```\nabc\nabc\nabc\n```\n\nTo:\n\n```\n    abc\n    abc\n    abc\n```\n\n## callback\n\n### params\n\nThe callback is used to determine the indentation of each line and gets the following params:\n\n* `len` the length of the "current" line\n* `longest` the length of the longest line\n* `line` the current line (string) being aligned\n* `lines` the array of all lines\n\n### return\n\nThe callback may return:\n\n* an integer that represents the number of spaces to use for padding,\n* or an object with the following properties:\n  - `indent`: **{Number}** the amount of indentation to use. Default is `0` when an object is returned.\n  - `character`: **{String}** the character to use for indentation. Default is `\'\'` (empty string) when an object is returned.\n  - `prefix`: **{String}** leading characters to use at the beginning of each line. `\'\'` (empty string) when an object is returned.\n\n**Integer example:**\n\n```js\n// calculate half the difference between the length\n// of the current line and the longest line\nfunction centerAlign(len, longest, line, lines) {\n  return Math.floor((longest - len) / 2);\n}\n```\n\n**Object example:**\n\n```js\nfunction centerAlign(len, longest, line, lines) {\n  return {\n    character: \'\\t\',\n    indent: Math.floor((longest - len) / 2),\n    prefix: \'~ \',\n  }\n}\n```\n\n## Usage examples\n\n### Center align\n\nUsing the `centerAlign` function from above:\n\n```js\nalign(text, centerAlign);\n```\n\nWould align this text:\n\n```js\nLorem ipsum dolor sit amet\nconsectetur adipiscin\nelit, sed do eiusmod tempor incididun\nut labore et dolor\nmagna aliqua. Ut enim ad mini\nveniam, quis\n```\n\nResulting in this:\n\n```\n     Lorem ipsum dolor sit amet,\n        consectetur adipiscing\nelit, sed do eiusmod tempor incididunt\n         ut labore et dolore\n    magna aliqua. Ut enim ad minim\n             veniam, quis\n```\n\n**Customize**\n\nIf you wanted to add more padding on the left, just pass the number in the callback.\n\nFor example, to add 4 spaces before every line:\n\n```js\nfunction centerAlign(len, longest, line, lines) {\n  return 4 + Math.floor((longest - len) / 2);\n}\n```\n\nWould result in:\n\n```\n         Lorem ipsum dolor sit amet,\n            consectetur adipiscing\n    elit, sed do eiusmod tempor incididunt\n             ut labore et dolore\n        magna aliqua. Ut enim ad minim\n                 veniam, quis\n```\n\n### Bullets\n\n```js\nalign(text, function (len, max, line, lines) {\n  return {prefix: \' - \'};\n});\n```\n\nWould return:\n\n```\n- Lorem ipsum dolor sit amet,\n- consectetur adipiscing\n- elit, sed do eiusmod tempor incididunt\n- ut labore et dolore\n- magna aliqua. Ut enim ad minim\n- veniam, quis\n```\n\n### Different indent character\n\n```js\nalign(text, function (len, max, line, lines) {\n  return { \n    indent: Math.floor((max - len) / 2), \n    character: \'~\', \n  };\n});\n```\n\nWould return\n\n```\n~~~~~Lorem ipsum dolor sit amet,\n~~~~~~~~consectetur adipiscing\nelit, sed do eiusmod tempor incididunt\n~~~~~~~~~ut labore et dolore\n~~~~magna aliqua. Ut enim ad minim\n~~~~~~~~~~~~~veniam, quis\n```\n\n## Related projects\n\n* [center-align](https://github.com/jonschlinkert/center-align): Center-align the text in a string.\n* [justify](https://github.com/bahamas10/node-justify): Left or right (or both) justify text using a custom width and character\n* [longest](https://github.com/jonschlinkert/longest): Get the longest item in an array.\n* [right-align](https://github.com/jonschlinkert/right-align): Right-align the text in a string.\n* [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.\n* [word-wrap](https://github.com/jonschlinkert/word-wrap): Wrap words to a specified length.\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/align-text/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2015 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on June 09, 2015._\n',
1420 silly resolved     readmeFilename: 'README.md',
1420 silly resolved     _id: 'align-text@0.1.4',
1420 silly resolved     _from: 'align-text@^0.1.1' },
1420 silly resolved   { name: 'lazy-cache',
1420 silly resolved     description: 'Cache requires to be lazy-loaded when needed.',
1420 silly resolved     version: '1.0.4',
1420 silly resolved     homepage: 'https://github.com/jonschlinkert/lazy-cache',
1420 silly resolved     author:
1420 silly resolved      { name: 'Jon Schlinkert',
1420 silly resolved        url: 'https://github.com/jonschlinkert' },
1420 silly resolved     repository:
1420 silly resolved      { type: 'git',
1420 silly resolved        url: 'git://github.com/jonschlinkert/lazy-cache' },
1420 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/lazy-cache/issues' },
1420 silly resolved     license: 'MIT',
1420 silly resolved     files: [ 'index.js' ],
1420 silly resolved     main: 'index.js',
1420 silly resolved     engines: { node: '>=0.10.0' },
1420 silly resolved     scripts: { test: 'mocha' },
1420 silly resolved     devDependencies:
1420 silly resolved      { 'ansi-yellow': '^0.1.1',
1420 silly resolved        glob: '^7.0.3',
1420 silly resolved        'gulp-format-md': '^0.1.8',
1420 silly resolved        mocha: '^2.4.5' },
1420 silly resolved     keywords:
1420 silly resolved      [ 'cache',
1420 silly resolved        'caching',
1420 silly resolved        'dependencies',
1420 silly resolved        'dependency',
1420 silly resolved        'lazy',
1420 silly resolved        'require',
1420 silly resolved        'requires' ],
1420 silly resolved     verb:
1420 silly resolved      { related: [Object],
1420 silly resolved        plugins: [Object],
1420 silly resolved        toc: false,
1420 silly resolved        layout: 'default',
1420 silly resolved        tasks: [Object],
1420 silly resolved        lint: [Object],
1420 silly resolved        reflinks: [Object] },
1420 silly resolved     readme: '# lazy-cache [![NPM version](https://img.shields.io/npm/v/lazy-cache.svg?style=flat)](https://www.npmjs.com/package/lazy-cache) [![NPM downloads](https://img.shields.io/npm/dm/lazy-cache.svg?style=flat)](https://npmjs.org/package/lazy-cache) [![Build Status](https://img.shields.io/travis/jonschlinkert/lazy-cache.svg?style=flat)](https://travis-ci.org/jonschlinkert/lazy-cache)\n\n> Cache requires to be lazy-loaded when needed.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install lazy-cache --save\n```\n\nIf you use webpack and are experiencing issues, try using [unlazy-loader](https://github.com/doowb/unlazy-loader), a webpack loader that fixes the bug that prevents webpack from working with native javascript getters.\n\n## Usage\n\n```js\nvar utils = require(\'lazy-cache\')(require);\n```\n\n**Use as a property on `lazy`**\n\nThe module is also added as a property to the `lazy` function\nso it can be called without having to call a function first.\n\n```js\nvar utils = require(\'lazy-cache\')(require);\n\n// `npm install glob`\nutils(\'glob\');\n\n// glob sync\nconsole.log(utils.glob.sync(\'*.js\'));\n\n// glob async\nutils.glob(\'*.js\', function (err, files) {\n  console.log(files);\n});\n```\n\n**Use as a function**\n\n```js\nvar utils = require(\'lazy-cache\')(require);\nvar glob = utils(\'glob\');\n\n// `glob` is a now a function that may be called when needed\nglob().sync(\'foo/*.js\');\n```\n\n## Aliases\n\nAn alias may be passed as the second argument if you don\'t want to use the automatically camel-cased variable name.\n\n**Example**\n\n```js\nvar utils = require(\'lazy-cache\')(require);\n\n// alias `ansi-yellow` as `yellow`\nutils(\'ansi-yellow\', \'yellow\');\nconsole.log(utils.yellow(\'foo\'));\n```\n\n## Browserify usage\n\n**Example**\n\n```js\nvar utils = require(\'lazy-cache\')(require);\n// temporarily re-assign `require` to trick browserify\nvar fn = require;\nrequire = utils;\n// list module dependencies (here, `require` is actually `lazy-cache`)\nrequire(\'glob\');\nrequire = fn; // restore the native `require` function\n\n/**\n * Now you can use glob with the `utils.glob` variable\n */\n\n// sync\nconsole.log(utils.glob.sync(\'*.js\'));\n\n// async\nutils.glob(\'*.js\', function (err, files) {\n  console.log(files.join(\'\\n\'));\n});\n```\n\n## Kill switch\n\nIn certain rare edge cases it may be necessary to unlazy all lazy-cached dependencies (5 reported cases after ~30 million downloads).\n\nTo force lazy-cache to immediately invoke all dependencies, do:\n\n```js\nprocess.env.UNLAZY = true;\n```\n\n## Related projects\n\nYou might also be interested in these projects:\n\n[lint-deps](https://www.npmjs.com/package/lint-deps): CLI tool that tells you when dependencies are missing from package.json and offers you a… [more](https://www.npmjs.com/package/lint-deps) | [homepage](https://github.com/jonschlinkert/lint-deps)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/lazy-cache/issues/new).\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install verb && npm run docs\n```\n\nOr, if [verb](https://github.com/verbose/verb) is installed globally:\n\n```sh\n$ verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/lazy-cache/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on April 22, 2016._',
1420 silly resolved     readmeFilename: 'README.md',
1420 silly resolved     _id: 'lazy-cache@1.0.4',
1420 silly resolved     _from: 'lazy-cache@^1.0.3' } ]
1421 info install align-text@0.1.4 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align
1422 info install lazy-cache@1.0.4 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align
1423 info installOne align-text@0.1.4
1424 info installOne lazy-cache@1.0.4
1425 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text unbuild
1426 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text unbuild
1427 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/lazy-cache unbuild
1428 verbose tar unpack /home/coder/.npm/align-text/0.1.4/package.tgz
1429 silly lockFile 59d15483-ht-align-node-modules-align-text tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text
1430 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text /home/coder/.npm/59d15483-ht-align-node-modules-align-text.lock
1431 silly lockFile 646eabe5-npm-align-text-0-1-4-package-tgz tar:///home/coder/.npm/align-text/0.1.4/package.tgz
1432 verbose lock tar:///home/coder/.npm/align-text/0.1.4/package.tgz /home/coder/.npm/646eabe5-npm-align-text-0-1-4-package-tgz.lock
1433 verbose tar unpack /home/coder/.npm/align-text/0.1.4/package.tgz
1434 silly lockFile 06d59b26-er-align-node-modules-align-text tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text
1435 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text /home/coder/.npm/06d59b26-er-align-node-modules-align-text.lock
1436 silly lockFile 646eabe5-npm-align-text-0-1-4-package-tgz tar:///home/coder/.npm/align-text/0.1.4/package.tgz
1437 verbose lock tar:///home/coder/.npm/align-text/0.1.4/package.tgz /home/coder/.npm/646eabe5-npm-align-text-0-1-4-package-tgz.lock
1438 verbose tar unpack /home/coder/.npm/lazy-cache/1.0.4/package.tgz
1439 silly lockFile 40067dbd-er-align-node-modules-lazy-cache tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/lazy-cache
1440 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/lazy-cache /home/coder/.npm/40067dbd-er-align-node-modules-lazy-cache.lock
1441 silly lockFile 66e064ae-npm-lazy-cache-1-0-4-package-tgz tar:///home/coder/.npm/lazy-cache/1.0.4/package.tgz
1442 verbose lock tar:///home/coder/.npm/lazy-cache/1.0.4/package.tgz /home/coder/.npm/66e064ae-npm-lazy-cache-1-0-4-package-tgz.lock
1443 silly gunzTarPerm modes [ '755', '644' ]
1444 silly gunzTarPerm modes [ '755', '644' ]
1445 silly gunzTarPerm extractEntry package.json
1446 silly gunzTarPerm extractEntry README.md
1447 silly gunzTarPerm extractEntry index.js
1448 silly lockFile 40067dbd-er-align-node-modules-lazy-cache tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/lazy-cache
1449 silly lockFile 40067dbd-er-align-node-modules-lazy-cache tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/lazy-cache
1450 silly lockFile 66e064ae-npm-lazy-cache-1-0-4-package-tgz tar:///home/coder/.npm/lazy-cache/1.0.4/package.tgz
1451 silly lockFile 66e064ae-npm-lazy-cache-1-0-4-package-tgz tar:///home/coder/.npm/lazy-cache/1.0.4/package.tgz
1452 info preinstall lazy-cache@1.0.4
1453 verbose readDependencies using package.json deps
1454 verbose readDependencies using package.json deps
1455 silly resolved []
1456 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/lazy-cache
1457 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/lazy-cache
1458 verbose linkStuff [ true,
1458 verbose linkStuff   '/usr/local/lib/node_modules',
1458 verbose linkStuff   false,
1458 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules' ]
1459 info linkStuff lazy-cache@1.0.4
1460 verbose linkBins lazy-cache@1.0.4
1461 verbose linkMans lazy-cache@1.0.4
1462 verbose rebuildBundles lazy-cache@1.0.4
1463 info install lazy-cache@1.0.4
1464 info postinstall lazy-cache@1.0.4
1465 silly gunzTarPerm extractEntry package.json
1466 silly gunzTarPerm extractEntry README.md
1467 silly gunzTarPerm extractEntry index.js
1468 silly lockFile 59d15483-ht-align-node-modules-align-text tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text
1469 silly lockFile 59d15483-ht-align-node-modules-align-text tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text
1470 silly lockFile 646eabe5-npm-align-text-0-1-4-package-tgz tar:///home/coder/.npm/align-text/0.1.4/package.tgz
1471 silly lockFile 646eabe5-npm-align-text-0-1-4-package-tgz tar:///home/coder/.npm/align-text/0.1.4/package.tgz
1472 info preinstall align-text@0.1.4
1473 verbose readDependencies using package.json deps
1474 verbose readDependencies using package.json deps
1475 verbose cache add [ 'kind-of@^3.0.2', null ]
1476 verbose cache add name=undefined spec="kind-of@^3.0.2" args=["kind-of@^3.0.2",null]
1477 verbose parsed url { protocol: null,
1477 verbose parsed url   slashes: null,
1477 verbose parsed url   auth: null,
1477 verbose parsed url   host: null,
1477 verbose parsed url   port: null,
1477 verbose parsed url   hostname: null,
1477 verbose parsed url   hash: null,
1477 verbose parsed url   search: null,
1477 verbose parsed url   query: null,
1477 verbose parsed url   pathname: 'kind-of@^3.0.2',
1477 verbose parsed url   path: 'kind-of@^3.0.2',
1477 verbose parsed url   href: 'kind-of@^3.0.2' }
1478 verbose cache add name="kind-of" spec="^3.0.2" args=["kind-of","^3.0.2"]
1479 verbose parsed url { protocol: null,
1479 verbose parsed url   slashes: null,
1479 verbose parsed url   auth: null,
1479 verbose parsed url   host: null,
1479 verbose parsed url   port: null,
1479 verbose parsed url   hostname: null,
1479 verbose parsed url   hash: null,
1479 verbose parsed url   search: null,
1479 verbose parsed url   query: null,
1479 verbose parsed url   pathname: '^3.0.2',
1479 verbose parsed url   path: '^3.0.2',
1479 verbose parsed url   href: '^3.0.2' }
1480 verbose addNamed [ 'kind-of', '^3.0.2' ]
1481 verbose addNamed [ null, '>=3.0.2-0 <4.0.0-0' ]
1482 silly lockFile aca611df-kind-of-3-0-2 kind-of@^3.0.2
1483 verbose lock kind-of@^3.0.2 /home/coder/.npm/aca611df-kind-of-3-0-2.lock
1484 verbose cache add [ 'longest@^1.0.1', null ]
1485 verbose cache add name=undefined spec="longest@^1.0.1" args=["longest@^1.0.1",null]
1486 verbose parsed url { protocol: null,
1486 verbose parsed url   slashes: null,
1486 verbose parsed url   auth: null,
1486 verbose parsed url   host: null,
1486 verbose parsed url   port: null,
1486 verbose parsed url   hostname: null,
1486 verbose parsed url   hash: null,
1486 verbose parsed url   search: null,
1486 verbose parsed url   query: null,
1486 verbose parsed url   pathname: 'longest@^1.0.1',
1486 verbose parsed url   path: 'longest@^1.0.1',
1486 verbose parsed url   href: 'longest@^1.0.1' }
1487 verbose cache add name="longest" spec="^1.0.1" args=["longest","^1.0.1"]
1488 verbose parsed url { protocol: null,
1488 verbose parsed url   slashes: null,
1488 verbose parsed url   auth: null,
1488 verbose parsed url   host: null,
1488 verbose parsed url   port: null,
1488 verbose parsed url   hostname: null,
1488 verbose parsed url   hash: null,
1488 verbose parsed url   search: null,
1488 verbose parsed url   query: null,
1488 verbose parsed url   pathname: '^1.0.1',
1488 verbose parsed url   path: '^1.0.1',
1488 verbose parsed url   href: '^1.0.1' }
1489 verbose addNamed [ 'longest', '^1.0.1' ]
1490 verbose addNamed [ null, '>=1.0.1-0 <2.0.0-0' ]
1491 silly lockFile 0d8d68af-longest-1-0-1 longest@^1.0.1
1492 verbose lock longest@^1.0.1 /home/coder/.npm/0d8d68af-longest-1-0-1.lock
1493 verbose cache add [ 'repeat-string@^1.5.2', null ]
1494 verbose cache add name=undefined spec="repeat-string@^1.5.2" args=["repeat-string@^1.5.2",null]
1495 verbose parsed url { protocol: null,
1495 verbose parsed url   slashes: null,
1495 verbose parsed url   auth: null,
1495 verbose parsed url   host: null,
1495 verbose parsed url   port: null,
1495 verbose parsed url   hostname: null,
1495 verbose parsed url   hash: null,
1495 verbose parsed url   search: null,
1495 verbose parsed url   query: null,
1495 verbose parsed url   pathname: 'repeat-string@^1.5.2',
1495 verbose parsed url   path: 'repeat-string@^1.5.2',
1495 verbose parsed url   href: 'repeat-string@^1.5.2' }
1496 verbose cache add name="repeat-string" spec="^1.5.2" args=["repeat-string","^1.5.2"]
1497 verbose parsed url { protocol: null,
1497 verbose parsed url   slashes: null,
1497 verbose parsed url   auth: null,
1497 verbose parsed url   host: null,
1497 verbose parsed url   port: null,
1497 verbose parsed url   hostname: null,
1497 verbose parsed url   hash: null,
1497 verbose parsed url   search: null,
1497 verbose parsed url   query: null,
1497 verbose parsed url   pathname: '^1.5.2',
1497 verbose parsed url   path: '^1.5.2',
1497 verbose parsed url   href: '^1.5.2' }
1498 verbose addNamed [ 'repeat-string', '^1.5.2' ]
1499 verbose addNamed [ null, '>=1.5.2-0 <2.0.0-0' ]
1500 silly lockFile eaa514b6-repeat-string-1-5-2 repeat-string@^1.5.2
1501 verbose lock repeat-string@^1.5.2 /home/coder/.npm/eaa514b6-repeat-string-1-5-2.lock
1502 silly addNameRange { name: 'kind-of', range: '>=3.0.2-0 <4.0.0-0', hasData: false }
1503 silly addNameRange { name: 'longest', range: '>=1.0.1-0 <2.0.0-0', hasData: false }
1504 silly addNameRange { name: 'repeat-string',
1504 silly addNameRange   range: '>=1.5.2-0 <2.0.0-0',
1504 silly addNameRange   hasData: false }
1505 verbose url raw longest
1506 verbose url resolving [ 'https://registry.npmjs.org/', './longest' ]
1507 verbose url resolved https://registry.npmjs.org/longest
1508 info trying registry request attempt 1 at 15:00:01
1509 verbose etag "5RNJISO0RG4LDZKB1OVVUHYRU"
1510 http GET https://registry.npmjs.org/longest
1511 verbose url raw repeat-string
1512 verbose url resolving [ 'https://registry.npmjs.org/', './repeat-string' ]
1513 verbose url resolved https://registry.npmjs.org/repeat-string
1514 info trying registry request attempt 1 at 15:00:01
1515 verbose etag "UIFBZY9O146P6FCOVUIVIRZG"
1516 http GET https://registry.npmjs.org/repeat-string
1517 verbose url raw kind-of
1518 verbose url resolving [ 'https://registry.npmjs.org/', './kind-of' ]
1519 verbose url resolved https://registry.npmjs.org/kind-of
1520 info trying registry request attempt 1 at 15:00:01
1521 verbose etag "6I5F4O4LC8U6RLM2C6FO23QG2"
1522 http GET https://registry.npmjs.org/kind-of
1523 silly gunzTarPerm modes [ '755', '644' ]
1524 silly gunzTarPerm extractEntry package.json
1525 silly gunzTarPerm extractEntry README.md
1526 silly gunzTarPerm extractEntry index.js
1527 silly lockFile 06d59b26-er-align-node-modules-align-text tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text
1528 silly lockFile 06d59b26-er-align-node-modules-align-text tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text
1529 silly lockFile 646eabe5-npm-align-text-0-1-4-package-tgz tar:///home/coder/.npm/align-text/0.1.4/package.tgz
1530 silly lockFile 646eabe5-npm-align-text-0-1-4-package-tgz tar:///home/coder/.npm/align-text/0.1.4/package.tgz
1531 info preinstall align-text@0.1.4
1532 verbose readDependencies using package.json deps
1533 verbose readDependencies using package.json deps
1534 verbose cache add [ 'kind-of@^3.0.2', null ]
1535 verbose cache add name=undefined spec="kind-of@^3.0.2" args=["kind-of@^3.0.2",null]
1536 verbose parsed url { protocol: null,
1536 verbose parsed url   slashes: null,
1536 verbose parsed url   auth: null,
1536 verbose parsed url   host: null,
1536 verbose parsed url   port: null,
1536 verbose parsed url   hostname: null,
1536 verbose parsed url   hash: null,
1536 verbose parsed url   search: null,
1536 verbose parsed url   query: null,
1536 verbose parsed url   pathname: 'kind-of@^3.0.2',
1536 verbose parsed url   path: 'kind-of@^3.0.2',
1536 verbose parsed url   href: 'kind-of@^3.0.2' }
1537 verbose cache add name="kind-of" spec="^3.0.2" args=["kind-of","^3.0.2"]
1538 verbose parsed url { protocol: null,
1538 verbose parsed url   slashes: null,
1538 verbose parsed url   auth: null,
1538 verbose parsed url   host: null,
1538 verbose parsed url   port: null,
1538 verbose parsed url   hostname: null,
1538 verbose parsed url   hash: null,
1538 verbose parsed url   search: null,
1538 verbose parsed url   query: null,
1538 verbose parsed url   pathname: '^3.0.2',
1538 verbose parsed url   path: '^3.0.2',
1538 verbose parsed url   href: '^3.0.2' }
1539 verbose addNamed [ 'kind-of', '^3.0.2' ]
1540 verbose cache add [ 'longest@^1.0.1', null ]
1541 verbose cache add name=undefined spec="longest@^1.0.1" args=["longest@^1.0.1",null]
1542 verbose parsed url { protocol: null,
1542 verbose parsed url   slashes: null,
1542 verbose parsed url   auth: null,
1542 verbose parsed url   host: null,
1542 verbose parsed url   port: null,
1542 verbose parsed url   hostname: null,
1542 verbose parsed url   hash: null,
1542 verbose parsed url   search: null,
1542 verbose parsed url   query: null,
1542 verbose parsed url   pathname: 'longest@^1.0.1',
1542 verbose parsed url   path: 'longest@^1.0.1',
1542 verbose parsed url   href: 'longest@^1.0.1' }
1543 verbose cache add name="longest" spec="^1.0.1" args=["longest","^1.0.1"]
1544 verbose parsed url { protocol: null,
1544 verbose parsed url   slashes: null,
1544 verbose parsed url   auth: null,
1544 verbose parsed url   host: null,
1544 verbose parsed url   port: null,
1544 verbose parsed url   hostname: null,
1544 verbose parsed url   hash: null,
1544 verbose parsed url   search: null,
1544 verbose parsed url   query: null,
1544 verbose parsed url   pathname: '^1.0.1',
1544 verbose parsed url   path: '^1.0.1',
1544 verbose parsed url   href: '^1.0.1' }
1545 verbose addNamed [ 'longest', '^1.0.1' ]
1546 verbose cache add [ 'repeat-string@^1.5.2', null ]
1547 verbose cache add name=undefined spec="repeat-string@^1.5.2" args=["repeat-string@^1.5.2",null]
1548 verbose parsed url { protocol: null,
1548 verbose parsed url   slashes: null,
1548 verbose parsed url   auth: null,
1548 verbose parsed url   host: null,
1548 verbose parsed url   port: null,
1548 verbose parsed url   hostname: null,
1548 verbose parsed url   hash: null,
1548 verbose parsed url   search: null,
1548 verbose parsed url   query: null,
1548 verbose parsed url   pathname: 'repeat-string@^1.5.2',
1548 verbose parsed url   path: 'repeat-string@^1.5.2',
1548 verbose parsed url   href: 'repeat-string@^1.5.2' }
1549 verbose cache add name="repeat-string" spec="^1.5.2" args=["repeat-string","^1.5.2"]
1550 verbose parsed url { protocol: null,
1550 verbose parsed url   slashes: null,
1550 verbose parsed url   auth: null,
1550 verbose parsed url   host: null,
1550 verbose parsed url   port: null,
1550 verbose parsed url   hostname: null,
1550 verbose parsed url   hash: null,
1550 verbose parsed url   search: null,
1550 verbose parsed url   query: null,
1550 verbose parsed url   pathname: '^1.5.2',
1550 verbose parsed url   path: '^1.5.2',
1550 verbose parsed url   href: '^1.5.2' }
1551 verbose addNamed [ 'repeat-string', '^1.5.2' ]
1552 http 304 https://registry.npmjs.org/kind-of
1553 silly registry.get cb [ 304,
1553 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:02 GMT',
1553 silly registry.get     via: '1.1 varnish',
1553 silly registry.get     'cache-control': 'max-age=300',
1553 silly registry.get     etag: '"6I5F4O4LC8U6RLM2C6FO23QG2"',
1553 silly registry.get     age: '94',
1553 silly registry.get     connection: 'keep-alive',
1553 silly registry.get     'x-served-by': 'cache-lhr6332-LHR',
1553 silly registry.get     'x-cache': 'HIT',
1553 silly registry.get     'x-cache-hits': '1',
1553 silly registry.get     'x-timer': 'S1466600402.536676,VS0,VE0',
1553 silly registry.get     vary: 'Accept-Encoding' } ]
1554 verbose etag kind-of from cache
1555 http 304 https://registry.npmjs.org/longest
1556 silly registry.get cb [ 304,
1556 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:02 GMT',
1556 silly registry.get     via: '1.1 varnish',
1556 silly registry.get     'cache-control': 'max-age=300',
1556 silly registry.get     etag: '"5RNJISO0RG4LDZKB1OVVUHYRU"',
1556 silly registry.get     age: '54',
1556 silly registry.get     connection: 'keep-alive',
1556 silly registry.get     'x-served-by': 'cache-lhr6344-LHR',
1556 silly registry.get     'x-cache': 'HIT',
1556 silly registry.get     'x-cache-hits': '1',
1556 silly registry.get     'x-timer': 'S1466600402.539460,VS0,VE0',
1556 silly registry.get     vary: 'Accept-Encoding' } ]
1557 verbose etag longest from cache
1558 http 304 https://registry.npmjs.org/repeat-string
1559 silly registry.get cb [ 304,
1559 silly registry.get   { date: 'Wed, 22 Jun 2016 13:00:02 GMT',
1559 silly registry.get     via: '1.1 varnish',
1559 silly registry.get     'cache-control': 'max-age=300',
1559 silly registry.get     etag: '"UIFBZY9O146P6FCOVUIVIRZG"',
1559 silly registry.get     age: '179',
1559 silly registry.get     connection: 'keep-alive',
1559 silly registry.get     'x-served-by': 'cache-lhr6333-LHR',
1559 silly registry.get     'x-cache': 'HIT',
1559 silly registry.get     'x-cache-hits': '1',
1559 silly registry.get     'x-timer': 'S1466600402.541953,VS0,VE0',
1559 silly registry.get     vary: 'Accept-Encoding' } ]
1560 verbose etag repeat-string from cache
1561 silly addNameRange number 2 { name: 'kind-of', range: '>=3.0.2-0 <4.0.0-0', hasData: true }
1562 silly addNameRange versions [ 'kind-of',
1562 silly addNameRange   [ '0.1.0',
1562 silly addNameRange     '0.1.1',
1562 silly addNameRange     '0.1.2',
1562 silly addNameRange     '1.0.0',
1562 silly addNameRange     '1.0.1',
1562 silly addNameRange     '1.1.0',
1562 silly addNameRange     '2.0.0',
1562 silly addNameRange     '2.0.1',
1562 silly addNameRange     '3.0.0',
1562 silly addNameRange     '3.0.1',
1562 silly addNameRange     '3.0.2',
1562 silly addNameRange     '3.0.3' ] ]
1563 verbose addNamed [ 'kind-of', '3.0.3' ]
1564 verbose addNamed [ '3.0.3', '3.0.3' ]
1565 silly lockFile e8a9e2e3-kind-of-3-0-3 kind-of@3.0.3
1566 verbose lock kind-of@3.0.3 /home/coder/.npm/e8a9e2e3-kind-of-3-0-3.lock
1567 silly addNameRange number 2 { name: 'longest', range: '>=1.0.1-0 <2.0.0-0', hasData: true }
1568 silly addNameRange versions [ 'longest',
1568 silly addNameRange   [ '0.1.0',
1568 silly addNameRange     '0.2.0',
1568 silly addNameRange     '0.2.1',
1568 silly addNameRange     '0.3.0',
1568 silly addNameRange     '0.3.1',
1568 silly addNameRange     '0.3.2',
1568 silly addNameRange     '1.0.0',
1568 silly addNameRange     '1.0.1' ] ]
1569 verbose addNamed [ 'longest', '1.0.1' ]
1570 verbose addNamed [ '1.0.1', '1.0.1' ]
1571 silly lockFile 9105dc4c-longest-1-0-1 longest@1.0.1
1572 verbose lock longest@1.0.1 /home/coder/.npm/9105dc4c-longest-1-0-1.lock
1573 silly addNameRange number 2 { name: 'repeat-string',
1573 silly addNameRange   range: '>=1.5.2-0 <2.0.0-0',
1573 silly addNameRange   hasData: true }
1574 silly addNameRange versions [ 'repeat-string',
1574 silly addNameRange   [ '0.1.0',
1574 silly addNameRange     '0.1.1',
1574 silly addNameRange     '0.1.2',
1574 silly addNameRange     '0.2.0',
1574 silly addNameRange     '0.2.1',
1574 silly addNameRange     '0.2.2',
1574 silly addNameRange     '1.0.0',
1574 silly addNameRange     '1.1.0',
1574 silly addNameRange     '1.2.0',
1574 silly addNameRange     '1.3.0',
1574 silly addNameRange     '1.4.0',
1574 silly addNameRange     '1.5.0',
1574 silly addNameRange     '1.5.1',
1574 silly addNameRange     '1.5.2',
1574 silly addNameRange     '1.5.4' ] ]
1575 verbose addNamed [ 'repeat-string', '1.5.4' ]
1576 verbose addNamed [ '1.5.4', '1.5.4' ]
1577 silly lockFile 8351261f-repeat-string-1-5-4 repeat-string@1.5.4
1578 verbose lock repeat-string@1.5.4 /home/coder/.npm/8351261f-repeat-string-1-5-4.lock
1579 silly lockFile e8a9e2e3-kind-of-3-0-3 kind-of@3.0.3
1580 silly lockFile e8a9e2e3-kind-of-3-0-3 kind-of@3.0.3
1581 silly lockFile aca611df-kind-of-3-0-2 kind-of@^3.0.2
1582 silly lockFile aca611df-kind-of-3-0-2 kind-of@^3.0.2
1583 silly lockFile 9105dc4c-longest-1-0-1 longest@1.0.1
1584 silly lockFile 9105dc4c-longest-1-0-1 longest@1.0.1
1585 silly lockFile 8351261f-repeat-string-1-5-4 repeat-string@1.5.4
1586 silly lockFile 8351261f-repeat-string-1-5-4 repeat-string@1.5.4
1587 silly lockFile 0d8d68af-longest-1-0-1 longest@^1.0.1
1588 silly lockFile 0d8d68af-longest-1-0-1 longest@^1.0.1
1589 silly lockFile eaa514b6-repeat-string-1-5-2 repeat-string@^1.5.2
1590 silly lockFile eaa514b6-repeat-string-1-5-2 repeat-string@^1.5.2
1591 silly resolved [ { name: 'kind-of',
1591 silly resolved     description: 'Get the native type of a value.',
1591 silly resolved     version: '3.0.3',
1591 silly resolved     homepage: 'https://github.com/jonschlinkert/kind-of',
1591 silly resolved     author:
1591 silly resolved      { name: 'Jon Schlinkert',
1591 silly resolved        url: 'https://github.com/jonschlinkert' },
1591 silly resolved     repository: { type: 'git', url: 'git://github.com/jonschlinkert/kind-of' },
1591 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/kind-of/issues' },
1591 silly resolved     license: 'MIT',
1591 silly resolved     files: [ 'index.js' ],
1591 silly resolved     main: 'index.js',
1591 silly resolved     engines: { node: '>=0.10.0' },
1591 silly resolved     scripts:
1591 silly resolved      { test: 'mocha',
1591 silly resolved        prepublish: 'browserify -o browser.js -e index.js -s index --bare' },
1591 silly resolved     dependencies: { 'is-buffer': '^1.0.2' },
1591 silly resolved     devDependencies:
1591 silly resolved      { 'ansi-bold': '^0.1.1',
1591 silly resolved        benchmarked: '^0.1.3',
1591 silly resolved        browserify: '^11.0.1',
1591 silly resolved        glob: '^4.3.5',
1591 silly resolved        'gulp-format-md': '^0.1.9',
1591 silly resolved        mocha: '*',
1591 silly resolved        should: '*',
1591 silly resolved        'type-of': '^2.0.1',
1591 silly resolved        typeof: '^1.0.0' },
1591 silly resolved     keywords:
1591 silly resolved      [ 'arguments',
1591 silly resolved        'array',
1591 silly resolved        'boolean',
1591 silly resolved        'check',
1591 silly resolved        'date',
1591 silly resolved        'function',
1591 silly resolved        'is',
1591 silly resolved        'is-type',
1591 silly resolved        'is-type-of',
1591 silly resolved        'kind',
1591 silly resolved        'kind-of',
1591 silly resolved        'number',
1591 silly resolved        'object',
1591 silly resolved        'regexp',
1591 silly resolved        'string',
1591 silly resolved        'test',
1591 silly resolved        'type',
1591 silly resolved        'type-of',
1591 silly resolved        'typeof',
1591 silly resolved        'types' ],
1591 silly resolved     verb:
1591 silly resolved      { related: [Object],
1591 silly resolved        toc: false,
1591 silly resolved        layout: 'default',
1591 silly resolved        tasks: [Object],
1591 silly resolved        plugins: [Object],
1591 silly resolved        lint: [Object],
1591 silly resolved        reflinks: [Object] },
1591 silly resolved     readme: '# kind-of [![NPM version](https://img.shields.io/npm/v/kind-of.svg?style=flat)](https://www.npmjs.com/package/kind-of) [![NPM downloads](https://img.shields.io/npm/dm/kind-of.svg?style=flat)](https://npmjs.org/package/kind-of) [![Build Status](https://img.shields.io/travis/jonschlinkert/kind-of.svg?style=flat)](https://travis-ci.org/jonschlinkert/kind-of)\n\nGet the native type of a value.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install kind-of --save\n```\n\nInstall with [bower](http://bower.io/)\n\n```sh\n$ bower install kind-of --save\n```\n\n## Usage\n\n> es5, browser and es6 ready\n\n```js\nvar kindOf = require(\'kind-of\');\n\nkindOf(undefined);\n//=> \'undefined\'\n\nkindOf(null);\n//=> \'null\'\n\nkindOf(true);\n//=> \'boolean\'\n\nkindOf(false);\n//=> \'boolean\'\n\nkindOf(new Boolean(true));\n//=> \'boolean\'\n\nkindOf(new Buffer(\'\'));\n//=> \'buffer\'\n\nkindOf(42);\n//=> \'number\'\n\nkindOf(new Number(42));\n//=> \'number\'\n\nkindOf(\'str\');\n//=> \'string\'\n\nkindOf(new String(\'str\'));\n//=> \'string\'\n\nkindOf(arguments);\n//=> \'arguments\'\n\nkindOf({});\n//=> \'object\'\n\nkindOf(Object.create(null));\n//=> \'object\'\n\nkindOf(new Test());\n//=> \'object\'\n\nkindOf(new Date());\n//=> \'date\'\n\nkindOf([]);\n//=> \'array\'\n\nkindOf([1, 2, 3]);\n//=> \'array\'\n\nkindOf(new Array());\n//=> \'array\'\n\nkindOf(/foo/);\n//=> \'regexp\'\n\nkindOf(new RegExp(\'foo\'));\n//=> \'regexp\'\n\nkindOf(function () {});\n//=> \'function\'\n\nkindOf(function * () {});\n//=> \'function\'\n\nkindOf(new Function());\n//=> \'function\'\n\nkindOf(new Map());\n//=> \'map\'\n\nkindOf(new WeakMap());\n//=> \'weakmap\'\n\nkindOf(new Set());\n//=> \'set\'\n\nkindOf(new WeakSet());\n//=> \'weakset\'\n\nkindOf(Symbol(\'str\'));\n//=> \'symbol\'\n\nkindOf(new Int8Array());\n//=> \'int8array\'\n\nkindOf(new Uint8Array());\n//=> \'uint8array\'\n\nkindOf(new Uint8ClampedArray());\n//=> \'uint8clampedarray\'\n\nkindOf(new Int16Array());\n//=> \'int16array\'\n\nkindOf(new Uint16Array());\n//=> \'uint16array\'\n\nkindOf(new Int32Array());\n//=> \'int32array\'\n\nkindOf(new Uint32Array());\n//=> \'uint32array\'\n\nkindOf(new Float32Array());\n//=> \'float32array\'\n\nkindOf(new Float64Array());\n//=> \'float64array\'\n```\n\n## Benchmarks\n\nBenchmarked against [typeof](http://github.com/CodingFu/typeof) and [type-of](https://github.com/ForbesLindesay/type-of).\nNote that performaces is slower for es6 features `Map`, `WeakMap`, `Set` and `WeakSet`.\n\n```bash\n#1: array\n  current x 23,329,397 ops/sec ±0.82% (94 runs sampled)\n  lib-type-of x 4,170,273 ops/sec ±0.55% (94 runs sampled)\n  lib-typeof x 9,686,935 ops/sec ±0.59% (98 runs sampled)\n\n#2: boolean\n  current x 27,197,115 ops/sec ±0.85% (94 runs sampled)\n  lib-type-of x 3,145,791 ops/sec ±0.73% (97 runs sampled)\n  lib-typeof x 9,199,562 ops/sec ±0.44% (99 runs sampled)\n\n#3: date\n  current x 20,190,117 ops/sec ±0.86% (92 runs sampled)\n  lib-type-of x 5,166,970 ops/sec ±0.74% (94 runs sampled)\n  lib-typeof x 9,610,821 ops/sec ±0.50% (96 runs sampled)\n\n#4: function\n  current x 23,855,460 ops/sec ±0.60% (97 runs sampled)\n  lib-type-of x 5,667,740 ops/sec ±0.54% (100 runs sampled)\n  lib-typeof x 10,010,644 ops/sec ±0.44% (100 runs sampled)\n\n#5: null\n  current x 27,061,047 ops/sec ±0.97% (96 runs sampled)\n  lib-type-of x 13,965,573 ops/sec ±0.62% (97 runs sampled)\n  lib-typeof x 8,460,194 ops/sec ±0.61% (97 runs sampled)\n\n#6: number\n  current x 25,075,682 ops/sec ±0.53% (99 runs sampled)\n  lib-type-of x 2,266,405 ops/sec ±0.41% (98 runs sampled)\n  lib-typeof x 9,821,481 ops/sec ±0.45% (99 runs sampled)\n\n#7: object\n  current x 3,348,980 ops/sec ±0.49% (99 runs sampled)\n  lib-type-of x 3,245,138 ops/sec ±0.60% (94 runs sampled)\n  lib-typeof x 9,262,952 ops/sec ±0.59% (99 runs sampled)\n\n#8: regex\n  current x 21,284,827 ops/sec ±0.72% (96 runs sampled)\n  lib-type-of x 4,689,241 ops/sec ±0.43% (100 runs sampled)\n  lib-typeof x 8,957,593 ops/sec ±0.62% (98 runs sampled)\n\n#9: string\n  current x 25,379,234 ops/sec ±0.58% (96 runs sampled)\n  lib-type-of x 3,635,148 ops/sec ±0.76% (93 runs sampled)\n  lib-typeof x 9,494,134 ops/sec ±0.49% (98 runs sampled)\n\n#10: undef\n  current x 27,459,221 ops/sec ±1.01% (93 runs sampled)\n  lib-type-of x 14,360,433 ops/sec ±0.52% (99 runs sampled)\n  lib-typeof x 23,202,868 ops/sec ±0.59% (94 runs sampled)\n```\n\n## Optimizations\n\nIn 7 out of 8 cases, this library is 2x-10x faster than other top libraries included in the benchmarks. There are a few things that lead to this performance advantage, none of them hard and fast rules, but all of them simple and repeatable in almost any code library:\n\n1. Optimize around the fastest and most common use cases first. Of course, this will change from project-to-project, but I took some time to understand how and why `typeof` checks were being used in my own libraries and other libraries I use a lot.\n2. Optimize around bottlenecks - In other words, the order in which conditionals are implemented is significant, because each check is only as fast as the failing checks that came before it. Here, the biggest bottleneck by far is checking for plain objects (an object that was created by the `Object` constructor). I opted to make this check happen by process of elimination rather than brute force up front (e.g. by using something like `val.constructor.name`), so that every other type check would not be penalized it.\n3. Don\'t do uneccessary processing - why do `.slice(8, -1).toLowerCase();` just to get the word `regex`? It\'s much faster to do `if (type === \'[object RegExp]\') return \'regex\'`\n\n## Related projects\n\nYou might also be interested in these projects:\n\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern.… [more](https://www.npmjs.com/package/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob)\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if the value is a number. comprehensive tests. | [homepage](https://github.com/jonschlinkert/is-number)\n* [is-primitive](https://www.npmjs.com/package/is-primitive): Returns `true` if the value is a primitive.  | [homepage](https://github.com/jonschlinkert/is-primitive)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/kind-of/issues/new).\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install verb && npm run docs\n```\n\nOr, if [verb](https://github.com/verbose/verb) is installed globally:\n\n```sh\n$ verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/kind-of/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on May 03, 2016._',
1591 silly resolved     readmeFilename: 'README.md',
1591 silly resolved     _id: 'kind-of@3.0.3',
1591 silly resolved     _from: 'kind-of@^3.0.2' },
1591 silly resolved   { name: 'longest',
1591 silly resolved     description: 'Get the longest item in an array.',
1591 silly resolved     version: '1.0.1',
1591 silly resolved     homepage: 'https://github.com/jonschlinkert/longest',
1591 silly resolved     author:
1591 silly resolved      { name: 'Jon Schlinkert',
1591 silly resolved        url: 'https://github.com/jonschlinkert' },
1591 silly resolved     repository:
1591 silly resolved      { type: 'git',
1591 silly resolved        url: 'https://github.com/jonschlinkert/longest.git' },
1591 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/longest/issues' },
1591 silly resolved     license:
1591 silly resolved      { type: 'MIT',
1591 silly resolved        url: 'https://github.com/jonschlinkert/longest/blob/master/LICENSE' },
1591 silly resolved     files: [ 'index.js' ],
1591 silly resolved     main: 'index.js',
1591 silly resolved     engines: { node: '>=0.10.0' },
1591 silly resolved     scripts: { test: 'mocha' },
1591 silly resolved     devDependencies: { 'fill-range': '^2.1.0', mocha: '*' },
1591 silly resolved     keywords: [ 'array', 'element', 'item', 'long', 'length', 'longest' ],
1591 silly resolved     readme: '# longest [![NPM version](https://badge.fury.io/js/longest.svg)](http://badge.fury.io/js/longest)  [![Build Status](https://travis-ci.org/jonschlinkert/longest.svg)](https://travis-ci.org/jonschlinkert/longest) \n\n> Get the longest item in an array.\n\n## Install with [npm](npmjs.org)\n\n```bash\nnpm i longest --save\n```\n### Install with [bower](https://github.com/bower/bower)\n\n```bash\nbower install longest --save\n```\n\n## Running tests\nInstall dev dependencies.\n\n```bash\nnpm i -d && npm test\n```\n\n## Usage\n\n```js\nvar longest = require(\'longest\');\nlongest([\'a\', \'abcde\', \'abc\']);\n//=> \'abcde\'\n\nlongest([\'a\', \'abcde\', \'abc\']).length;\n//=> 5\n```\n\n## Related projects\n* [longest-value](https://github.com/jonschlinkert/longest-value): Get the longest value for the given property from an array of objects. Useful for aligning values.\n* [right-align-values](https://github.com/jonschlinkert/right-align-values): Right align the values of a given property for each object in an array. Useful for creating text columns or tables.\n* [right-pad-values](https://github.com/jonschlinkert/right-pad-values): Right pad the values of a given property for each object in an array. Useful for creating text columns or tables.\n* [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.\n* [pad-right](https://github.com/jonschlinkert/pad-right): Right pad a string with zeros or a specified string. Fastest implementation.\n* [pad-left](https://github.com/jonschlinkert/pad-left): Left pad a string with zeros or a specified string. Fastest implementation.  \n\n## Running tests\nInstall dev dependencies.\n\n```bash\nnpm i -d && npm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/longest/issues)\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2015 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on March 31, 2015._',
1591 silly resolved     readmeFilename: 'README.md',
1591 silly resolved     _id: 'longest@1.0.1',
1591 silly resolved     _from: 'longest@^1.0.1' },
1591 silly resolved   { name: 'repeat-string',
1591 silly resolved     description: 'Repeat the given string n times. Fastest implementation for repeating a string.',
1591 silly resolved     version: '1.5.4',
1591 silly resolved     homepage: 'https://github.com/jonschlinkert/repeat-string',
1591 silly resolved     author:
1591 silly resolved      { name: 'Jon Schlinkert',
1591 silly resolved        url: 'http://github.com/jonschlinkert' },
1591 silly resolved     repository:
1591 silly resolved      { type: 'git',
1591 silly resolved        url: 'git://github.com/jonschlinkert/repeat-string' },
1591 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/repeat-string/issues' },
1591 silly resolved     license: 'MIT',
1591 silly resolved     files: [ 'index.js' ],
1591 silly resolved     main: 'index.js',
1591 silly resolved     engines: { node: '>=0.10' },
1591 silly resolved     scripts: { test: 'mocha' },
1591 silly resolved     devDependencies:
1591 silly resolved      { benchmarked: '^0.1.5',
1591 silly resolved        chalk: '^1.1.1',
1591 silly resolved        glob: '^7.0.0',
1591 silly resolved        'gulp-format-md': '^0.1.7',
1591 silly resolved        mocha: '*',
1591 silly resolved        repeating: '^2.0.0',
1591 silly resolved        should: '*' },
1591 silly resolved     keywords:
1591 silly resolved      [ 'fast',
1591 silly resolved        'fastest',
1591 silly resolved        'fill',
1591 silly resolved        'left',
1591 silly resolved        'left-pad',
1591 silly resolved        'multiple',
1591 silly resolved        'pad',
1591 silly resolved        'padding',
1591 silly resolved        'repeat',
1591 silly resolved        'repeating',
1591 silly resolved        'repetition',
1591 silly resolved        'right',
1591 silly resolved        'right-pad',
1591 silly resolved        'string',
1591 silly resolved        'times' ],
1591 silly resolved     verb:
1591 silly resolved      { related: [Object],
1591 silly resolved        toc: false,
1591 silly resolved        layout: 'default',
1591 silly resolved        tasks: [Object],
1591 silly resolved        plugins: [Object],
1591 silly resolved        reflinks: [Object] },
1591 silly resolved     readme: '# repeat-string [![NPM version](https://img.shields.io/npm/v/repeat-string.svg)](https://www.npmjs.com/package/repeat-string) [![Build Status](https://img.shields.io/travis/jonschlinkert/repeat-string.svg)](https://travis-ci.org/jonschlinkert/repeat-string)\n\n> Repeat the given string n times. Fastest implementation for repeating a string.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install repeat-string --save\n```\n\n## Usage\n\n### [repeat](index.js#L41)\n\nRepeat the given `string` the specified `number` of times.\n\n**Example:**\n\n**Params**\n\n* `string` **{String}**: The string to repeat\n* `number` **{Number}**: The number of times to repeat the string\n* `returns` **{String}**: Repeated string\n\n**Example**\n\n```js\nvar repeat = require(\'repeat-string\');\nrepeat(\'A\', 5);\n//=> AAAAA\n```\n\n## Benchmarks\n\nRepeat string is significantly faster than the native method (which is itself faster than [repeating](https://github.com/sindresorhus/repeating)):\n\n```sh\n#1: 5\n  native x 10,484,023 ops/sec ±1.24% (89 runs sampled)\n  repeat-string x 16,189,255 ops/sec ±1.05% (91 runs sampled)\n  repeating x 9,051,715 ops/sec ±1.18% (90 runs sampled)\n\n#2: 50\n  native x 7,975,566 ops/sec ±1.29% (91 runs sampled)\n  repeat-string x 15,317,972 ops/sec ±1.16% (87 runs sampled)\n  repeating x 6,279,112 ops/sec ±1.29% (89 runs sampled)\n\n#3: 250\n  native x 6,212,752 ops/sec ±1.33% (91 runs sampled)\n  repeat-string x 14,565,168 ops/sec ±0.83% (93 runs sampled)\n  repeating x 5,787,124 ops/sec ±1.25% (92 runs sampled)\n\n#4: 2000\n  native x 4,912,163 ops/sec ±1.27% (91 runs sampled)\n  repeat-string x 17,129,748 ops/sec ±1.01% (91 runs sampled)\n  repeating x 4,613,043 ops/sec ±1.37% (91 runs sampled)\n\n#5: 20000\n  native x 4,506,624 ops/sec ±1.33% (90 runs sampled)\n  repeat-string x 14,877,672 ops/sec ±1.00% (93 runs sampled)\n  repeating x 4,305,756 ops/sec ±1.36% (89 runs sampled)\n```\n\n**Run the benchmarks**\n\nInstall dev dependencies:\n\n```sh\nnpm i -d && node benchmark\n```\n\n## Related projects\n\n[repeat-element](https://www.npmjs.com/package/repeat-element): Create an array by repeating the given value n times. | [homepage](https://github.com/jonschlinkert/repeat-element)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/repeat-string/issues/new).\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install verb && npm run docs\n```\n\nOr, if [verb](https://github.com/verbose/verb) is installed globally:\n\n```sh\n$ verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2016 [Jon Schlinkert](http://github.com/jonschlinkert)\nReleased under the [MIT license](https://github.com/jonschlinkert/repeat-string/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on February 29, 2016._',
1591 silly resolved     readmeFilename: 'README.md',
1591 silly resolved     _id: 'repeat-string@1.5.4',
1591 silly resolved     _from: 'repeat-string@^1.5.2' } ]
1592 info install kind-of@3.0.3 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text
1593 info install longest@1.0.1 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text
1594 info install repeat-string@1.5.4 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text
1595 info installOne kind-of@3.0.3
1596 info installOne longest@1.0.1
1597 info installOne repeat-string@1.5.4
1598 silly resolved [ { name: 'kind-of',
1598 silly resolved     description: 'Get the native type of a value.',
1598 silly resolved     version: '3.0.3',
1598 silly resolved     homepage: 'https://github.com/jonschlinkert/kind-of',
1598 silly resolved     author:
1598 silly resolved      { name: 'Jon Schlinkert',
1598 silly resolved        url: 'https://github.com/jonschlinkert' },
1598 silly resolved     repository: { type: 'git', url: 'git://github.com/jonschlinkert/kind-of' },
1598 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/kind-of/issues' },
1598 silly resolved     license: 'MIT',
1598 silly resolved     files: [ 'index.js' ],
1598 silly resolved     main: 'index.js',
1598 silly resolved     engines: { node: '>=0.10.0' },
1598 silly resolved     scripts:
1598 silly resolved      { test: 'mocha',
1598 silly resolved        prepublish: 'browserify -o browser.js -e index.js -s index --bare' },
1598 silly resolved     dependencies: { 'is-buffer': '^1.0.2' },
1598 silly resolved     devDependencies:
1598 silly resolved      { 'ansi-bold': '^0.1.1',
1598 silly resolved        benchmarked: '^0.1.3',
1598 silly resolved        browserify: '^11.0.1',
1598 silly resolved        glob: '^4.3.5',
1598 silly resolved        'gulp-format-md': '^0.1.9',
1598 silly resolved        mocha: '*',
1598 silly resolved        should: '*',
1598 silly resolved        'type-of': '^2.0.1',
1598 silly resolved        typeof: '^1.0.0' },
1598 silly resolved     keywords:
1598 silly resolved      [ 'arguments',
1598 silly resolved        'array',
1598 silly resolved        'boolean',
1598 silly resolved        'check',
1598 silly resolved        'date',
1598 silly resolved        'function',
1598 silly resolved        'is',
1598 silly resolved        'is-type',
1598 silly resolved        'is-type-of',
1598 silly resolved        'kind',
1598 silly resolved        'kind-of',
1598 silly resolved        'number',
1598 silly resolved        'object',
1598 silly resolved        'regexp',
1598 silly resolved        'string',
1598 silly resolved        'test',
1598 silly resolved        'type',
1598 silly resolved        'type-of',
1598 silly resolved        'typeof',
1598 silly resolved        'types' ],
1598 silly resolved     verb:
1598 silly resolved      { related: [Object],
1598 silly resolved        toc: false,
1598 silly resolved        layout: 'default',
1598 silly resolved        tasks: [Object],
1598 silly resolved        plugins: [Object],
1598 silly resolved        lint: [Object],
1598 silly resolved        reflinks: [Object] },
1598 silly resolved     readme: '# kind-of [![NPM version](https://img.shields.io/npm/v/kind-of.svg?style=flat)](https://www.npmjs.com/package/kind-of) [![NPM downloads](https://img.shields.io/npm/dm/kind-of.svg?style=flat)](https://npmjs.org/package/kind-of) [![Build Status](https://img.shields.io/travis/jonschlinkert/kind-of.svg?style=flat)](https://travis-ci.org/jonschlinkert/kind-of)\n\nGet the native type of a value.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install kind-of --save\n```\n\nInstall with [bower](http://bower.io/)\n\n```sh\n$ bower install kind-of --save\n```\n\n## Usage\n\n> es5, browser and es6 ready\n\n```js\nvar kindOf = require(\'kind-of\');\n\nkindOf(undefined);\n//=> \'undefined\'\n\nkindOf(null);\n//=> \'null\'\n\nkindOf(true);\n//=> \'boolean\'\n\nkindOf(false);\n//=> \'boolean\'\n\nkindOf(new Boolean(true));\n//=> \'boolean\'\n\nkindOf(new Buffer(\'\'));\n//=> \'buffer\'\n\nkindOf(42);\n//=> \'number\'\n\nkindOf(new Number(42));\n//=> \'number\'\n\nkindOf(\'str\');\n//=> \'string\'\n\nkindOf(new String(\'str\'));\n//=> \'string\'\n\nkindOf(arguments);\n//=> \'arguments\'\n\nkindOf({});\n//=> \'object\'\n\nkindOf(Object.create(null));\n//=> \'object\'\n\nkindOf(new Test());\n//=> \'object\'\n\nkindOf(new Date());\n//=> \'date\'\n\nkindOf([]);\n//=> \'array\'\n\nkindOf([1, 2, 3]);\n//=> \'array\'\n\nkindOf(new Array());\n//=> \'array\'\n\nkindOf(/foo/);\n//=> \'regexp\'\n\nkindOf(new RegExp(\'foo\'));\n//=> \'regexp\'\n\nkindOf(function () {});\n//=> \'function\'\n\nkindOf(function * () {});\n//=> \'function\'\n\nkindOf(new Function());\n//=> \'function\'\n\nkindOf(new Map());\n//=> \'map\'\n\nkindOf(new WeakMap());\n//=> \'weakmap\'\n\nkindOf(new Set());\n//=> \'set\'\n\nkindOf(new WeakSet());\n//=> \'weakset\'\n\nkindOf(Symbol(\'str\'));\n//=> \'symbol\'\n\nkindOf(new Int8Array());\n//=> \'int8array\'\n\nkindOf(new Uint8Array());\n//=> \'uint8array\'\n\nkindOf(new Uint8ClampedArray());\n//=> \'uint8clampedarray\'\n\nkindOf(new Int16Array());\n//=> \'int16array\'\n\nkindOf(new Uint16Array());\n//=> \'uint16array\'\n\nkindOf(new Int32Array());\n//=> \'int32array\'\n\nkindOf(new Uint32Array());\n//=> \'uint32array\'\n\nkindOf(new Float32Array());\n//=> \'float32array\'\n\nkindOf(new Float64Array());\n//=> \'float64array\'\n```\n\n## Benchmarks\n\nBenchmarked against [typeof](http://github.com/CodingFu/typeof) and [type-of](https://github.com/ForbesLindesay/type-of).\nNote that performaces is slower for es6 features `Map`, `WeakMap`, `Set` and `WeakSet`.\n\n```bash\n#1: array\n  current x 23,329,397 ops/sec ±0.82% (94 runs sampled)\n  lib-type-of x 4,170,273 ops/sec ±0.55% (94 runs sampled)\n  lib-typeof x 9,686,935 ops/sec ±0.59% (98 runs sampled)\n\n#2: boolean\n  current x 27,197,115 ops/sec ±0.85% (94 runs sampled)\n  lib-type-of x 3,145,791 ops/sec ±0.73% (97 runs sampled)\n  lib-typeof x 9,199,562 ops/sec ±0.44% (99 runs sampled)\n\n#3: date\n  current x 20,190,117 ops/sec ±0.86% (92 runs sampled)\n  lib-type-of x 5,166,970 ops/sec ±0.74% (94 runs sampled)\n  lib-typeof x 9,610,821 ops/sec ±0.50% (96 runs sampled)\n\n#4: function\n  current x 23,855,460 ops/sec ±0.60% (97 runs sampled)\n  lib-type-of x 5,667,740 ops/sec ±0.54% (100 runs sampled)\n  lib-typeof x 10,010,644 ops/sec ±0.44% (100 runs sampled)\n\n#5: null\n  current x 27,061,047 ops/sec ±0.97% (96 runs sampled)\n  lib-type-of x 13,965,573 ops/sec ±0.62% (97 runs sampled)\n  lib-typeof x 8,460,194 ops/sec ±0.61% (97 runs sampled)\n\n#6: number\n  current x 25,075,682 ops/sec ±0.53% (99 runs sampled)\n  lib-type-of x 2,266,405 ops/sec ±0.41% (98 runs sampled)\n  lib-typeof x 9,821,481 ops/sec ±0.45% (99 runs sampled)\n\n#7: object\n  current x 3,348,980 ops/sec ±0.49% (99 runs sampled)\n  lib-type-of x 3,245,138 ops/sec ±0.60% (94 runs sampled)\n  lib-typeof x 9,262,952 ops/sec ±0.59% (99 runs sampled)\n\n#8: regex\n  current x 21,284,827 ops/sec ±0.72% (96 runs sampled)\n  lib-type-of x 4,689,241 ops/sec ±0.43% (100 runs sampled)\n  lib-typeof x 8,957,593 ops/sec ±0.62% (98 runs sampled)\n\n#9: string\n  current x 25,379,234 ops/sec ±0.58% (96 runs sampled)\n  lib-type-of x 3,635,148 ops/sec ±0.76% (93 runs sampled)\n  lib-typeof x 9,494,134 ops/sec ±0.49% (98 runs sampled)\n\n#10: undef\n  current x 27,459,221 ops/sec ±1.01% (93 runs sampled)\n  lib-type-of x 14,360,433 ops/sec ±0.52% (99 runs sampled)\n  lib-typeof x 23,202,868 ops/sec ±0.59% (94 runs sampled)\n```\n\n## Optimizations\n\nIn 7 out of 8 cases, this library is 2x-10x faster than other top libraries included in the benchmarks. There are a few things that lead to this performance advantage, none of them hard and fast rules, but all of them simple and repeatable in almost any code library:\n\n1. Optimize around the fastest and most common use cases first. Of course, this will change from project-to-project, but I took some time to understand how and why `typeof` checks were being used in my own libraries and other libraries I use a lot.\n2. Optimize around bottlenecks - In other words, the order in which conditionals are implemented is significant, because each check is only as fast as the failing checks that came before it. Here, the biggest bottleneck by far is checking for plain objects (an object that was created by the `Object` constructor). I opted to make this check happen by process of elimination rather than brute force up front (e.g. by using something like `val.constructor.name`), so that every other type check would not be penalized it.\n3. Don\'t do uneccessary processing - why do `.slice(8, -1).toLowerCase();` just to get the word `regex`? It\'s much faster to do `if (type === \'[object RegExp]\') return \'regex\'`\n\n## Related projects\n\nYou might also be interested in these projects:\n\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern.… [more](https://www.npmjs.com/package/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob)\n* [is-number](https://www.npmjs.com/package/is-number): Returns true if the value is a number. comprehensive tests. | [homepage](https://github.com/jonschlinkert/is-number)\n* [is-primitive](https://www.npmjs.com/package/is-primitive): Returns `true` if the value is a primitive.  | [homepage](https://github.com/jonschlinkert/is-primitive)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/kind-of/issues/new).\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install verb && npm run docs\n```\n\nOr, if [verb](https://github.com/verbose/verb) is installed globally:\n\n```sh\n$ verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/kind-of/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on May 03, 2016._',
1598 silly resolved     readmeFilename: 'README.md',
1598 silly resolved     _id: 'kind-of@3.0.3',
1598 silly resolved     _from: 'kind-of@^3.0.2' },
1598 silly resolved   { name: 'longest',
1598 silly resolved     description: 'Get the longest item in an array.',
1598 silly resolved     version: '1.0.1',
1598 silly resolved     homepage: 'https://github.com/jonschlinkert/longest',
1598 silly resolved     author:
1598 silly resolved      { name: 'Jon Schlinkert',
1598 silly resolved        url: 'https://github.com/jonschlinkert' },
1598 silly resolved     repository:
1598 silly resolved      { type: 'git',
1598 silly resolved        url: 'https://github.com/jonschlinkert/longest.git' },
1598 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/longest/issues' },
1598 silly resolved     license:
1598 silly resolved      { type: 'MIT',
1598 silly resolved        url: 'https://github.com/jonschlinkert/longest/blob/master/LICENSE' },
1598 silly resolved     files: [ 'index.js' ],
1598 silly resolved     main: 'index.js',
1598 silly resolved     engines: { node: '>=0.10.0' },
1598 silly resolved     scripts: { test: 'mocha' },
1598 silly resolved     devDependencies: { 'fill-range': '^2.1.0', mocha: '*' },
1598 silly resolved     keywords: [ 'array', 'element', 'item', 'long', 'length', 'longest' ],
1598 silly resolved     readme: '# longest [![NPM version](https://badge.fury.io/js/longest.svg)](http://badge.fury.io/js/longest)  [![Build Status](https://travis-ci.org/jonschlinkert/longest.svg)](https://travis-ci.org/jonschlinkert/longest) \n\n> Get the longest item in an array.\n\n## Install with [npm](npmjs.org)\n\n```bash\nnpm i longest --save\n```\n### Install with [bower](https://github.com/bower/bower)\n\n```bash\nbower install longest --save\n```\n\n## Running tests\nInstall dev dependencies.\n\n```bash\nnpm i -d && npm test\n```\n\n## Usage\n\n```js\nvar longest = require(\'longest\');\nlongest([\'a\', \'abcde\', \'abc\']);\n//=> \'abcde\'\n\nlongest([\'a\', \'abcde\', \'abc\']).length;\n//=> 5\n```\n\n## Related projects\n* [longest-value](https://github.com/jonschlinkert/longest-value): Get the longest value for the given property from an array of objects. Useful for aligning values.\n* [right-align-values](https://github.com/jonschlinkert/right-align-values): Right align the values of a given property for each object in an array. Useful for creating text columns or tables.\n* [right-pad-values](https://github.com/jonschlinkert/right-pad-values): Right pad the values of a given property for each object in an array. Useful for creating text columns or tables.\n* [repeat-string](https://github.com/jonschlinkert/repeat-string): Repeat the given string n times. Fastest implementation for repeating a string.\n* [pad-right](https://github.com/jonschlinkert/pad-right): Right pad a string with zeros or a specified string. Fastest implementation.\n* [pad-left](https://github.com/jonschlinkert/pad-left): Left pad a string with zeros or a specified string. Fastest implementation.  \n\n## Running tests\nInstall dev dependencies.\n\n```bash\nnpm i -d && npm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/longest/issues)\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2015 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on March 31, 2015._',
1598 silly resolved     readmeFilename: 'README.md',
1598 silly resolved     _id: 'longest@1.0.1',
1598 silly resolved     _from: 'longest@^1.0.1' },
1598 silly resolved   { name: 'repeat-string',
1598 silly resolved     description: 'Repeat the given string n times. Fastest implementation for repeating a string.',
1598 silly resolved     version: '1.5.4',
1598 silly resolved     homepage: 'https://github.com/jonschlinkert/repeat-string',
1598 silly resolved     author:
1598 silly resolved      { name: 'Jon Schlinkert',
1598 silly resolved        url: 'http://github.com/jonschlinkert' },
1598 silly resolved     repository:
1598 silly resolved      { type: 'git',
1598 silly resolved        url: 'git://github.com/jonschlinkert/repeat-string' },
1598 silly resolved     bugs: { url: 'https://github.com/jonschlinkert/repeat-string/issues' },
1598 silly resolved     license: 'MIT',
1598 silly resolved     files: [ 'index.js' ],
1598 silly resolved     main: 'index.js',
1598 silly resolved     engines: { node: '>=0.10' },
1598 silly resolved     scripts: { test: 'mocha' },
1598 silly resolved     devDependencies:
1598 silly resolved      { benchmarked: '^0.1.5',
1598 silly resolved        chalk: '^1.1.1',
1598 silly resolved        glob: '^7.0.0',
1598 silly resolved        'gulp-format-md': '^0.1.7',
1598 silly resolved        mocha: '*',
1598 silly resolved        repeating: '^2.0.0',
1598 silly resolved        should: '*' },
1598 silly resolved     keywords:
1598 silly resolved      [ 'fast',
1598 silly resolved        'fastest',
1598 silly resolved        'fill',
1598 silly resolved        'left',
1598 silly resolved        'left-pad',
1598 silly resolved        'multiple',
1598 silly resolved        'pad',
1598 silly resolved        'padding',
1598 silly resolved        'repeat',
1598 silly resolved        'repeating',
1598 silly resolved        'repetition',
1598 silly resolved        'right',
1598 silly resolved        'right-pad',
1598 silly resolved        'string',
1598 silly resolved        'times' ],
1598 silly resolved     verb:
1598 silly resolved      { related: [Object],
1598 silly resolved        toc: false,
1598 silly resolved        layout: 'default',
1598 silly resolved        tasks: [Object],
1598 silly resolved        plugins: [Object],
1598 silly resolved        reflinks: [Object] },
1598 silly resolved     readme: '# repeat-string [![NPM version](https://img.shields.io/npm/v/repeat-string.svg)](https://www.npmjs.com/package/repeat-string) [![Build Status](https://img.shields.io/travis/jonschlinkert/repeat-string.svg)](https://travis-ci.org/jonschlinkert/repeat-string)\n\n> Repeat the given string n times. Fastest implementation for repeating a string.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install repeat-string --save\n```\n\n## Usage\n\n### [repeat](index.js#L41)\n\nRepeat the given `string` the specified `number` of times.\n\n**Example:**\n\n**Params**\n\n* `string` **{String}**: The string to repeat\n* `number` **{Number}**: The number of times to repeat the string\n* `returns` **{String}**: Repeated string\n\n**Example**\n\n```js\nvar repeat = require(\'repeat-string\');\nrepeat(\'A\', 5);\n//=> AAAAA\n```\n\n## Benchmarks\n\nRepeat string is significantly faster than the native method (which is itself faster than [repeating](https://github.com/sindresorhus/repeating)):\n\n```sh\n#1: 5\n  native x 10,484,023 ops/sec ±1.24% (89 runs sampled)\n  repeat-string x 16,189,255 ops/sec ±1.05% (91 runs sampled)\n  repeating x 9,051,715 ops/sec ±1.18% (90 runs sampled)\n\n#2: 50\n  native x 7,975,566 ops/sec ±1.29% (91 runs sampled)\n  repeat-string x 15,317,972 ops/sec ±1.16% (87 runs sampled)\n  repeating x 6,279,112 ops/sec ±1.29% (89 runs sampled)\n\n#3: 250\n  native x 6,212,752 ops/sec ±1.33% (91 runs sampled)\n  repeat-string x 14,565,168 ops/sec ±0.83% (93 runs sampled)\n  repeating x 5,787,124 ops/sec ±1.25% (92 runs sampled)\n\n#4: 2000\n  native x 4,912,163 ops/sec ±1.27% (91 runs sampled)\n  repeat-string x 17,129,748 ops/sec ±1.01% (91 runs sampled)\n  repeating x 4,613,043 ops/sec ±1.37% (91 runs sampled)\n\n#5: 20000\n  native x 4,506,624 ops/sec ±1.33% (90 runs sampled)\n  repeat-string x 14,877,672 ops/sec ±1.00% (93 runs sampled)\n  repeating x 4,305,756 ops/sec ±1.36% (89 runs sampled)\n```\n\n**Run the benchmarks**\n\nInstall dev dependencies:\n\n```sh\nnpm i -d && node benchmark\n```\n\n## Related projects\n\n[repeat-element](https://www.npmjs.com/package/repeat-element): Create an array by repeating the given value n times. | [homepage](https://github.com/jonschlinkert/repeat-element)\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/repeat-string/issues/new).\n\n## Building docs\n\nGenerate readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install verb && npm run docs\n```\n\nOr, if [verb](https://github.com/verbose/verb) is installed globally:\n\n```sh\n$ verb\n```\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2016 [Jon Schlinkert](http://github.com/jonschlinkert)\nReleased under the [MIT license](https://github.com/jonschlinkert/repeat-string/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb), v0.9.0, on February 29, 2016._',
1598 silly resolved     readmeFilename: 'README.md',
1598 silly resolved     _id: 'repeat-string@1.5.4',
1598 silly resolved     _from: 'repeat-string@^1.5.2' } ]
1599 info install kind-of@3.0.3 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text
1600 info install longest@1.0.1 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text
1601 info install repeat-string@1.5.4 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text
1602 info installOne kind-of@3.0.3
1603 info installOne longest@1.0.1
1604 info installOne repeat-string@1.5.4
1605 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of unbuild
1606 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/longest unbuild
1607 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/repeat-string unbuild
1608 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of unbuild
1609 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/longest unbuild
1610 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/repeat-string unbuild
1611 verbose tar unpack /home/coder/.npm/kind-of/3.0.3/package.tgz
1612 silly lockFile 0df25747--align-text-node-modules-kind-of tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of
1613 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of /home/coder/.npm/0df25747--align-text-node-modules-kind-of.lock
1614 silly lockFile 91a3779a-er-npm-kind-of-3-0-3-package-tgz tar:///home/coder/.npm/kind-of/3.0.3/package.tgz
1615 verbose lock tar:///home/coder/.npm/kind-of/3.0.3/package.tgz /home/coder/.npm/91a3779a-er-npm-kind-of-3-0-3-package-tgz.lock
1616 verbose tar unpack /home/coder/.npm/longest/1.0.1/package.tgz
1617 silly lockFile 94dc0324--align-text-node-modules-longest tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/longest
1618 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/longest /home/coder/.npm/94dc0324--align-text-node-modules-longest.lock
1619 silly lockFile e9121693-er-npm-longest-1-0-1-package-tgz tar:///home/coder/.npm/longest/1.0.1/package.tgz
1620 verbose lock tar:///home/coder/.npm/longest/1.0.1/package.tgz /home/coder/.npm/e9121693-er-npm-longest-1-0-1-package-tgz.lock
1621 verbose tar unpack /home/coder/.npm/repeat-string/1.5.4/package.tgz
1622 silly lockFile 3aeb8564--text-node-modules-repeat-string tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/repeat-string
1623 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/repeat-string /home/coder/.npm/3aeb8564--text-node-modules-repeat-string.lock
1624 silly lockFile 9f23d276--repeat-string-1-5-4-package-tgz tar:///home/coder/.npm/repeat-string/1.5.4/package.tgz
1625 verbose lock tar:///home/coder/.npm/repeat-string/1.5.4/package.tgz /home/coder/.npm/9f23d276--repeat-string-1-5-4-package-tgz.lock
1626 verbose tar unpack /home/coder/.npm/kind-of/3.0.3/package.tgz
1627 silly lockFile cf88c2f7--align-text-node-modules-kind-of tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of
1628 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of /home/coder/.npm/cf88c2f7--align-text-node-modules-kind-of.lock
1629 silly lockFile 91a3779a-er-npm-kind-of-3-0-3-package-tgz tar:///home/coder/.npm/kind-of/3.0.3/package.tgz
1630 verbose lock tar:///home/coder/.npm/kind-of/3.0.3/package.tgz /home/coder/.npm/91a3779a-er-npm-kind-of-3-0-3-package-tgz.lock
1631 verbose tar unpack /home/coder/.npm/longest/1.0.1/package.tgz
1632 silly lockFile 625796f3--align-text-node-modules-longest tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/longest
1633 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/longest /home/coder/.npm/625796f3--align-text-node-modules-longest.lock
1634 silly lockFile e9121693-er-npm-longest-1-0-1-package-tgz tar:///home/coder/.npm/longest/1.0.1/package.tgz
1635 verbose lock tar:///home/coder/.npm/longest/1.0.1/package.tgz /home/coder/.npm/e9121693-er-npm-longest-1-0-1-package-tgz.lock
1636 verbose tar unpack /home/coder/.npm/repeat-string/1.5.4/package.tgz
1637 silly lockFile 47f95c2b--text-node-modules-repeat-string tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/repeat-string
1638 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/repeat-string /home/coder/.npm/47f95c2b--text-node-modules-repeat-string.lock
1639 silly lockFile 9f23d276--repeat-string-1-5-4-package-tgz tar:///home/coder/.npm/repeat-string/1.5.4/package.tgz
1640 verbose lock tar:///home/coder/.npm/repeat-string/1.5.4/package.tgz /home/coder/.npm/9f23d276--repeat-string-1-5-4-package-tgz.lock
1641 silly gunzTarPerm modes [ '755', '644' ]
1642 silly gunzTarPerm modes [ '755', '644' ]
1643 silly gunzTarPerm modes [ '755', '644' ]
1644 silly gunzTarPerm extractEntry package.json
1645 silly gunzTarPerm extractEntry package.json
1646 silly gunzTarPerm extractEntry package.json
1647 silly gunzTarPerm extractEntry README.md
1648 silly gunzTarPerm extractEntry index.js
1649 silly gunzTarPerm extractEntry README.md
1650 silly gunzTarPerm extractEntry index.js
1651 silly gunzTarPerm extractEntry README.md
1652 silly gunzTarPerm extractEntry index.js
1653 silly lockFile 94dc0324--align-text-node-modules-longest tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/longest
1654 silly lockFile 94dc0324--align-text-node-modules-longest tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/longest
1655 silly lockFile e9121693-er-npm-longest-1-0-1-package-tgz tar:///home/coder/.npm/longest/1.0.1/package.tgz
1656 silly lockFile e9121693-er-npm-longest-1-0-1-package-tgz tar:///home/coder/.npm/longest/1.0.1/package.tgz
1657 info preinstall longest@1.0.1
1658 silly lockFile 3aeb8564--text-node-modules-repeat-string tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/repeat-string
1659 silly lockFile 3aeb8564--text-node-modules-repeat-string tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/repeat-string
1660 silly lockFile 9f23d276--repeat-string-1-5-4-package-tgz tar:///home/coder/.npm/repeat-string/1.5.4/package.tgz
1661 silly lockFile 9f23d276--repeat-string-1-5-4-package-tgz tar:///home/coder/.npm/repeat-string/1.5.4/package.tgz
1662 verbose readDependencies using package.json deps
1663 verbose readDependencies using package.json deps
1664 silly resolved []
1665 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/longest
1666 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/longest
1667 verbose linkStuff [ true,
1667 verbose linkStuff   '/usr/local/lib/node_modules',
1667 verbose linkStuff   false,
1667 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules' ]
1668 info linkStuff longest@1.0.1
1669 verbose linkBins longest@1.0.1
1670 verbose linkMans longest@1.0.1
1671 verbose rebuildBundles longest@1.0.1
1672 info install longest@1.0.1
1673 info preinstall repeat-string@1.5.4
1674 info postinstall longest@1.0.1
1675 verbose readDependencies using package.json deps
1676 silly lockFile 0df25747--align-text-node-modules-kind-of tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of
1677 silly lockFile 0df25747--align-text-node-modules-kind-of tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of
1678 verbose readDependencies using package.json deps
1679 silly resolved []
1680 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/repeat-string
1681 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/repeat-string
1682 verbose linkStuff [ true,
1682 verbose linkStuff   '/usr/local/lib/node_modules',
1682 verbose linkStuff   false,
1682 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules' ]
1683 info linkStuff repeat-string@1.5.4
1684 verbose linkBins repeat-string@1.5.4
1685 verbose linkMans repeat-string@1.5.4
1686 verbose rebuildBundles repeat-string@1.5.4
1687 silly lockFile 91a3779a-er-npm-kind-of-3-0-3-package-tgz tar:///home/coder/.npm/kind-of/3.0.3/package.tgz
1688 silly lockFile 91a3779a-er-npm-kind-of-3-0-3-package-tgz tar:///home/coder/.npm/kind-of/3.0.3/package.tgz
1689 info install repeat-string@1.5.4
1690 info postinstall repeat-string@1.5.4
1691 info preinstall kind-of@3.0.3
1692 verbose readDependencies using package.json deps
1693 verbose readDependencies using package.json deps
1694 verbose cache add [ 'is-buffer@^1.0.2', null ]
1695 verbose cache add name=undefined spec="is-buffer@^1.0.2" args=["is-buffer@^1.0.2",null]
1696 verbose parsed url { protocol: null,
1696 verbose parsed url   slashes: null,
1696 verbose parsed url   auth: null,
1696 verbose parsed url   host: null,
1696 verbose parsed url   port: null,
1696 verbose parsed url   hostname: null,
1696 verbose parsed url   hash: null,
1696 verbose parsed url   search: null,
1696 verbose parsed url   query: null,
1696 verbose parsed url   pathname: 'is-buffer@^1.0.2',
1696 verbose parsed url   path: 'is-buffer@^1.0.2',
1696 verbose parsed url   href: 'is-buffer@^1.0.2' }
1697 verbose cache add name="is-buffer" spec="^1.0.2" args=["is-buffer","^1.0.2"]
1698 verbose parsed url { protocol: null,
1698 verbose parsed url   slashes: null,
1698 verbose parsed url   auth: null,
1698 verbose parsed url   host: null,
1698 verbose parsed url   port: null,
1698 verbose parsed url   hostname: null,
1698 verbose parsed url   hash: null,
1698 verbose parsed url   search: null,
1698 verbose parsed url   query: null,
1698 verbose parsed url   pathname: '^1.0.2',
1698 verbose parsed url   path: '^1.0.2',
1698 verbose parsed url   href: '^1.0.2' }
1699 verbose addNamed [ 'is-buffer', '^1.0.2' ]
1700 verbose addNamed [ null, '>=1.0.2-0 <2.0.0-0' ]
1701 silly lockFile 81e27b95-is-buffer-1-0-2 is-buffer@^1.0.2
1702 verbose lock is-buffer@^1.0.2 /home/coder/.npm/81e27b95-is-buffer-1-0-2.lock
1703 silly addNameRange { name: 'is-buffer',
1703 silly addNameRange   range: '>=1.0.2-0 <2.0.0-0',
1703 silly addNameRange   hasData: false }
1704 verbose url raw is-buffer
1705 verbose url resolving [ 'https://registry.npmjs.org/', './is-buffer' ]
1706 verbose url resolved https://registry.npmjs.org/is-buffer
1707 info trying registry request attempt 1 at 15:00:02
1708 verbose etag "1TOOEXVRC5AE4RFCHN7XQ07N0"
1709 http GET https://registry.npmjs.org/is-buffer
1710 silly gunzTarPerm modes [ '755', '644' ]
1711 silly gunzTarPerm modes [ '755', '644' ]
1712 silly gunzTarPerm modes [ '755', '644' ]
1713 silly gunzTarPerm extractEntry package.json
1714 silly gunzTarPerm extractEntry package.json
1715 silly gunzTarPerm extractEntry package.json
1716 silly gunzTarPerm extractEntry README.md
1717 silly gunzTarPerm extractEntry index.js
1718 silly gunzTarPerm extractEntry README.md
1719 silly gunzTarPerm extractEntry index.js
1720 silly gunzTarPerm extractEntry README.md
1721 silly gunzTarPerm extractEntry index.js
1722 silly lockFile 625796f3--align-text-node-modules-longest tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/longest
1723 silly lockFile 625796f3--align-text-node-modules-longest tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/longest
1724 silly lockFile e9121693-er-npm-longest-1-0-1-package-tgz tar:///home/coder/.npm/longest/1.0.1/package.tgz
1725 silly lockFile e9121693-er-npm-longest-1-0-1-package-tgz tar:///home/coder/.npm/longest/1.0.1/package.tgz
1726 silly lockFile 47f95c2b--text-node-modules-repeat-string tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/repeat-string
1727 silly lockFile 47f95c2b--text-node-modules-repeat-string tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/repeat-string
1728 silly lockFile 9f23d276--repeat-string-1-5-4-package-tgz tar:///home/coder/.npm/repeat-string/1.5.4/package.tgz
1729 silly lockFile 9f23d276--repeat-string-1-5-4-package-tgz tar:///home/coder/.npm/repeat-string/1.5.4/package.tgz
1730 info preinstall longest@1.0.1
1731 verbose readDependencies using package.json deps
1732 info preinstall repeat-string@1.5.4
1733 verbose readDependencies using package.json deps
1734 silly resolved []
1735 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/longest
1736 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/longest
1737 verbose linkStuff [ true,
1737 verbose linkStuff   '/usr/local/lib/node_modules',
1737 verbose linkStuff   false,
1737 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules' ]
1738 info linkStuff longest@1.0.1
1739 verbose linkBins longest@1.0.1
1740 verbose linkMans longest@1.0.1
1741 verbose rebuildBundles longest@1.0.1
1742 info install longest@1.0.1
1743 verbose readDependencies using package.json deps
1744 info postinstall longest@1.0.1
1745 verbose readDependencies using package.json deps
1746 silly resolved []
1747 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/repeat-string
1748 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/repeat-string
1749 verbose linkStuff [ true,
1749 verbose linkStuff   '/usr/local/lib/node_modules',
1749 verbose linkStuff   false,
1749 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules' ]
1750 info linkStuff repeat-string@1.5.4
1751 verbose linkBins repeat-string@1.5.4
1752 verbose linkMans repeat-string@1.5.4
1753 verbose rebuildBundles repeat-string@1.5.4
1754 info install repeat-string@1.5.4
1755 silly lockFile cf88c2f7--align-text-node-modules-kind-of tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of
1756 silly lockFile cf88c2f7--align-text-node-modules-kind-of tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of
1757 info postinstall repeat-string@1.5.4
1758 silly lockFile 91a3779a-er-npm-kind-of-3-0-3-package-tgz tar:///home/coder/.npm/kind-of/3.0.3/package.tgz
1759 silly lockFile 91a3779a-er-npm-kind-of-3-0-3-package-tgz tar:///home/coder/.npm/kind-of/3.0.3/package.tgz
1760 info preinstall kind-of@3.0.3
1761 verbose readDependencies using package.json deps
1762 verbose readDependencies using package.json deps
1763 verbose cache add [ 'is-buffer@^1.0.2', null ]
1764 verbose cache add name=undefined spec="is-buffer@^1.0.2" args=["is-buffer@^1.0.2",null]
1765 verbose parsed url { protocol: null,
1765 verbose parsed url   slashes: null,
1765 verbose parsed url   auth: null,
1765 verbose parsed url   host: null,
1765 verbose parsed url   port: null,
1765 verbose parsed url   hostname: null,
1765 verbose parsed url   hash: null,
1765 verbose parsed url   search: null,
1765 verbose parsed url   query: null,
1765 verbose parsed url   pathname: 'is-buffer@^1.0.2',
1765 verbose parsed url   path: 'is-buffer@^1.0.2',
1765 verbose parsed url   href: 'is-buffer@^1.0.2' }
1766 verbose cache add name="is-buffer" spec="^1.0.2" args=["is-buffer","^1.0.2"]
1767 verbose parsed url { protocol: null,
1767 verbose parsed url   slashes: null,
1767 verbose parsed url   auth: null,
1767 verbose parsed url   host: null,
1767 verbose parsed url   port: null,
1767 verbose parsed url   hostname: null,
1767 verbose parsed url   hash: null,
1767 verbose parsed url   search: null,
1767 verbose parsed url   query: null,
1767 verbose parsed url   pathname: '^1.0.2',
1767 verbose parsed url   path: '^1.0.2',
1767 verbose parsed url   href: '^1.0.2' }
1768 verbose addNamed [ 'is-buffer', '^1.0.2' ]
1769 http 200 https://registry.npmjs.org/is-buffer
1770 silly registry.get cb [ 200,
1770 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
1770 silly registry.get     etag: '"307M85SGF48SDNFKWO1ACHF1L"',
1770 silly registry.get     'content-type': 'application/json',
1770 silly registry.get     'cache-control': 'max-age=300',
1770 silly registry.get     'content-length': '12154',
1770 silly registry.get     'accept-ranges': 'bytes',
1770 silly registry.get     date: 'Wed, 22 Jun 2016 13:00:03 GMT',
1770 silly registry.get     via: '1.1 varnish',
1770 silly registry.get     age: '45',
1770 silly registry.get     connection: 'keep-alive',
1770 silly registry.get     'x-served-by': 'cache-lhr6331-LHR',
1770 silly registry.get     'x-cache': 'HIT',
1770 silly registry.get     'x-cache-hits': '1',
1770 silly registry.get     'x-timer': 'S1466600403.274174,VS0,VE0',
1770 silly registry.get     vary: 'Accept-Encoding' } ]
1771 silly addNameRange number 2 { name: 'is-buffer', range: '>=1.0.2-0 <2.0.0-0', hasData: true }
1772 silly addNameRange versions [ 'is-buffer',
1772 silly addNameRange   [ '1.0.0', '1.0.1', '1.0.2', '1.1.0', '1.1.1', '1.1.2', '1.1.3' ] ]
1773 verbose addNamed [ 'is-buffer', '1.1.3' ]
1774 verbose addNamed [ '1.1.3', '1.1.3' ]
1775 silly lockFile 7bb2e33a-is-buffer-1-1-3 is-buffer@1.1.3
1776 verbose lock is-buffer@1.1.3 /home/coder/.npm/7bb2e33a-is-buffer-1-1-3.lock
1777 silly lockFile 7bb2e33a-is-buffer-1-1-3 is-buffer@1.1.3
1778 silly lockFile 7bb2e33a-is-buffer-1-1-3 is-buffer@1.1.3
1779 silly lockFile 81e27b95-is-buffer-1-0-2 is-buffer@^1.0.2
1780 silly lockFile 81e27b95-is-buffer-1-0-2 is-buffer@^1.0.2
1781 silly resolved [ { name: 'is-buffer',
1781 silly resolved     description: 'Determine if an object is Buffer',
1781 silly resolved     version: '1.1.3',
1781 silly resolved     author:
1781 silly resolved      { name: 'Feross Aboukhadijeh',
1781 silly resolved        email: 'feross@feross.org',
1781 silly resolved        url: 'http://feross.org/' },
1781 silly resolved     bugs: { url: 'https://github.com/feross/is-buffer/issues' },
1781 silly resolved     dependencies: {},
1781 silly resolved     devDependencies: { standard: '^6.0.5', tape: '^4.0.0', zuul: '^3.0.0' },
1781 silly resolved     engines: { node: '>=0.12' },
1781 silly resolved     keywords:
1781 silly resolved      [ 'buffer',
1781 silly resolved        'buffers',
1781 silly resolved        'type',
1781 silly resolved        'core buffer',
1781 silly resolved        'browser buffer',
1781 silly resolved        'browserify',
1781 silly resolved        'typed array',
1781 silly resolved        'uint32array',
1781 silly resolved        'int16array',
1781 silly resolved        'int32array',
1781 silly resolved        'float32array',
1781 silly resolved        'float64array',
1781 silly resolved        'browser',
1781 silly resolved        'arraybuffer',
1781 silly resolved        'dataview' ],
1781 silly resolved     license: 'MIT',
1781 silly resolved     main: 'index.js',
1781 silly resolved     repository: { type: 'git', url: 'git://github.com/feross/is-buffer.git' },
1781 silly resolved     scripts:
1781 silly resolved      { test: 'standard && npm run test-node && npm run test-browser',
1781 silly resolved        'test-browser': 'zuul -- test/*.js',
1781 silly resolved        'test-browser-local': 'zuul --local -- test/*.js',
1781 silly resolved        'test-node': 'tape test/*.js' },
1781 silly resolved     testling: { files: 'test/*.js' },
1781 silly resolved     readme: '# is-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][npm-url]\n\n#### Determine if an object is a [`Buffer`](http://nodejs.org/api/buffer.html) (incl. [browser Buffers](https://github.com/feross/buffer))\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[travis-image]: https://img.shields.io/travis/feross/is-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/is-buffer\n[npm-image]: https://img.shields.io/npm/v/is-buffer.svg\n[npm-url]: https://npmjs.org/package/is-buffer\n[downloads-image]: https://img.shields.io/npm/dm/is-buffer.svg\n[saucelabs-image]: https://saucelabs.com/browser-matrix/is-buffer.svg\n[saucelabs-url]: https://saucelabs.com/u/is-buffer\n\n## Why not use `Buffer.isBuffer`?\n\nThis module lets you check if an object is a `Buffer` without using `Buffer.isBuffer` (which includes the whole [buffer](https://github.com/feross/buffer) module in [browserify](http://browserify.org/)).\n\nIt\'s future-proof and works in node too!\n\n## install\n\n```bash\nnpm install is-buffer\n```\n\n## usage\n\n```js\nvar isBuffer = require(\'is-buffer\')\n\nisBuffer(new Buffer(4)) // true\n\nisBuffer(undefined) // false\nisBuffer(null) // false\nisBuffer(\'\') // false\nisBuffer(true) // false\nisBuffer(false) // false\nisBuffer(0) // false\nisBuffer(1) // false\nisBuffer(1.0) // false\nisBuffer(\'string\') // false\nisBuffer({}) // false\nisBuffer(function foo () {}) // false\n```\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org).\n',
1781 silly resolved     readmeFilename: 'README.md',
1781 silly resolved     _id: 'is-buffer@1.1.3',
1781 silly resolved     _from: 'is-buffer@^1.0.2' } ]
1782 info install is-buffer@1.1.3 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of
1783 info installOne is-buffer@1.1.3
1784 warn engine is-buffer@1.1.3: wanted: {"node":">=0.12"} (current: {"node":"v0.10.25","npm":"1.3.10"})
1785 silly resolved [ { name: 'is-buffer',
1785 silly resolved     description: 'Determine if an object is Buffer',
1785 silly resolved     version: '1.1.3',
1785 silly resolved     author:
1785 silly resolved      { name: 'Feross Aboukhadijeh',
1785 silly resolved        email: 'feross@feross.org',
1785 silly resolved        url: 'http://feross.org/' },
1785 silly resolved     bugs: { url: 'https://github.com/feross/is-buffer/issues' },
1785 silly resolved     dependencies: {},
1785 silly resolved     devDependencies: { standard: '^6.0.5', tape: '^4.0.0', zuul: '^3.0.0' },
1785 silly resolved     engines: { node: '>=0.12' },
1785 silly resolved     keywords:
1785 silly resolved      [ 'buffer',
1785 silly resolved        'buffers',
1785 silly resolved        'type',
1785 silly resolved        'core buffer',
1785 silly resolved        'browser buffer',
1785 silly resolved        'browserify',
1785 silly resolved        'typed array',
1785 silly resolved        'uint32array',
1785 silly resolved        'int16array',
1785 silly resolved        'int32array',
1785 silly resolved        'float32array',
1785 silly resolved        'float64array',
1785 silly resolved        'browser',
1785 silly resolved        'arraybuffer',
1785 silly resolved        'dataview' ],
1785 silly resolved     license: 'MIT',
1785 silly resolved     main: 'index.js',
1785 silly resolved     repository: { type: 'git', url: 'git://github.com/feross/is-buffer.git' },
1785 silly resolved     scripts:
1785 silly resolved      { test: 'standard && npm run test-node && npm run test-browser',
1785 silly resolved        'test-browser': 'zuul -- test/*.js',
1785 silly resolved        'test-browser-local': 'zuul --local -- test/*.js',
1785 silly resolved        'test-node': 'tape test/*.js' },
1785 silly resolved     testling: { files: 'test/*.js' },
1785 silly resolved     readme: '# is-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][npm-url]\n\n#### Determine if an object is a [`Buffer`](http://nodejs.org/api/buffer.html) (incl. [browser Buffers](https://github.com/feross/buffer))\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[travis-image]: https://img.shields.io/travis/feross/is-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/is-buffer\n[npm-image]: https://img.shields.io/npm/v/is-buffer.svg\n[npm-url]: https://npmjs.org/package/is-buffer\n[downloads-image]: https://img.shields.io/npm/dm/is-buffer.svg\n[saucelabs-image]: https://saucelabs.com/browser-matrix/is-buffer.svg\n[saucelabs-url]: https://saucelabs.com/u/is-buffer\n\n## Why not use `Buffer.isBuffer`?\n\nThis module lets you check if an object is a `Buffer` without using `Buffer.isBuffer` (which includes the whole [buffer](https://github.com/feross/buffer) module in [browserify](http://browserify.org/)).\n\nIt\'s future-proof and works in node too!\n\n## install\n\n```bash\nnpm install is-buffer\n```\n\n## usage\n\n```js\nvar isBuffer = require(\'is-buffer\')\n\nisBuffer(new Buffer(4)) // true\n\nisBuffer(undefined) // false\nisBuffer(null) // false\nisBuffer(\'\') // false\nisBuffer(true) // false\nisBuffer(false) // false\nisBuffer(0) // false\nisBuffer(1) // false\nisBuffer(1.0) // false\nisBuffer(\'string\') // false\nisBuffer({}) // false\nisBuffer(function foo () {}) // false\n```\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org).\n',
1785 silly resolved     readmeFilename: 'README.md',
1785 silly resolved     _id: 'is-buffer@1.1.3',
1785 silly resolved     _from: 'is-buffer@^1.0.2' } ]
1786 info install is-buffer@1.1.3 into /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of
1787 info installOne is-buffer@1.1.3
1788 warn engine is-buffer@1.1.3: wanted: {"node":">=0.12"} (current: {"node":"v0.10.25","npm":"1.3.10"})
1789 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer unbuild
1790 info /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer unbuild
1791 verbose tar unpack /home/coder/.npm/is-buffer/1.1.3/package.tgz
1792 silly lockFile 1647e39f-s-kind-of-node-modules-is-buffer tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1793 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer /home/coder/.npm/1647e39f-s-kind-of-node-modules-is-buffer.lock
1794 silly lockFile 9c529bf1--npm-is-buffer-1-1-3-package-tgz tar:///home/coder/.npm/is-buffer/1.1.3/package.tgz
1795 verbose lock tar:///home/coder/.npm/is-buffer/1.1.3/package.tgz /home/coder/.npm/9c529bf1--npm-is-buffer-1-1-3-package-tgz.lock
1796 verbose tar unpack /home/coder/.npm/is-buffer/1.1.3/package.tgz
1797 silly lockFile 43c68d47-s-kind-of-node-modules-is-buffer tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1798 verbose lock tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer /home/coder/.npm/43c68d47-s-kind-of-node-modules-is-buffer.lock
1799 silly lockFile 9c529bf1--npm-is-buffer-1-1-3-package-tgz tar:///home/coder/.npm/is-buffer/1.1.3/package.tgz
1800 verbose lock tar:///home/coder/.npm/is-buffer/1.1.3/package.tgz /home/coder/.npm/9c529bf1--npm-is-buffer-1-1-3-package-tgz.lock
1801 silly gunzTarPerm modes [ '755', '644' ]
1802 silly gunzTarPerm extractEntry package.json
1803 silly gunzTarPerm extractEntry README.md
1804 silly gunzTarPerm extractEntry LICENSE
1805 silly gunzTarPerm extractEntry index.js
1806 silly gunzTarPerm extractEntry .travis.yml
1807 silly gunzTarPerm extractEntry .zuul.yml
1808 silly gunzTarPerm extractEntry test/basic.js
1809 silly lockFile 1647e39f-s-kind-of-node-modules-is-buffer tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1810 silly lockFile 1647e39f-s-kind-of-node-modules-is-buffer tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1811 silly lockFile 9c529bf1--npm-is-buffer-1-1-3-package-tgz tar:///home/coder/.npm/is-buffer/1.1.3/package.tgz
1812 silly lockFile 9c529bf1--npm-is-buffer-1-1-3-package-tgz tar:///home/coder/.npm/is-buffer/1.1.3/package.tgz
1813 info preinstall is-buffer@1.1.3
1814 verbose readDependencies using package.json deps
1815 verbose readDependencies using package.json deps
1816 silly resolved []
1817 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1818 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1819 verbose linkStuff [ true,
1819 verbose linkStuff   '/usr/local/lib/node_modules',
1819 verbose linkStuff   false,
1819 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of/node_modules' ]
1820 info linkStuff is-buffer@1.1.3
1821 verbose linkBins is-buffer@1.1.3
1822 verbose linkMans is-buffer@1.1.3
1823 verbose rebuildBundles is-buffer@1.1.3
1824 info install is-buffer@1.1.3
1825 info postinstall is-buffer@1.1.3
1826 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of
1827 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules/kind-of
1828 verbose linkStuff [ true,
1828 verbose linkStuff   '/usr/local/lib/node_modules',
1828 verbose linkStuff   false,
1828 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text/node_modules' ]
1829 info linkStuff kind-of@3.0.3
1830 verbose linkBins kind-of@3.0.3
1831 verbose linkMans kind-of@3.0.3
1832 verbose rebuildBundles kind-of@3.0.3
1833 verbose rebuildBundles [ 'is-buffer' ]
1834 info install kind-of@3.0.3
1835 info postinstall kind-of@3.0.3
1836 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text
1837 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules/align-text
1838 verbose linkStuff [ true,
1838 verbose linkStuff   '/usr/local/lib/node_modules',
1838 verbose linkStuff   false,
1838 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align/node_modules' ]
1839 info linkStuff align-text@0.1.4
1840 verbose linkBins align-text@0.1.4
1841 verbose linkMans align-text@0.1.4
1842 verbose rebuildBundles align-text@0.1.4
1843 verbose rebuildBundles [ 'kind-of', 'longest', 'repeat-string' ]
1844 info install align-text@0.1.4
1845 info postinstall align-text@0.1.4
1846 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align
1847 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/right-align
1848 verbose linkStuff [ true,
1848 verbose linkStuff   '/usr/local/lib/node_modules',
1848 verbose linkStuff   false,
1848 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules' ]
1849 info linkStuff right-align@0.1.3
1850 verbose linkBins right-align@0.1.3
1851 verbose linkMans right-align@0.1.3
1852 verbose rebuildBundles right-align@0.1.3
1853 verbose rebuildBundles [ 'align-text' ]
1854 info install right-align@0.1.3
1855 info postinstall right-align@0.1.3
1856 silly gunzTarPerm modes [ '755', '644' ]
1857 silly gunzTarPerm extractEntry package.json
1858 silly gunzTarPerm extractEntry README.md
1859 silly gunzTarPerm extractEntry LICENSE
1860 silly gunzTarPerm extractEntry index.js
1861 silly gunzTarPerm extractEntry .travis.yml
1862 silly gunzTarPerm extractEntry .zuul.yml
1863 silly gunzTarPerm extractEntry test/basic.js
1864 silly lockFile 43c68d47-s-kind-of-node-modules-is-buffer tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1865 silly lockFile 43c68d47-s-kind-of-node-modules-is-buffer tar:///usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1866 silly lockFile 9c529bf1--npm-is-buffer-1-1-3-package-tgz tar:///home/coder/.npm/is-buffer/1.1.3/package.tgz
1867 silly lockFile 9c529bf1--npm-is-buffer-1-1-3-package-tgz tar:///home/coder/.npm/is-buffer/1.1.3/package.tgz
1868 info preinstall is-buffer@1.1.3
1869 verbose readDependencies using package.json deps
1870 verbose readDependencies using package.json deps
1871 silly resolved []
1872 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1873 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of/node_modules/is-buffer
1874 verbose linkStuff [ true,
1874 verbose linkStuff   '/usr/local/lib/node_modules',
1874 verbose linkStuff   false,
1874 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of/node_modules' ]
1875 info linkStuff is-buffer@1.1.3
1876 verbose linkBins is-buffer@1.1.3
1877 verbose linkMans is-buffer@1.1.3
1878 verbose rebuildBundles is-buffer@1.1.3
1879 info install is-buffer@1.1.3
1880 info postinstall is-buffer@1.1.3
1881 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of
1882 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules/kind-of
1883 verbose linkStuff [ true,
1883 verbose linkStuff   '/usr/local/lib/node_modules',
1883 verbose linkStuff   false,
1883 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text/node_modules' ]
1884 info linkStuff kind-of@3.0.3
1885 verbose linkBins kind-of@3.0.3
1886 verbose linkMans kind-of@3.0.3
1887 verbose rebuildBundles kind-of@3.0.3
1888 verbose rebuildBundles [ 'is-buffer' ]
1889 info install kind-of@3.0.3
1890 info postinstall kind-of@3.0.3
1891 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text
1892 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules/align-text
1893 verbose linkStuff [ true,
1893 verbose linkStuff   '/usr/local/lib/node_modules',
1893 verbose linkStuff   false,
1893 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align/node_modules' ]
1894 info linkStuff align-text@0.1.4
1895 verbose linkBins align-text@0.1.4
1896 verbose linkMans align-text@0.1.4
1897 verbose rebuildBundles align-text@0.1.4
1898 verbose rebuildBundles [ 'kind-of', 'longest', 'repeat-string' ]
1899 info install align-text@0.1.4
1900 info postinstall align-text@0.1.4
1901 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align
1902 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules/center-align
1903 verbose linkStuff [ true,
1903 verbose linkStuff   '/usr/local/lib/node_modules',
1903 verbose linkStuff   false,
1903 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui/node_modules' ]
1904 info linkStuff center-align@0.1.3
1905 verbose linkBins center-align@0.1.3
1906 verbose linkMans center-align@0.1.3
1907 verbose rebuildBundles center-align@0.1.3
1908 verbose rebuildBundles [ 'align-text', 'lazy-cache' ]
1909 info install center-align@0.1.3
1910 info postinstall center-align@0.1.3
1911 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui
1912 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules/cliui
1913 verbose linkStuff [ true,
1913 verbose linkStuff   '/usr/local/lib/node_modules',
1913 verbose linkStuff   false,
1913 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs/node_modules' ]
1914 info linkStuff cliui@2.1.0
1915 verbose linkBins cliui@2.1.0
1916 verbose linkMans cliui@2.1.0
1917 verbose rebuildBundles cliui@2.1.0
1918 verbose rebuildBundles [ 'center-align', 'right-align', 'wordwrap' ]
1919 info install cliui@2.1.0
1920 info postinstall cliui@2.1.0
1921 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
1922 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules/yargs
1923 verbose linkStuff [ true,
1923 verbose linkStuff   '/usr/local/lib/node_modules',
1923 verbose linkStuff   false,
1923 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules/uglify-js/node_modules' ]
1924 info linkStuff yargs@3.10.0
1925 verbose linkBins yargs@3.10.0
1926 verbose linkMans yargs@3.10.0
1927 verbose rebuildBundles yargs@3.10.0
1928 verbose rebuildBundles [ 'camelcase', 'cliui', 'decamelize', 'window-size' ]
1929 info install yargs@3.10.0
1930 info postinstall yargs@3.10.0
1931 verbose about to build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
1932 info build /usr/local/lib/node_modules/handlebars/node_modules/uglify-js
1933 verbose linkStuff [ true,
1933 verbose linkStuff   '/usr/local/lib/node_modules',
1933 verbose linkStuff   false,
1933 verbose linkStuff   '/usr/local/lib/node_modules/handlebars/node_modules' ]
1934 info linkStuff uglify-js@2.6.4
1935 verbose linkBins uglify-js@2.6.4
1936 verbose link bins [ { uglifyjs: 'bin/uglifyjs' },
1936 verbose link bins   '/usr/local/lib/node_modules/handlebars/node_modules/.bin',
1936 verbose link bins   false ]
1937 verbose linkMans uglify-js@2.6.4
1938 verbose rebuildBundles uglify-js@2.6.4
1939 verbose rebuildBundles [ 'async', 'source-map', 'uglify-to-browserify', 'yargs' ]
1940 info install uglify-js@2.6.4
1941 info postinstall uglify-js@2.6.4
1942 verbose about to build /usr/local/lib/node_modules/handlebars
1943 info build /usr/local/lib/node_modules/handlebars
1944 verbose linkStuff [ true,
1944 verbose linkStuff   '/usr/local/lib/node_modules',
1944 verbose linkStuff   true,
1944 verbose linkStuff   '/usr/local/lib/node_modules' ]
1945 info linkStuff handlebars@4.0.5
1946 verbose linkBins handlebars@4.0.5
1947 verbose link bins [ { handlebars: 'bin/handlebars' }, '/usr/local/bin', true ]
1948 verbose linkMans handlebars@4.0.5
1949 verbose rebuildBundles handlebars@4.0.5
1950 verbose rebuildBundles [ '.bin', 'async', 'optimist', 'source-map', 'uglify-js' ]
1951 info /usr/local/lib/node_modules/handlebars unbuild
1952 info preuninstall handlebars@4.0.5
1953 info uninstall handlebars@4.0.5
1954 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild handlebars@4.0.5
1955 verbose /usr/local/bin,[object Object] binRoot
1956 info postuninstall handlebars@4.0.5
1957 error Error: ENOENT, chmod '/usr/local/lib/node_modules/handlebars/bin/handlebars'
1958 error If you need help, you may report this log at:
1958 error     <http://github.com/isaacs/npm/issues>
1958 error or email it to:
1958 error     <npm-@googlegroups.com>
1959 error System Linux 3.16.0-60-generic
1960 error command "/usr/bin/nodejs" "/usr/bin/npm" "install" "-g"
1961 error cwd /home/coder/projects/Nelisa
1962 error node -v v0.10.25
1963 error npm -v 1.3.10
1964 error path /usr/local/lib/node_modules/handlebars/bin/handlebars
1965 error code ENOENT
1966 error errno 34
1967 verbose exit [ 34, true ]
